{
  "openapi": "3.0.1",
  "info": {
      "description": "The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.",
      "title": "Yapily API",
      "version": "7.2.0",
      "contact": {
          "name": "Yapily Support",
          "url": "https://docs.yapily.com/pages/resources/support/",
          "email": "support@yapily.com"
      }
  },
  "servers": [
      {
          "url": "https://api.yapily.com"
      }
  ],
  "security": [
      {
      "basicAuth": [
      ]
      }
  ],
  "tags": [
      {
          "description": "The `Application` is the base entity that is used to interact with the API and contains a collection of `Institution` objects. You can have multiple Applications associated with your account e.g. a production application with live access to each `Institution` and a development application with access to sandboxes.",
          "name": "Application"
      },
      {
          "description": "The Users endpoints are used to manage each user (otherwise known as the PSU) in Yapily. Each user belongs to an Application and as a consequence, so do each `Consent` created for a particular `User`.",
          "name": "Users"
      },
      {
          "description": "An `Institution` object represents any Account Serving Payment Servicing Provider (ASPSP) that has been integrated and is accessible through the Yapily APIs (ASPSPs are entities that publish Read/Write APIs to permit, with customer consent, payments initiated by third party providers and/or make their customersï¿½ financial data available to third party providers via their API endpoints).<br><br>Any one of the following would be represented as Institution:<ul><li>Traditional banks e.g. Santander</li><li>Neo-banks e.g. Monzo</li><li>Building societies e.g. Cumberland Building Society</li></ul>",
          "name": "Institutions"
      },
      {
          "description": "The Consents endpoints are used to manage each `Consent` created by Yapily in response to an authorisation created for a user.<br><br>The `Consent` object contains data that identifies a user's consent for a specific `Institution` within a Yapily application. Other than the id of the consent, the `institution-id` for the corresponding `Institution` and the user identifiers (`user-uuid` and `application-user-id`), it contains various details that indicates how the `Consent` can be used.",
          "name": "Consents"
      },
      {
          "description": "Before calling [Financial Data](#yapily-api-financial-data) or [Payments](#yapily-api-payments) endpoints, a consent from an end-user must be obtained.<br><br>Consents are valid for up to 90 days for Financial Data endpoints and have a single-use for Payment endpoints i.e. a new consent must be obtained for each payment.<aside class=\"info\">NOTE: A user consent is also referred to as an 'Authorisation'.</aside>",
          "name": "Authorisations"
      },
      {
          "description": "In order to access a user's Financial Data, you are required to request an [Authorisation](#yapily-api-authorisations) from the user to share the account information the bank has. Once a `consent-token` is obtained, you can call the necessary Financial Data endpoint(s) to retrieve the user's data.",
          "name": "Financial Data"
      },
      {
          "description": "In order to make a Payment on behalf of a user, you are required to request an [Authorisation](#yapily-api-authorisations) from the user to authorise the user's account to make the payment from. Once a `consent-token` is obtained, you can call the necessary Payments endpoint(s) to execute a payment.",
          "name": "Payments"
      },
      {
          "description": "The Financial Profile endpoints assist in collating authorised consents for a user which can subsequently be used to classify user income streams across multiple accounts. For each income stream, the financial profile determines the frequency and score that describes how well the income stream fits to that schedule.\n\n",
          "name": "Financial Profile"
      },
      {
          "description": "The Notifications endpoints provide an interactive way for user to receive notifications according to different event-types. This feature is currently in private beta. Please reach out if you require access. \n\n",
          "name": "Notifications"
      },
      {
          "description": "Variable Recurring Payments enables transfer of money between accounts held by the same person or transfer of money for business payments. <br><br>In order to make Sweeping Variable Recurring Payments on behalf of a user, you are required to request an [Consent](#yapily-api-authorisations) from the user by calling the Sweeping Consent endpoint to authorise the user's account to make the payment. Once a `consent-token` is obtained, you can call the Payments endpoint to execute the Sweeping Variable Recurring Payments transaction. Before executing the payment, you have the option to confirm availability of funds in the user's account by calling the Funds Confirmation endpoint. <br><br>See [VRP Payments](https://docs.yapily.com/pages/key-concepts/payments/payment-execution/variable-recurring-payments/) for more information. ",
          "name": "Variable Recurring Payments"
      },
      {
        "description": "Hosted Payment Pages endpoints for payments products",
        "name": "Hosted Payment Pages"
      },
      {
        "description": "Hosted Consent Pages endpoints for data products",
        "name": "Hosted Consent Pages"
      },
      {
          "description": "The constraints endpoints can be used to retrieve institution specific data requirements and rules that will apply when performing other operations.",
          "name": "Constraints"
      },
      {
          "description": "Application Management endpoints help with creating and managing client sub-applications.",
          "name": "Application Management"
      },
      {
          "description": "Enrichment endpoints enable our customers to enrich transaction data. ",
          "name": "Enrichment"
      },
      {
          "description": "Webhook endpoints enable our customers to register webhooks to receive notifications for various webhook events categories for their application. Once registered successfully, customers should receive notifications for those events registered.",
          "name": "Webhooks"
      }
  ],
  "x-tagGroups": [
      {
          "name": "Endpoints",
          "tags": [
              "Application",
              "Users",
              "Institutions",
              "Consents",
              "Authorisations",
              "Financial Data",
              "Payments",
              "Financial Profile",
              "Notifications",
              "Variable Recurring Payments",
              "Hosted Payment Pages",
              "Hosted Consent Pages",
              "Constraints",
              "Application Management",
              "Enrichment",
              "Webhooks"
          ]
      }
  ],
  "paths": {
      "/account-auth-requests": {
          "x-yapily-features": [
              "INITIATE_ACCOUNT_REQUEST"
          ],
          "patch": {
              "description": "Used to prompt the account holder for continued access to their financial data. This endpoint should be used when a `Consent` that was previously `AUTHORIZED` can no longer be used to retrieve data.<br><br>See [Re-Authorisation](https://docs.yapily.com/pages/key-concepts/account-data/account-consents/#re-authorisation) for more information.",
              "operationId": "reAuthoriseAccount",
              "parameters": [
                  {
                      "description": "__Mandatory__. The `consent-token` containing the user's authorisation to make the request.",
                      "example": "{consentToken}",
                      "in": "header",
                      "name": "consent",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-corporate-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. The IP address of the PSU. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-ip-address",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "$ref": "#/components/parameters/SubAppHeader"
                  },
                  {
                      "description": "__Optional__. Used to obtain the raw request and response to and from the <code>Institution</code>.",
                      "in": "query",
                      "name": "raw",
                      "required": false,
                      "schema": {
                          "type": "boolean"
                      }
                  }
              ],
              "responses": {
                  "201": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "OBIE Example Response": {
                                      "$ref": "#/components/examples/obie-example-acc-auth-response-patch"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfAccountAuthorisationResponse"
                              }
                          }
                      },
                      "description": "Created"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Re-authorise Account Consent",
              "tags": [
                  "Authorisations"
              ]
          },
          "post": {
              "description": "Used to initiate the authorisation process and direct users to the login screen of their financial institution in order to give consent to access account data.<br><br>See [Redirect Account Flows](https://docs.yapily.com/pages/key-concepts/account-data/account-authorisation/redirect-account-flows/) for more information about this flow.<br><br>Feature: `INITIATE_ACCOUNT_REQUEST`",
              "operationId": "initiateAccountRequest",
              "parameters": [
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-corporate-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. The IP address of the PSU. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-ip-address",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                    "$ref": "#/components/parameters/SubAppHeader"
                  },
                  {
                      "description": "__Optional__. Used to obtain the raw request and response to and from the <code>Institution</code>.",
                      "in": "query",
                      "name": "raw",
                      "required": false,
                      "schema": {
                          "type": "boolean"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json;charset=UTF-8": {
                          "examples": {
                              "OBIE Example Request": {
                                  "$ref": "#/components/examples/obie-example-acc-auth-request"
                              }
                          },
                          "schema": {
                              "$ref": "#/components/schemas/AccountAuthorisationRequest"
                          }
                      }
                  },
                  "required": true
              },
              "responses": {
                  "201": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "OBIE Example Response": {
                                      "$ref": "#/components/examples/obie-example-acc-auth-response-post"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfAccountAuthorisationResponse"
                              }
                          }
                      },
                      "description": "Created"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Create Account Authorisation",
              "tags": [
                  "Authorisations"
              ]
          },
          "put": {
              "description": "Used to continue the authorisation process and for any `Institution` that contains the `INITIATE_PRE_AUTHORISATION` feature and direct user to the login screen of their financial institution in order to give consent to access account data. <br><br>See [Redirect Account Flows](https://docs.yapily.com/pages/key-concepts/account-data/account-authorisation/redirect-account-flows/) for more information about this flow. <br><br>Features: <ul><li>`INITIATE_ACCOUNT_REQUEST`</li><li>`INITIATE_PRE_AUTHORISATION`</li></ul>",
              "operationId": "updatePreAuthoriseAccountConsent",
              "parameters": [
                  {
                      "description": "__Mandatory__. The `consent-token` containing the user's authorisation to make the request.",
                      "example": "{consentToken}",
                      "in": "header",
                      "name": "consent",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-corporate-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. The IP address of the PSU. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-ip-address",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                    "$ref": "#/components/parameters/SubAppHeader"
                  },
                  {
                      "description": "__Optional__. Used to obtain the raw request and response to and from the <code>Institution</code>.",
                      "in": "query",
                      "name": "raw",
                      "required": false,
                      "schema": {
                          "type": "boolean"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json;charset=UTF-8": {
                          "examples": {
                              "Berlin Group Example Request": {
                                  "$ref": "#/components/examples/berlin-group-example-acc-auth-request"
                              }
                          },
                          "schema": {
                              "$ref": "#/components/schemas/AccountAuthorisationRequest"
                          }
                      }
                  },
                  "required": true
              },
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "OBIE Example Response": {
                                      "$ref": "#/components/examples/obie-example-acc-auth-response-put"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfAccountAuthorisationResponse"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Update Account Pre-authorisation",
              "tags": [
                  "Authorisations"
              ]
          }
      },
      "/accounts": {
          "x-yapily-features": [
              "ACCOUNTS",
              "ACCOUNTS_WITHOUT_BALANCE"
          ],
          "get": {
              "description": "Returns all accounts and balances for the end user associated with the presented consent token.<br><br>Feature: `ACCOUNTS`",
              "operationId": "getAccounts",
              "parameters": [
                  {
                      "description": "__Mandatory__. The `consent-token` containing the user's authorisation to make the request.",
                      "example": "{consentToken}",
                      "in": "header",
                      "name": "consent",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-corporate-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. The IP address of the PSU. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-ip-address",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "$ref": "#/components/parameters/SubAppHeader"
                  },
                  {
                      "description": "__Optional__. Used to obtain the raw request and response to and from the <code>Institution</code>.",
                      "in": "query",
                      "name": "raw",
                      "required": false,
                      "schema": {
                          "type": "boolean"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "OBIE Example Response": {
                                      "$ref": "#/components/examples/obie-example-accounts-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/AccountApiListResponse"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Get Accounts",
              "tags": [
                  "Financial Data"
              ]
          }
      },
      "/accounts/{accountId}": {
          "x-yapily-features": [
              "ACCOUNT",
              "ACCOUNT_WITHOUT_BALANCE"
          ],
          "get": {
              "description": "Returns the account and balance information for a user's specified account.<br><br>Feature: `ACCOUNT`",
              "operationId": "getAccount",
              "parameters": [
                  {
                      "description": "__Mandatory__. The account Id of the user's bank account.",
                      "in": "path",
                      "name": "accountId",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Mandatory__. The `consent-token` containing the user's authorisation to make the request.",
                      "example": "{consentToken}",
                      "in": "header",
                      "name": "consent",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-corporate-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. The IP address of the PSU. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-ip-address",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "$ref": "#/components/parameters/SubAppHeader"
                  },
                  {
                      "description": "__Optional__. Used to obtain the raw request and response to and from the <code>Institution</code>.",
                      "in": "query",
                      "name": "raw",
                      "required": false,
                      "schema": {
                          "type": "boolean"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "OBIE Example Response": {
                                      "$ref": "#/components/examples/obie-example-account-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfAccount"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Get Account",
              "tags": [
                  "Financial Data"
              ]
          }
      },
      "/accounts/{accountId}/balances": {
          "x-yapily-features": [
              "ACCOUNT_BALANCES"
          ],
          "get": {
              "description": "Returns the balance for the end user associated with the presented consent token.<br><br>Feature: `ACCOUNT_BALANCES`",
              "operationId": "getAccountBalances",
              "parameters": [
                  {
                      "description": "__Mandatory__. The account Id of the user's bank account.",
                      "in": "path",
                      "name": "accountId",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Mandatory__. The `consent-token` containing the user's authorisation to make the request.",
                      "example": "{consentToken}",
                      "in": "header",
                      "name": "consent",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-corporate-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. The IP address of the PSU. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-ip-address",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "$ref": "#/components/parameters/SubAppHeader"
                  },
                  {
                      "description": "__Optional__. Used to obtain the raw request and response to and from the <code>Institution</code>.",
                      "in": "query",
                      "name": "raw",
                      "required": false,
                      "schema": {
                          "type": "boolean"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Example response": {
                                      "$ref": "#/components/examples/example-acc-balance-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfBalances"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Get Account Balances",
              "tags": [
                  "Financial Data"
              ]
          }
      },
      "/accounts/{accountId}/beneficiaries": {
          "x-yapily-features": [
              "ACCOUNT_BENEFICIARIES"
          ],
          "get": {
              "description": "Returns all the beneficiaries of a user's account.<br><br>Feature: `ACCOUNT_BENEFICIARIES`",
              "operationId": "getBeneficiaries",
              "parameters": [
                  {
                      "description": "__Mandatory__. The account Id of the user's bank account.",
                      "in": "path",
                      "name": "accountId",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Mandatory__. The `consent-token` containing the user's authorisation to make the request.",
                      "example": "{consentToken}",
                      "in": "header",
                      "name": "consent",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "$ref": "#/components/parameters/SubAppHeader"
                  },
                  {
                      "description": "__Optional__. Used to obtain the raw request and response to and from the <code>Institution</code>.",
                      "in": "query",
                      "name": "raw",
                      "required": false,
                      "schema": {
                          "type": "boolean"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "OBIE Example Response": {
                                      "$ref": "#/components/examples/obie-example-acc-beneficiaries-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiListResponseOfBeneficiary"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Get Account Beneficiaries",
              "tags": [
                  "Financial Data"
              ]
          }
      },
      "/accounts/{accountId}/direct-debits": {
          "x-yapily-features": [
              "ACCOUNT_DIRECT_DEBITS"
          ],
          "get": {
              "description": "Returns the list of direct debits for an account.<br><br>Feature: `ACCOUNT_DIRECT_DEBITS`",
              "operationId": "getAccountDirectDebits",
              "parameters": [
                  {
                      "description": "__Mandatory__. The account Id of the user's bank account.",
                      "in": "path",
                      "name": "accountId",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Mandatory__. The `consent-token` containing the user's authorisation to make the request.",
                      "example": "{consentToken}",
                      "in": "header",
                      "name": "consent",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "$ref": "#/components/parameters/SubAppHeader"
                  },
                  {
                      "description": "__Optional__. The maximum number of transaction records to be returned. Must be between 1 and 1000.",
                      "in": "query",
                      "name": "limit",
                      "required": false,
                      "schema": {
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "description": "__Optional__. Used to obtain the raw request and response to and from the <code>Institution</code>.",
                      "in": "query",
                      "name": "raw",
                      "required": false,
                      "schema": {
                          "type": "boolean"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "OBIE Example Response": {
                                      "$ref": "#/components/examples/obie-example-acc-direct-debits-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiListResponseOfDirectDebitResponse"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Get Account Direct Debits",
              "tags": [
                  "Financial Data"
              ]
          }
      },
      "/accounts/{accountId}/periodic-payments": {
          "x-yapily-features": [
              "ACCOUNT_PERIODIC_PAYMENTS"
          ],
          "get": {
              "description": "Returns the list of periodic payments (standing orders in the UK) for an account.<br><br>Feature: `ACCOUNT_PERIODIC_PAYMENTS`",
              "operationId": "getAccountPeriodicPayments",
              "parameters": [
                  {
                      "description": "__Mandatory__. The account Id of the user's bank account.",
                      "in": "path",
                      "name": "accountId",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Mandatory__. The `consent-token` containing the user's authorisation to make the request.",
                      "example": "{consentToken}",
                      "in": "header",
                      "name": "consent",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "$ref": "#/components/parameters/SubAppHeader"
                  },
                  {
                      "description": "__Optional__. The maximum number of transaction records to be returned. Must be between 1 and 1000.",
                      "in": "query",
                      "name": "limit",
                      "required": false,
                      "schema": {
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "description": "__Optional__. Used to obtain the raw request and response to and from the <code>Institution</code>.",
                      "in": "query",
                      "name": "raw",
                      "required": false,
                      "schema": {
                          "type": "boolean"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "OBIE Example Response": {
                                      "$ref": "#/components/examples/obie-example-acc-periodic-payments-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiListResponseOfPaymentResponse"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Get Account Periodic Payments",
              "tags": [
                  "Financial Data"
              ]
          }
      },
      "/accounts/{accountId}/scheduled-payments": {
          "x-yapily-features": [
              "ACCOUNT_SCHEDULED_PAYMENTS"
          ],
          "get": {
              "description": "Returns the list of scheduled payments for an account.<br><br>Feature: `ACCOUNT_SCHEDULED_PAYMENTS`",
              "operationId": "getAccountScheduledPayments",
              "parameters": [
                  {
                      "description": "__Mandatory__. The account Id of the user's bank account.",
                      "in": "path",
                      "name": "accountId",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Mandatory__. The `consent-token` containing the user's authorisation to make the request.",
                      "example": "{consentToken}",
                      "in": "header",
                      "name": "consent",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "$ref": "#/components/parameters/SubAppHeader"
                  },
                  {
                      "description": "__Optional__. The maximum number of transaction records to be returned. Must be between 1 and 1000.",
                      "in": "query",
                      "name": "limit",
                      "required": false,
                      "schema": {
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "description": "__Optional__. Used to obtain the raw request and response to and from the <code>Institution</code>.",
                      "in": "query",
                      "name": "raw",
                      "required": false,
                      "schema": {
                          "type": "boolean"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "OBIE Example Response": {
                                      "$ref": "#/components/examples/obie-example-acc-scheduled-payments-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiListResponseOfPaymentResponse"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Get Account Scheduled Payments",
              "tags": [
                  "Financial Data"
              ]
          }
      },
      "/accounts/{accountId}/statements": {
          "x-yapily-features": [
              "ACCOUNT_STATEMENTS"
          ],
          "get": {
              "description": "Returns the list of statements for an account.<br><br>Feature: `ACCOUNT_STATEMENTS`",
              "operationId": "getStatements",
              "parameters": [
                  {
                      "description": "__Mandatory__. The `consent-token` containing the user's authorisation to make the request.",
                      "example": "{consentToken}",
                      "in": "header",
                      "name": "consent",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Mandatory__. The account Id of the user's bank account.",
                      "in": "path",
                      "name": "accountId",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "$ref": "#/components/parameters/SubAppHeader"
                  },
                  {
                      "description": "__Optional__. Returned transactions will be on or after this date (yyyy-MM-dd'T'HH:mm:ss.SSSZ). ",
                      "in": "query",
                      "name": "from",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Optional__. Returned transactions will be on or before this date (yyyy-MM-dd'T'HH:mm:ss.SSSZ).",
                      "in": "query",
                      "name": "before",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Optional__. The maximum number of transaction records to be returned. Must be between 1 and 1000.",
                      "in": "query",
                      "name": "limit",
                      "required": false,
                      "schema": {
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "description": "__Optional__. Sort transaction records by date ascending with 'date' or descending with '-date'. The default sort order is descending",
                      "in": "query",
                      "name": "sort",
                      "required": false,
                      "schema": {
                          "$ref": "#/components/schemas/SortEnum"
                      }
                  },
                  {
                      "description": "__Optional__. The number of transaction records to be skipped. Used primarily with paginated results.",
                      "in": "query",
                      "name": "offset",
                      "required": false,
                      "schema": {
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "description": "__Optional__. Used to obtain the raw request and response to and from the <code>Institution</code>.",
                      "in": "query",
                      "name": "raw",
                      "required": false,
                      "schema": {
                          "type": "boolean"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Example Response": {
                                      "$ref": "#/components/examples/account-statements-example-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiListResponseOfAccountStatement"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Get Account Statements",
              "tags": [
                  "Financial Data"
              ]
          }
      },
      "/accounts/{accountId}/statements/{statementId}": {
          "x-yapily-features": [
              "ACCOUNT_STATEMENT"
          ],
          "get": {
              "description": "Returns a statement for an account.<br><br>Feature: `ACCOUNT_STATEMENT`",
              "operationId": "getStatement",
              "parameters": [
                  {
                      "description": "__Mandatory__. The `consent-token` containing the user's authorisation to make the request.",
                      "in": "header",
                      "name": "consent",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Mandatory__. The account Id of the user's bank account.",
                      "in": "path",
                      "name": "accountId",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Mandatory__. The statement Id of the statement file.",
                      "in": "path",
                      "name": "statementId",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "$ref": "#/components/parameters/SubAppHeader"
                  },
                  {
                      "description": "__Optional__. Used to obtain the raw request and response to and from the <code>Institution</code>.",
                      "in": "query",
                      "name": "raw",
                      "required": false,
                      "schema": {
                          "type": "boolean"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Example Response": {
                                      "description": "Example Response",
                                      "value": {
                                          "meta": {
                                              "tracingId": "8bacaae3025647efa1891157993e32fb"
                                          },
                                          "data": {
                                              "id": "700014000000000000000002",
                                              "startDateTime": "2017-08-01T00:00:00Z",
                                              "endDateTime": "2017-08-31T23:59:59Z",
                                              "creationDateTime": "2017-09-01T00:00:00Z"
                                          }
                                      }
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfAccountStatement"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Get Account Statement",
              "tags": [
                  "Financial Data"
              ]
          }
      },
      "/accounts/{accountId}/statements/{statementId}/file": {
          "x-yapily-features": [
              "ACCOUNT_STATEMENT_FILE"
          ],
          "get": {
              "description": "Returns a PDF file of a statement for an account.<br><br>Feature: `ACCOUNT_STATEMENT_FILE`",
              "operationId": "getStatementFile",
              "parameters": [
                  {
                      "description": "__Mandatory__. The `consent-token` containing the user's authorisation to make the request.",
                      "example": "{consentToken}",
                      "in": "header",
                      "name": "consent",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Mandatory__. The account Id of the user's bank account.",
                      "in": "path",
                      "name": "accountId",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Mandatory__. The statement Id of the statement file.",
                      "in": "path",
                      "name": "statementId",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                    "$ref": "#/components/parameters/SubAppHeader"
                  },
                  {
                      "description": "__Optional__. Used to obtain the raw request and response to and from the <code>Institution</code>.",
                      "in": "query",
                      "name": "raw",
                      "required": false,
                      "schema": {
                          "type": "boolean"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/pdf": {
                              "schema": {
                                  "type": "string",
                                  "format": "binary"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Get Account Statement File",
              "tags": [
                  "Financial Data"
              ]
          }
      },
      "/accounts/{accountId}/transactions": {
          "x-yapily-features": [
              "ACCOUNT_TRANSACTIONS",
              "ACCOUNT_TRANSACTIONS_WITH_MERCHANT"
          ],
          "get": {
              "description": "Returns the account transactions for an account.<br><br>Feature: `ACCOUNT_TRANSACTIONS`",
              "operationId": "getTransactions",
              "parameters": [
                  {
                      "description": "__Mandatory__. The account Id of the user's bank account.",
                      "in": "path",
                      "name": "accountId",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Mandatory__. The `consent-token` containing the user's authorisation to make the request.",
                      "example": "{consentToken}",
                      "in": "header",
                      "name": "consent",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-corporate-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. The IP address of the PSU. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-ip-address",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "$ref": "#/components/parameters/SubAppHeader"
                  },
                  {
                      "description": "__Optional__. Acceptable value: `categorisation`. When set, will include enrichment data in the transactions returned. <br><br>Enrichment data is optional, e.g. when 'categorisation' enrichment data is requested, the enrichment response will include categorisation data and merchant name, only if it can be evaluated from the transaction. This service is limited for UK institution transactions currently. __This is a legacy feature and will be deprecated. Date TBC__",
                      "in": "query",
                      "name": "with",
                      "required": false,
                      "schema": {
                          "type": "array",
                          "items": {
                              "type": "string"
                          }
                      }
                  },
                  {
                      "description": "__Optional__. Returned transactions will be on or after this date (yyyy-MM-dd'T'HH:mm:ss.SSSZ). ",
                      "in": "query",
                      "name": "from",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Optional__. Returned transactions will be on or before this date (yyyy-MM-dd'T'HH:mm:ss.SSSZ).",
                      "in": "query",
                      "name": "before",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Optional__. The maximum number of transaction records to be returned. Must be between 1 and 1000.",
                      "in": "query",
                      "name": "limit",
                      "required": false,
                      "schema": {
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "description": "__Optional__. Sort transaction records by date ascending with 'date' or descending with '-date'. The default sort order is descending",
                      "in": "query",
                      "name": "sort",
                      "required": false,
                      "schema": {
                          "$ref": "#/components/schemas/SortEnum"
                      }
                  },
                  {
                      "description": "__Optional__. The number of transaction records to be skipped. Used primarily with paginated results.",
                      "in": "query",
                      "name": "offset",
                      "required": false,
                      "schema": {
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "description": "__Optional__. This property is not currently in use.",
                      "in": "query",
                      "name": "cursor",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Optional__. Used to obtain the raw request and response to and from the <code>Institution</code>.",
                      "in": "query",
                      "name": "raw",
                      "required": false,
                      "schema": {
                          "type": "boolean"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Example Response": {
                                      "$ref": "#/components/examples/account-transactions-example-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiListResponseOfTransaction"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Get Account Transactions",
              "tags": [
                  "Financial Data"
              ]
          }
      },
      "/categories/{country}": {
          "get": {
              "description": "Used to retrieve the list of categories returned by the Yapily Categorisation engine for a given locale. <br><br>See [Data Enrichment](https://docs.yapily.com/pages/key-concepts/account-data/data-enrichment/intro-to-data-enrichment/) for more information.",
              "operationId": "getCategories",
              "parameters": [
                  {
                      "description": "__Mandatory__. The 2 letter country code e.g. 'GB'.",
                      "in": "path",
                      "name": "country",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Example Response": {
                                      "$ref": "#/components/examples/categories-example-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiListResponseOfCategory"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Get Categories",
              "tags": [
                  "Financial Data"
              ]
          }
      },
      "/bulk-payment-auth-requests": {
          "x-yapily-features": [
              "INITIATE_BULK_PAYMENT"
          ],
          "post": {
              "description": "Used to initiate the authorisation process and direct users to the login screen of their financial Institution in order to give their consent for a bulk payment. See [Bulk Payments](https://docs.yapily.com/pages/key-concepts/payments/payment-execution/bulk-payments/) for more information. <br><br>See [Redirect Payment Flows](https://docs.yapily.com/pages/key-concepts/payments/payment-authorisation/redirect-payment-flows/) for more information about this flow.<br><br>Feature: `INITIATE_BULK_PAYMENT`",
              "operationId": "createBulkPaymentAuthorisation",
              "parameters": [
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-corporate-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. The IP address of the PSU. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-ip-address",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Optional__. Used to obtain the raw request and response to and from the <code>Institution</code>.",
                      "in": "query",
                      "name": "raw",
                      "required": false,
                      "schema": {
                          "type": "boolean"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json;charset=UTF-8": {
                          "examples": {
                              "UK Bulk Payment Example Request": {
                                  "$ref": "#/components/examples/uk-bulk-payment-auth-example-request"
                              }
                          },
                          "schema": {
                              "$ref": "#/components/schemas/BulkPaymentAuthorisationRequest"
                          }
                      }
                  },
                  "required": true
              },
              "responses": {
                  "201": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "UK Bulk Payment Example Response": {
                                      "$ref": "#/components/examples/uk-bulk-payment-auth-example-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfPaymentAuthorisationRequestResponse"
                              }
                          }
                      },
                      "description": "Created"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Create Bulk Payment Authorisation",
              "tags": [
                  "Authorisations"
              ]
          }
      },
      "/bulk-payments": {
          "x-yapily-features": [
              "CREATE_BULK_PAYMENT"
          ],
          "post": {
              "description": "Creates a bulk payment after obtaining the user's authorisation. <br><br>Feature: `CREATE_BULK_PAYMENT`",
              "operationId": "createBulkPayment",
              "parameters": [
                  {
                      "description": "__Mandatory__. The `consent-token` containing the user's authorisation to make the request.",
                      "example": "{consentToken}",
                      "in": "header",
                      "name": "consent",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-corporate-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. The IP address of the PSU. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-ip-address",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Optional__. Used to obtain the raw request and response to and from the <code>Institution</code>.",
                      "in": "query",
                      "name": "raw",
                      "required": false,
                      "schema": {
                          "type": "boolean"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json;charset=UTF-8": {
                          "examples": {
                              "UK Bulk Payment Example Request": {
                                  "$ref": "#/components/examples/uk-bulk-payment-example-request"
                              }
                          },
                          "schema": {
                              "$ref": "#/components/schemas/SubmitBulkPaymentRequest"
                          }
                      }
                  },
                  "required": true
              },
              "responses": {
                  "201": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "UK Bulk Payment Example Response": {
                                      "$ref": "#/components/examples/uk-bulk-payment-example-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfPaymentResponse"
                              }
                          }
                      },
                      "description": "Created"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Create Bulk Payment",
              "tags": [
                  "Payments"
              ]
          }
      },
      "/bulk-payments/{bulkPaymentId}": {
        "get": {
          "description": "Returns the bulk file status of the bulk payment for given bulkPaymentId",
          "summary": "Get Bulk Payment File Status",
          "tags": [
            "Payments"
          ],
          "operationId": "getBulkPaymentStatus",
          "parameters": [
            {
              "schema": {
                "type": "string"
              },
              "in": "header",
              "name": "consent",
              "description": "__Mandatory__. The `consent token` containing the user's authorisation to make the request.",
              "required": true
            },
            {
              "schema": {
                "type": "string"
              },
              "in": "path",
              "name": "bulkPaymentId",
              "description": "__Mandatory__. Bulk payment id returned when bulk payment request was submitted.",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "meta": {
                        "type": "object",
                        "properties": {
                          "tracingId": {
                            "type": "string"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Unique identifier of the Bulk Payment",
                            "type": "string"
                          },
                          "consentId": {
                            "description": "Identification of the consent.",
                            "type": "string"
                          },
                          "statusDetails": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "description": "Bulk file status. Enum: `COMPLETED` `PENDING` `FAILED` `UNKNOWN`"
                              },
                              "updatedAt": {
                                "type": "string"
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "examples": {
                    "Successful 200 OK": {
                      "value": {
                        "meta": {
                          "tracingId": "27b47dca-fb0f-4448-b470-1cd2d5516d0f"
                        },
                        "data": {
                          "id": "76ad88c7-6e99-4a16-a277-e428a73d1e86",
                          "consentId": "5daeb980-5ff5-49db-b7a0-e93dd9c93533",
                          "statusDetails": {
                            "status": "COMPLETED",
                            "updatedAt": "2024-07-25T18:14:52.672Z"
                          },
                          "createdAt": "2024-07-25T18:14:52.672Z"
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Required parameter missing or invalid",
              "content": {
                "application/json;charset=UTF-8": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiErrorResponseV2"
                  },
                  "examples": {
                    "Example-1": {
                      "$ref": "#/components/examples/400-error-response"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Authentication Error",
              "content": {
                "application/json;charset=UTF-8": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiErrorResponseV2"
                  },
                  "examples": {
                    "Example-1": {
                      "$ref": "#/components/examples/401-error-response"
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Bulk payment not found for provided id",
              "content": {
                "application/json;charset=UTF-8": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiErrorResponseV2"
                  },
                  "examples": {
                    "Example-1": {
                      "$ref": "#/components/examples/404-error-response"
                    }
                  }
                }
              }
            },
            "500": {
              "description": "An unexpected error occurred.",
              "content": {
                "application/json;charset=UTF-8": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiErrorResponseV2"
                  },
                  "examples": {
                    "Example-1": {
                      "$ref": "#/components/examples/500-error-response"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/consent-auth-code": {
          "post": {
              "description": "Used to obtain a Yapily Consent object containing the `consentToken` once the user has authenticated and you have an OAuth2 authorisation code `auth-code` and state `auth-state`.",
              "operationId": "createConsentWithCode",
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/ConsentAuthCodeRequest"
                          }
                      }
                  },
                  "required": true
              },
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Example Response": {
                                      "$ref": "#/components/examples/consent-auth-code-example-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/Consent"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Exchange OAuth2 Code",
              "tags": [
                  "Consents"
              ]
          }
      },
      "/consent-one-time-token": {
          "post": {
              "description": "Exchange a One-time-token for the consent token",
              "operationId": "getConsentBySingleAccessConsent",
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/OneTimeTokenRequest"
                          }
                      }
                  },
                  "required": true
              },
              "responses": {
                  "201": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Example Response": {
                                      "$ref": "#/components/examples/consent-one-time-token-example-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/Consent"
                              }
                          }
                      },
                      "description": "Created"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Exchange One Time Token",
              "tags": [
                  "Consents"
              ]
          }
      },
      "/consents": {
          "get": {
              "description": "Used to retrieve all the consents created for each user within an application",
              "operationId": "getConsents",
              "parameters": [
                  {
                      "description": "__Optional__. Filter records based on the list of `applicationUserId` users provided.",
                      "in": "query",
                      "name": "filter[applicationUserId]",
                      "required": false,
                      "schema": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                              "type": "string"
                          }
                      }
                  },
                  {
                      "description": "__Optional__. Filter records based on the list of `userUuid` users provided.",
                      "in": "query",
                      "name": "filter[userUuid]",
                      "required": false,
                      "schema": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                              "type": "string",
                              "format": "uuid"
                          }
                      }
                  },
                  {
                      "description": "__Optional__. Filter records based on the list of `Institution` provided.",
                      "in": "query",
                      "name": "filter[institution]",
                      "required": false,
                      "schema": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                              "type": "string"
                          }
                      }
                  },
                  {
                      "description": "__Optional__. Filter records based on the list of `Consent` [statuses](https://docs.yapily.com/api/reference/#operation/getConsents!c=200&path=data/status&t=response).",
                      "in": "query",
                      "name": "filter[status]",
                      "required": false,
                      "schema": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                              "type": "string"
                          }
                      }
                  },
                  {
                      "description": "__Optional__. Returned transactions will be on or after this date (yyyy-MM-dd'T'HH:mm:ss.SSSZ). ",
                      "in": "query",
                      "name": "from",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Optional__. Returned transactions will be on or before this date (yyyy-MM-dd'T'HH:mm:ss.SSSZ).",
                      "in": "query",
                      "name": "before",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Optional__. The maximum number of transaction records to be returned. Must be between 1 and 1000.",
                      "in": "query",
                      "name": "limit",
                      "required": false,
                      "schema": {
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "description": "__Optional__. The number of transaction records to be skipped. Used primarily with paginated results.",
                      "in": "query",
                      "name": "offset",
                      "required": false,
                      "schema": {
                          "type": "integer",
                          "format": "int32",
                          "default": 0
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Example Response": {
                                      "$ref": "#/components/examples/consents-example-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiListResponseOfConsent"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Get Consents",
              "tags": [
                  "Consents"
              ]
          }
      },
      "/consents/{consentId}": {
          "delete": {
              "description": "Delete a consent using the consent Id",
              "operationId": "delete",
              "parameters": [
                  {
                      "description": "__Mandatory__. The consent Id of the `Consent` to update.",
                      "in": "path",
                      "name": "consentId",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "description": "__Optional__. Whether to force the deletion.",
                      "in": "query",
                      "name": "forceDelete",
                      "required": false,
                      "schema": {
                          "type": "boolean",
                          "default": true
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Example Response": {
                                      "$ref": "#/components/examples/consent-delete-example-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfConsentDeleteResponse"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Delete Consent",
              "tags": [
                  "Consents"
              ]
          },
          "get": {
              "description": "Get consent using the consent Id",
              "operationId": "getConsentById",
              "parameters": [
                  {
                      "description": "__Mandatory__. The consent Id of the `Consent` to update.",
                      "in": "path",
                      "name": "consentId",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Example Response": {
                                      "$ref": "#/components/examples/consent-get-example-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfConsent"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Get Consent",
              "tags": [
                  "Consents"
              ]
          }
      },
      "/consents/{consentId}/extend": {
          "post": {
              "description": "Used to indicate to Yapily that reconfirmation has occurred for a given Consent, and to update lastUpdatedAt and reconfirmBy for that Consent. Returns the Consent.",
              "operationId": "extendConsent",
              "x-beta": true,
              "parameters": [
                  {
                      "description": "__Mandatory__. The consent Id of the `Consent` to update.",
                      "in": "path",
                      "name": "consentId",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json;charset=UTF-8": {
                          "examples": {
                              "Example Request": {
                                  "$ref": "#/components/examples/consent-extend-example-request"
                              }
                          },
                          "schema": {
                              "$ref": "#/components/schemas/ExtendConsentRequest"
                          }
                      }
                  },
                  "required": true
              },
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Example Response": {
                                      "$ref": "#/components/examples/consent-get-example-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfConsent"
                              }
                          }
                      },
                      "description": "Created"
                  },
                  "400": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/extend-consent-error-response-code-400"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      },
                      "description": "Error Response. The supplied lastConfirmedAt date, Consent type, or Consent status is invalid."
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Extend Consent",
              "tags": [
                  "Consents"
              ]
          }
      },
      "/embedded-account-auth-requests": {
          "x-yapily-features": [
              "INITIATE_EMBEDDED_ACCOUNT_REQUEST"
          ],
          "post": {
              "description": "Used to initiate the embedded authorisation process for an `Institution` that contains the `INITIATE_EMBEDDED_ACCOUNT_REQUEST` feature in order to obtain the the user's authorisation to access their account information. <br><br>See [Embedded Account Flows](https://docs.yapily.com/pages/key-concepts/account-data/account-authorisation/embedded-account-flows/) for more information about this flow.<br><br>Feature: `INITIATE_EMBEDDED_ACCOUNT_REQUEST`",
              "operationId": "initiateEmbeddedAccountRequest",
              "parameters": [
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-corporate-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. The IP address of the PSU. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-ip-address",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "$ref": "#/components/parameters/SubAppHeader"
                  },
                  {
                      "description": "__Optional__. Used to obtain the raw request and response to and from the <code>Institution</code>.",
                      "in": "query",
                      "name": "raw",
                      "required": false,
                      "schema": {
                          "type": "boolean"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json;charset=UTF-8": {
                          "examples": {
                              "Berlin Group Example Request": {
                                  "$ref": "#/components/examples/berlin-group-example-embedded-acc-auth-request"
                              }
                          },
                          "schema": {
                              "$ref": "#/components/schemas/EmbeddedAccountAuthorisationRequest"
                          }
                      }
                  },
                  "required": true
              },
              "responses": {
                  "201": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Berlin Group (Multiple SCA Methods) Example Response": {
                                      "$ref": "#/components/examples/berlin-group-multiple-sca-methods-example-response"
                                  },
                                  "Berlin Group (Single SCA Method) Example Response": {
                                      "$ref": "#/components/examples/berlin-group-single-sca-method-example-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfEmbeddedAccountAuthorisationResponse"
                              }
                          }
                      },
                      "description": "Created"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Create Embedded Account Authorisation",
              "tags": [
                  "Authorisations"
              ]
          }
      },
      "/embedded-account-auth-requests/{consentId}": {
          "put": {
              "description": "Used to pass the SCA Code received from the `Institution` (and the SCA method selected by the user where multiple SCA methods are supported by the `Institution`) in order to complete the embedded authorisation to access the user's financial data. <br><br>See [Embedded Account Flows](https://docs.yapily.com/pages/key-concepts/account-data/account-authorisation/embedded-account-flows/) for more information about this flow.<br><br>Feature: `INITIATE_EMBEDDED_ACCOUNT_REQUEST`",
              "operationId": "updateEmbeddedAccountRequest",
              "parameters": [
                  {
                      "description": "__Mandatory__. The consent Id of the `Consent` to update.",
                      "in": "path",
                      "name": "consentId",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-corporate-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. The IP address of the PSU. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-ip-address",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "$ref": "#/components/parameters/SubAppHeader"
                  },
                  {
                      "description": "__Optional__. Used to obtain the raw request and response to and from the <code>Institution</code>.",
                      "in": "query",
                      "name": "raw",
                      "required": false,
                      "schema": {
                          "type": "boolean"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json;charset=UTF-8": {
                          "examples": {
                              "Berlin Group (SCA Code) Example Request": {
                                  "$ref": "#/components/examples/berlin-group-sca-code-example-request"
                              },
                              "Berlin Group (Selected SCA Method) Example Request": {
                                  "$ref": "#/components/examples/berlin-group-selected-sca-method-example-request"
                              }
                          },
                          "schema": {
                              "$ref": "#/components/schemas/EmbeddedAccountAuthorisationRequest"
                          }
                      }
                  },
                  "required": true
              },
              "responses": {
                  "201": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Berlin Group (SCA Code) Example Response": {
                                      "$ref": "#/components/examples/berlin-group-sca-code-example-response"
                                  },
                                  "Berlin Group (Selected SCA Method) Example Response": {
                                      "$ref": "#/components/examples/berlin-group-selected-sca-method-example-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfEmbeddedAccountAuthorisationResponse"
                              }
                          }
                      },
                      "description": "Created"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Update Embedded Account Authorisation",
              "tags": [
                  "Authorisations"
              ]
          }
      },
      "/embedded-bulk-payment-auth-requests": {
          "x-yapily-features": [
              "INITIATE_EMBEDDED_BULK_PAYMENT"
          ],
          "post": {
              "description": "Used to initiate the embedded authorisation process for an `Institution` that contains the `INITIATE_EMBEDDED_BULK_PAYMENT` feature in order to obtain the the user's authorisation for a bulk payment. See [Bulk Payments](https://docs.yapily.com/pages/key-concepts/payments/payment-execution/bulk-payments/) for more information. <br><br> See [Embedded Payment Flows](https://docs.yapily.com/pages/key-concepts/payments/payment-authorisation/embedded-payment-flows/) for more information about this flow.<br><br>Feature: `INITIATE_EMBEDDED_BULK_PAYMENT`",
              "operationId": "createEmbeddedBulkPaymentAuthorisation",
              "parameters": [
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-corporate-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. The IP address of the PSU. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-ip-address",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Optional__. Used to obtain the raw request and response to and from the <code>Institution</code>.",
                      "in": "query",
                      "name": "raw",
                      "required": false,
                      "schema": {
                          "type": "boolean"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json;charset=UTF-8": {
                          "examples": {
                              "Berlin Group EUR Embedded Bulk Payment Example Request": {
                                  "$ref": "#/components/examples/berlin-group-eur-embedded-bulk-payment-example-request"
                              }
                          },
                          "schema": {
                              "$ref": "#/components/schemas/BulkPaymentEmbeddedAuthorisationRequest"
                          }
                      }
                  },
                  "required": true
              },
              "responses": {
                  "201": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Berlin Group EUR Embedded Bulk Payment Example Response": {
                                      "$ref": "#/components/examples/berlin-group-eur-embedded-bulk-payment-example-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfPaymentEmbeddedAuthorisationRequestResponse"
                              }
                          }
                      },
                      "description": "Created"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Create Embedded Bulk Payment Authorisation",
              "tags": [
                  "Authorisations"
              ]
          }
      },
      "/embedded-bulk-payment-auth-requests/{consentId}": {
          "put": {
              "description": "Used to pass the SCA Code received from the `Institution` (and the SCA method selected by the user where multiple SCA methods are supported by the `Institution`) in order to complete the embedded authorisation to initiate a bulk payment. See [Bulk Payments](https://docs.yapily.com/pages/key-concepts/payments/payment-execution/bulk-payments/) for more information. <br><br>See [Embedded Payment Flows](https://docs.yapily.com/pages/key-concepts/payments/payment-authorisation/embedded-payment-flows/) for more information about this flow.<br><br>Feature: `INITIATE_EMBEDDED_BULK_PAYMENT`",
              "operationId": "updateEmbeddedBulkPaymentAuthorisation",
              "parameters": [
                  {
                      "description": "__Mandatory__. The consent Id of the `Consent` to update.",
                      "in": "path",
                      "name": "consentId",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-corporate-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. The IP address of the PSU. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-ip-address",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Optional__. Used to obtain the raw request and response to and from the <code>Institution</code>.",
                      "in": "query",
                      "name": "raw",
                      "required": false,
                      "schema": {
                          "type": "boolean"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json;charset=UTF-8": {
                          "examples": {
                              "Berlin Group EUR Embedded Bulk Payment (SCA Code) Example Request": {
                                  "$ref": "#/components/examples/berlin-group-eur-embedded-bulk-payment-sca-code-example-request"
                              }
                          },
                          "schema": {
                              "$ref": "#/components/schemas/BulkPaymentEmbeddedAuthorisationRequest"
                          }
                      }
                  },
                  "required": true
              },
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Berlin Group EUR Embedded Bulk Payment (SCA Code) Example Response": {
                                      "$ref": "#/components/examples/berlin-group-eur-embedded-bulk-payment-sca-code-example-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfPaymentEmbeddedAuthorisationRequestResponse"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Update Embedded Bulk Payment Authorisation",
              "tags": [
                  "Authorisations"
              ]
          }
      },
      "/embedded-payment-auth-requests": {
          "x-yapily-features": [
              "INITIATE_EMBEDDED_DOMESTIC_SINGLE_PAYMENT"
          ],
          "post": {
              "description": "Used to initiate the embedded authorisation process for an `Institution` that contains the `INITIATE_EMBEDDED_DOMESTIC_SINGLE_PAYMENT` feature in order to obtain the the user's authorisation for a payment.<br><br> See [Embedded Payment Flows](https://docs.yapily.com/pages/key-concepts/payments/payment-authorisation/embedded-payment-flows/) for more information about this flow.<br><br>Feature: `INITIATE_EMBEDDED_DOMESTIC_SINGLE_PAYMENT`",
              "operationId": "createEmbeddedPaymentAuthorisation",
              "parameters": [
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-corporate-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. The IP address of the PSU. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-ip-address",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "$ref": "#/components/parameters/SubAppHeader"
                  },
                  {
                      "description": "__Optional__. Used to obtain the raw request and response to and from the <code>Institution</code>.",
                      "in": "query",
                      "name": "raw",
                      "required": false,
                      "schema": {
                          "type": "boolean"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json;charset=UTF-8": {
                          "examples": {
                              "Berlin Group EUR Single Domestic Payment Example Request": {
                                  "$ref": "#/components/examples/berlin-group-eur-single-domestic-embedded-payment-example-request"
                              }
                          },
                          "schema": {
                              "$ref": "#/components/schemas/PaymentEmbeddedAuthorisationRequest"
                          }
                      }
                  },
                  "required": true
              },
              "responses": {
                  "201": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Berlin Group EUR Single Domestic Payment Example Response": {
                                      "$ref": "#/components/examples/berlin-group-eur-single-domestic-embedded-payment-example-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfPaymentEmbeddedAuthorisationRequestResponse"
                              }
                          }
                      },
                      "description": "Created"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Create Embedded Payment Authorisation",
              "tags": [
                  "Authorisations"
              ]
          }
      },
      "/embedded-payment-auth-requests/{consentId}": {
          "put": {
              "description": "Used to pass the SCA Code received from the `Institution` (and the SCA method selected by the user where multiple SCA methods are supported by the `Institution`) in order to complete the embedded authorisation to initiate a payment. <br><br> See [Embedded Payment Flows](https://docs.yapily.com/guides/payments/payment-authorisation-flows/embedded/) for more information about this flow.<br><br>Feature: `INITIATE_EMBEDDED_DOMESTIC_SINGLE_PAYMENT`",
              "operationId": "updateEmbeddedPaymentAuthorisation",
              "parameters": [
                  {
                      "description": "__Mandatory__. The consent Id of the `Consent` to update.",
                      "in": "path",
                      "name": "consentId",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-corporate-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. The IP address of the PSU. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-ip-address",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "$ref": "#/components/parameters/SubAppHeader"
                  },
                  {
                      "description": "__Optional__. Used to obtain the raw request and response to and from the <code>Institution</code>.",
                      "in": "query",
                      "name": "raw",
                      "required": false,
                      "schema": {
                          "type": "boolean"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json;charset=UTF-8": {
                          "examples": {
                              "Berlin Group EUR Single Domestic Payment (SCA Code) Example Request": {
                                  "$ref": "#/components/examples/berlin-group-eur-single-domestic-payment-sca-code-example-request"
                              },
                              "Berlin Group EUR Single Domestic Payment (Selected SCA Method) Example Request": {
                                  "$ref": "#/components/examples/berlin-group-eur-single-domestic-payment-selected-sca-method-example-request"
                              }
                          },
                          "schema": {
                              "$ref": "#/components/schemas/PaymentEmbeddedAuthorisationRequest"
                          }
                      }
                  },
                  "required": true
              },
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Berlin Group EUR Single Domestic Payment (SCA Code) Example Response": {
                                      "$ref": "#/components/examples/berlin-group-eur-single-domestic-payment-sca-code-example-response"
                                  },
                                  "Berlin Group EUR Single Domestic Payment (Selected SCA Method) Example Response": {
                                      "$ref": "#/components/examples/berlin-group-eur-single-domestic-payment-selected-sca-method-example-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfPaymentEmbeddedAuthorisationRequestResponse"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Update Embedded Payment Authorisation",
              "tags": [
                  "Authorisations"
              ]
          }
      },
      "/features": {
          "get": {
              "description": "Used to retrieve all features available from Yapily. Each `Institution` supports a one, many or all of these features and can be seen in the features field of the `Institution` object.<br><br>Note: Every `Institution` does not necessarily support every feature. To see which features are available for a particular Institution, use either the [Get Institutions](https://docs.yapily.com/api/reference/#operation/getInstitutions) or [Get Institution](https://docs.yapily.com/api/reference/#operation/getInstitution) endpoint and check the features array within the `Institution` payload.",
              "operationId": "getFeatureDetails",
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Example Response": {
                                      "$ref": "#/components/examples/features-example-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiListResponseOfFeatureDetails"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Get Features",
              "tags": [
                  "Institutions"
              ]
          }
      },
      "/identity": {
          "x-yapily-features": [
              "IDENTITY"
          ],
          "get": {
              "description": "Returns the identity information for an account.<br><br>Feature: `IDENTITY`",
              "operationId": "getIdentity",
              "parameters": [
                  {
                      "description": "__Mandatory__. The `consent-token` containing the user's authorisation to make the request.",
                      "example": "{consentToken}",
                      "in": "header",
                      "name": "consent",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                    "$ref": "#/components/parameters/SubAppHeader"
                  },
                  {
                      "description": "__Optional__. Used to obtain the raw request and response to and from the <code>Institution</code>.",
                      "in": "query",
                      "name": "raw",
                      "required": false,
                      "schema": {
                          "type": "boolean"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Example Response": {
                                      "$ref": "#/components/examples/identity-example-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfIdentity"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Get Identity",
              "tags": [
                  "Financial Data"
              ]
          }
      },
      "/institutions": {
          "get": {
              "description": "Used to retrieve all `Institutions` within an application",
              "operationId": "getInstitutions",
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Example Response": {
                                      "$ref": "#/components/examples/institutions-example-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiListResponseOfInstitution"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Get Institutions",
              "tags": [
                  "Institutions"
              ]
          }
      },
      "/institutions/{institutionId}": {
          "get": {
              "description": "Used to retrieves details of a specific `Institution` within an application",
              "operationId": "getInstitution",
              "parameters": [
                  {
                      "description": "__Mandatory__. The Yapily institution Id for the `Institution`.",
                      "in": "path",
                      "name": "institutionId",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Example Response": {
                                      "$ref": "#/components/examples/institution-example-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/Institution"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Get Institution",
              "tags": [
                  "Institutions"
              ]
          }
      },
      "/me": {
          "get": {
              "description": "Get the information about the institutions configured in your application",
              "operationId": "getApplicationMe",
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Example Response": {
                                      "$ref": "#/components/examples/me-example-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/Application"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Get Application Self",
              "tags": [
                  "Application"
              ]
          }
      },
      "/payment-auth-requests": {
          "x-yapily-features": [
              "INITIATE_DOMESTIC_PERIODIC_PAYMENT",
              "INITIATE_DOMESTIC_SCHEDULED_PAYMENT",
              "INITIATE_DOMESTIC_SINGLE_INSTANT_PAYMENT",
              "INITIATE_DOMESTIC_SINGLE_PAYMENT",
              "INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT",
              "INITIATE_INTERNATIONAL_PERIODIC_PAYMENT",
              "INITIATE_INTERNATIONAL_SCHEDULED_PAYMENT",
              "INITIATE_INTERNATIONAL_SINGLE_PAYMENT",
              "READ_DOMESTIC_PERIODIC_PAYMENT_REFUND",
              "READ_DOMESTIC_SCHEDULED_REFUND",
              "READ_DOMESTIC_SINGLE_REFUND",
              "READ_INTERNATIONAL_SCHEDULED_REFUND",
              "READ_INTERNATIONAL_SINGLE_REFUND"
          ],
          "post": {
              "description": "Used to initiate the authorisation process and direct users to the login screen of their financial Institution in order to give their consent for a payment. This endpoint is used to initiate all the different payment listed below. Based on the type of payment you wish to make, you may be required to provide specific properties in [PaymentRequest](https://docs.yapily.com/api/reference/#operation/createPaymentAuthorisation!path=paymentRequest&t=request). First make sure that the payment feature you wish to execute is supported by the bank by checking the features array in [GET Institution](https://docs.yapily.com/api/reference/#operation/getInstitution). <br><br>See [Redirect Payment Flows](https://docs.yapily.com/pages/key-concepts/payments/payment-authorisation/redirect-payment-flows/) for more information about this flow.<br><br>Features:<ul><li>`INITIATE_DOMESTIC_PERIODIC_PAYMENT`</li><li>`INITIATE_DOMESTIC_SCHEDULED_PAYMENT`</li><li>`INITIATE_DOMESTIC_SINGLE_INSTANT_PAYMENT`</li><li>`INITIATE_DOMESTIC_SINGLE_PAYMENT`</li><li>`INITIATE_INTERNATIONAL_PERIODIC_PAYMENT`</li><li>`INITIATE_INTERNATIONAL_SCHEDULED_PAYMENT`</li><li>`INITIATE_INTERNATIONAL_SINGLE_PAYMENT`</li></ul>",
              "operationId": "createPaymentAuthorisation",
              "parameters": [
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-id",
                      "required": false,
                      "schema": {
                          "title": "User Id",
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-corporate-id",
                      "required": false,
                      "schema": {
                          "title": "Corporate User Id",
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. The IP address of the PSU. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-ip-address",
                      "required": false,
                      "schema": {
                          "title": "User IP Address",
                          "type": "string"
                      }
                  },
                  {
                      "$ref": "#/components/parameters/SubAppHeader"
                  },
                  {
                      "description": "__Optional__. Used to obtain the raw request and response to and from the <code>Institution</code>.",
                      "in": "query",
                      "name": "raw",
                      "required": false,
                      "schema": {
                          "type": "boolean"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json;charset=UTF-8": {
                          "examples": {
                              "EUR Single Domestic Example Request": {
                                  "$ref": "#/components/examples/eur-single-domestic-payment-auth-example-request"
                              },
                              "GBP Single Domestic Example Request": {
                                  "$ref": "#/components/examples/gbp-single-domestic-payment-auth-example-request"
                              }
                          },
                          "schema": {
                              "$ref": "#/components/schemas/PaymentAuthorisationRequest"
                          }
                      }
                  },
                  "required": true
              },
              "responses": {
                  "201": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "EUR Single Domestic Example Response": {
                                      "$ref": "#/components/examples/eur-single-domestic-payment-auth-example-response"
                                  },
                                  "GBP Single Domestic Example Response": {
                                      "$ref": "#/components/examples/gbp-single-domestic-payment-auth-example-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfPaymentAuthorisationRequestResponse"
                              }
                          }
                      },
                      "description": "Created"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Create Payment Authorisation",
              "tags": [
                  "Authorisations"
              ]
          },
          "put": {
              "description": "Used to continue the authorisation process and for any `Institution` that contains the `INITIATE_PRE_AUTHORISATION` feature and direct user to the login screen of their financial institution in order to give consent to initiate a payment. <br><br>See [Redirect Payment Flows](https://docs.yapily.com/pages/key-concepts/payments/payment-authorisation/redirect-payment-flows/) for more information about this flow. <br><br>Feature: `INITIATE_PRE_AUTHORISATION`",
              "operationId": "updatePaymentAuthorisation",
              "parameters": [
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-id",
                      "required": false,
                      "schema": {
                          "title": "User Id",
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-corporate-id",
                      "required": false,
                      "schema": {
                          "title": "Corporate User Id",
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. The IP address of the PSU. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-ip-address",
                      "required": false,
                      "schema": {
                          "title": "User IP Address",
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Mandatory__. The `consent-token` containing the user's authorisation to make the request.",
                      "example": "{consentToken}",
                      "in": "header",
                      "name": "consent",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Optional__. Used to obtain the raw request and response to and from the <code>Institution</code>.",
                      "in": "query",
                      "name": "raw",
                      "required": false,
                      "schema": {
                          "type": "boolean"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json;charset=UTF-8": {
                          "examples": {
                              "Berlin Group EUR Single Domestic Payment Example Request": {
                                  "$ref": "#/components/examples/berlin-group-eur-single-domestic-payment-example-request"
                              }
                          },
                          "schema": {
                              "$ref": "#/components/schemas/PaymentAuthorisationRequest"
                          }
                      }
                  },
                  "required": true
              },
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Berlin Group EUR Single Domestic Payment Example Response": {
                                      "$ref": "#/components/examples/berlin-group-eur-single-domestic-payment-example-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfPaymentAuthorisationRequestResponse"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Update Payment Pre-authorisation",
              "tags": [
                  "Authorisations"
              ]
          }
      },
      "/payments": {
          "x-yapily-features": [
              "CREATE_DOMESTIC_PERIODIC_PAYMENT",
              "CREATE_DOMESTIC_SCHEDULED_PAYMENT",
              "CREATE_DOMESTIC_SINGLE_INSTANT_PAYMENT",
              "CREATE_DOMESTIC_SINGLE_PAYMENT",
              "CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT",
              "CREATE_INTERNATIONAL_PERIODIC_PAYMENT",
              "CREATE_INTERNATIONAL_SCHEDULED_PAYMENT",
              "CREATE_INTERNATIONAL_SINGLE_PAYMENT",
              "PERIODIC_PAYMENT_FREQUENCY_EXTENDED"
          ],
          "post": {
              "description": "Creates a payment after obtaining the user's authorisation. <br><br>Features:<ul><li>`CREATE_DOMESTIC_PERIODIC_PAYMENT`</li><li>`CREATE_DOMESTIC_SCHEDULED_PAYMENT`</li><li>`CREATE_DOMESTIC_SINGLE_INSTANT_PAYMENT`</li><li>`CREATE_DOMESTIC_SINGLE_PAYMENT`</li><li>`CREATE_INTERNATIONAL_PERIODIC_PAYMENT`</li><li>`CREATE_INTERNATIONAL_SCHEDULED_PAYMENT`</li><li>`CREATE_INTERNATIONAL_SINGLE_PAYMENT`</li></ul>",
              "operationId": "createPayment",
              "parameters": [
                  {
                      "description": "__Mandatory__. The `consent-token` containing the user's authorisation to make the request.",
                      "example": "{consentToken}",
                      "in": "header",
                      "name": "consent",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-id",
                      "required": false,
                      "schema": {
                          "title": "User Id",
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-corporate-id",
                      "required": false,
                      "schema": {
                          "title": "Corporate User Id",
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. The IP address of the PSU. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-ip-address",
                      "required": false,
                      "schema": {
                          "title": "User IP Address",
                          "type": "string"
                      }
                  },
                  {
                      "$ref": "#/components/parameters/SubAppHeader"
                  },
                  {
                      "description": "__Optional__. Used to obtain the raw request and response to and from the <code>Institution</code>.",
                      "in": "query",
                      "name": "raw",
                      "required": false,
                      "schema": {
                          "type": "boolean"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json;charset=UTF-8": {
                          "examples": {
                              "EUR Domestic Single Payment Example Request": {
                                  "$ref": "#/components/examples/eur-domestic-single-payment-example-request"
                              },
                              "GBP Domestic Single Payment Example Request": {
                                  "$ref": "#/components/examples/gbp-domestic-single-payment-example-request"
                              }
                          },
                          "schema": {
                              "$ref": "#/components/schemas/PaymentRequest"
                          }
                      }
                  },
                  "required": true
              },
              "responses": {
                  "201": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "EUR Domestic Single Payment Example Response": {
                                      "$ref": "#/components/examples/eur-domestic-single-payment-example-response"
                                  },
                                  "GBP Domestic Single Payment Example Response": {
                                      "$ref": "#/components/examples/gbp-domestic-single-payment-example-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfPaymentResponse"
                              }
                          }
                      },
                      "description": "Created"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Create Payment",
              "tags": [
                  "Payments"
              ]
          }
      },
      "/payments/{paymentId}/details": {
          "x-yapily-features": [
              "EXISTING_PAYMENTS_DETAILS"
          ],
          "get": {
              "description": "Returns the details of a payment. <br><br>Most commonly used to check for payment status updates. <br><br>Feature: `EXISTING_PAYMENTS_DETAILS`",
              "operationId": "getPayments",
              "parameters": [
                  {
                      "description": "__Mandatory__. The payment Id of the payment.",
                      "in": "path",
                      "name": "paymentId",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Mandatory__. The `consent-token` containing the user's authorisation to make the request.",
                      "example": "{consentToken}",
                      "in": "header",
                      "name": "consent",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-id",
                      "required": false,
                      "schema": {
                          "title": "User Id",
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-corporate-id",
                      "required": false,
                      "schema": {
                          "title": "Corporate User Id",
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. The IP address of the PSU. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-ip-address",
                      "required": false,
                      "schema": {
                          "title": "User IP Address",
                          "type": "string"
                      }
                  },
                  {
                      "$ref": "#/components/parameters/SubAppHeader"
                  },
                  {
                      "description": "__Optional__. Used to obtain the raw request and response to and from the <code>Institution</code>.",
                      "in": "query",
                      "name": "raw",
                      "required": false,
                      "schema": {
                          "type": "boolean"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "EUR Single Domestic Payment Example Response": {
                                      "$ref": "#/components/examples/eur-single-domestic-payment-details-example-response"
                                  },
                                  "GBP Single Domestic Payment Example Response": {
                                      "$ref": "#/components/examples/gbp-single-domestic-payment-details-example-response"
                                  },
                                  "UK Bulk Payment Example Response": {
                                      "$ref": "#/components/examples/uk-bulk-payment-details-example-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfPaymentResponses"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Get Payment Details",
              "tags": [
                  "Payments"
              ]
          }
      },
      "/pre-auth-requests": {
          "x-yapily-features": [
              "INITIATE_ONETIME_PRE_AUTHORISATION",
              "INITIATE_PRE_AUTHORISATION",
              "INITIATE_PRE_AUTHORISATION_ACCOUNTS",
              "INITIATE_PRE_AUTHORISATION_PAYMENTS"
          ],
          "post": {
              "description": "Used to initiate the pre-authorisation process for any `Institution` that contains the `INITIATE_PRE_AUTHORISATION` feature to authenticate the user. <br><br>Feature: `INITIATE_PRE_AUTHORISATION`",
              "operationId": "createPreAuthorisationRequest",
              "parameters": [
                  {
                      "description": "__Optional__. Used to obtain the raw request and response to and from the <code>Institution</code>.",
                      "in": "query",
                      "name": "raw",
                      "required": false,
                      "schema": {
                          "type": "boolean"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-corporate-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. The IP address of the PSU. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-ip-address",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "$ref": "#/components/parameters/SubAppHeader"
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json;charset=UTF-8": {
                          "examples": {
                              "Berlin Group (AIS) Example Request": {
                                  "$ref": "#/components/examples/berlin-group-ais-pre-auth-example-request"
                              },
                              "Berlin Group (PIS) Example Request": {
                                  "$ref": "#/components/examples/berlin-group-pis-pre-auth-example-request"
                              }
                          },
                          "schema": {
                              "$ref": "#/components/schemas/PreAuthorisationRequest"
                          }
                      }
                  },
                  "required": true
              },
              "responses": {
                  "201": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Berlin Group Example (AIS) Response": {
                                      "$ref": "#/components/examples/berlin-group-example-ais-pre-auth-response"
                                  },
                                  "Berlin Group Example (PIS) Response": {
                                      "$ref": "#/components/examples/berlin-group-pis-pre-auth-example-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfPreAuthorisationResponse"
                              }
                          }
                      },
                      "description": "Created"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Create Pre-authorisation",
              "tags": [
                  "Authorisations"
              ]
          }
      },
      "/payment-pre-auth-requests": {
          "x-yapily-features": [
              "INITIATE_ONETIME_PRE_AUTHORISATION_PAYMENTS"
          ],
          "post": {
              "description": "Used to initiate the pre-authorisation process for payments for CBI Globe institutions that contain the `INITIATE_ONETIME_PRE_AUTHORISATION_PAYMENTS` feature to authenticate the user. <br><br>Feature: `INITIATE_ONETIME_PRE_AUTHORISATION_PAYMENTS`",
              "operationId": "createPaymentPreAuthorisationRequest",
              "parameters": [
                  {
                      "description": "__Optional__. Used to obtain the raw request and response to and from the <code>Institution</code>.",
                      "in": "query",
                      "name": "raw",
                      "required": false,
                      "schema": {
                          "type": "boolean"
                      }
                  },
                  {
                      "description": "__Conditional__. The IP address of the PSU. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-ip-address",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "$ref": "#/components/parameters/SubAppHeader"
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json;charset=UTF-8": {
                          "examples": {
                              "CBI Globe (PIS) example request": {
                                  "$ref": "#/components/examples/cbi-globe-pis-pre-auth-example-request"
                              }
                          },
                          "schema": {
                              "$ref": "#/components/schemas/PaymentPreAuthorisationRequest"
                          }
                      }
                  },
                  "required": true
              },
              "responses": {
                  "201": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Berlin Group Example (PIS) Response": {
                                      "$ref": "#/components/examples/berlin-group-pis-pre-auth-example-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfPreAuthorisationResponse"
                              }
                          }
                      },
                      "description": "Created"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Create Payment Pre-authorisation",
              "tags": [
                  "Authorisations"
              ]
          }
      },
      "/users": {
          "get": {
              "description": "Get all the users configured in your application",
              "operationId": "getUsers",
              "parameters": [
                  {
                      "description": "__Optional__. Filter records based on the list of `applicationUserId` users provided.",
                      "in": "query",
                      "name": "filter[applicationUserId]",
                      "required": false,
                      "schema": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                              "type": "string"
                          }
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Example Response": {
                                      "$ref": "#/components/examples/users_example-response"
                                  }
                              },
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/ApplicationUser"
                                  }
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Get Users",
              "tags": [
                  "Users"
              ]
          },
          "post": {
              "description": "Create a new user in your application",
              "operationId": "addUser",
              "requestBody": {
                  "content": {
                      "application/json;charset=UTF-8": {
                          "examples": {
                              "Create User Example Request": {
                                  "$ref": "#/components/examples/create-user-example-request"
                              }
                          },
                          "schema": {
                              "$ref": "#/components/schemas/NewApplicationUser"
                          }
                      }
                  },
                  "required": true
              },
              "responses": {
                  "201": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Example Response": {
                                      "$ref": "#/components/examples/create-user_example-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApplicationUser"
                              }
                          }
                      },
                      "description": "Created"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Create User",
              "tags": [
                  "Users"
              ]
          }
      },
      "/users/{userUuid}": {
          "delete": {
              "description": "Delete a user from your application along with any sub-resources (including consent resources on institution APIs if they exist)",
              "operationId": "deleteUser",
              "parameters": [
                  {
                      "description": "__Mandatory__. The Yapily generated UUID for the user.",
                      "in": "path",
                      "name": "userUuid",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Example Response": {
                                      "$ref": "#/components/examples/delete-user_example-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfUserDeleteResponse"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Delete User",
              "tags": [
                  "Users"
              ]
          },
          "get": {
              "description": "Get a specific user using the user UUID",
              "operationId": "getUser",
              "parameters": [
                  {
                      "description": "__Mandatory__. The Yapily generated UUID for the user.",
                      "in": "path",
                      "name": "userUuid",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Example Response": {
                                      "$ref": "#/components/examples/user_example-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApplicationUser"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Get User",
              "tags": [
                  "Users"
              ]
          }
      },
      "/users/{userUuid}/profile/consents": {
          "post": {
              "tags": [
                  "Financial Profile"
              ],
              "operationId": "createProfileConsent",
              "summary": "Create Profile Consent",
              "description": "Used to add a consent to a `Financial Profile` for a `User`.  The response is asynchronous, returned with pending status, while retrieval of financial data is commenced.  There is a limit of 10,000 transactions for enrichment.",
              "parameters": [
                  {
                      "description": "__Mandatory__. The Yapily generated UUID for the user.",
                      "in": "path",
                      "name": "userUuid",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "consent",
                      "in": "header",
                      "description": "__Mandatory__. The `consent-token` obtained from the original authorisation.",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "201": {
                      "description": "A successful response, returning a ApiResponseOfFinancialProfileAuthorisationResponse.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfFinancialProfileAuthorisationResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "Bad Request.  Returned if the userUuid is not a valid UUID.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "Either authentication credentials were not supplied, or they were invalid.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "Not Found.  Returned if the userUuid is not found for the `Application`.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/users/{userUuid}/profile/consents/{profileConsentId}": {
          "get": {
              "tags": [
                  "Financial Profile"
              ],
              "operationId": "getProfileConsent",
              "summary": "Get Profile Consent",
              "description": "Used to retrieve a specific ProfileConsent for a User.",
              "parameters": [
                  {
                      "description": "__Mandatory__. The Yapily generated UUID for the user.",
                      "in": "path",
                      "name": "userUuid",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "profileConsentId",
                      "in": "path",
                      "description": "__Mandatory__. The ID of the ProfileConsent",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "A successful response, returning a ApiResponseOfFinancialProfileConsent.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfFinancialProfileConsent"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "Bad Request.  Returned if the userUuid is not a valid UUID.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "Either authentication credentials were not supplied, or they were invalid.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "Not Found.  Returned if the userUuid or ProfileConsent is not found for the `Application`.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      }
                  }
              }
          },
          "delete": {
              "tags": [
                  "Financial Profile"
              ],
              "operationId": "deleteProfileConsent",
              "summary": "Delete Profile Consent",
              "description": "Used to delete a `ProfileConsent` for a `User`. This will remove the consent and all associated financial data from the 'Financial Profile'.",
              "parameters": [
                  {
                      "description": "__Mandatory__. The Yapily generated UUID for the user.",
                      "in": "path",
                      "name": "userUuid",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "profileConsentId",
                      "in": "path",
                      "description": "__Mandatory__. The ID of the ProfileConsent",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "The ProfileConsent was deleted.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfFinancialProfileConsentRemoveResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "Bad Request.  Returned if the userUuid is not a valid UUID.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "Either authentication credentials were not supplied, or they were invalid.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "Not Found.  Returned if the userUuid or ProfileConsent is not found for the `Application`.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/users/{userUuid}/profile/transaction-groups": {
          "get": {
              "tags": [
                  "Financial Profile"
              ],
              "operationId": "getUserProfile",
              "summary": "Get Transaction Groups",
              "description": "Used to retrieve a `TransactionGroups` for a `User`.  Status will be `PENDING` until all ProfileConsents are `COMPLETED`.",
              "parameters": [
                  {
                      "description": "__Mandatory__. The Yapily generated UUID for the user.",
                      "in": "path",
                      "name": "userUuid",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "A successful response, returning a ApiResponseOfFinancialProfile.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfFinancialProfile"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "Bad Request.  Returned if the userUuid is not a valid UUID.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "Either authentication credentials were not supplied, or they were invalid.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "Not Found.  Returned if the userUuid is not found for the `Application`.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/users/{userUuid}/profile/predicted-balances": {
          "get": {
              "tags": [
                  "Financial Profile"
              ],
              "operationId": "getBalancePrediction",
              "summary": "Get Predicted Balances",
              "description": "Used to retrieve a `Balance Prediction Profile` for a `User`.  Status will be `PENDING` until all ProfileConsents are `COMPLETED`.",
              "parameters": [
                  {
                      "description": "__Mandatory__. The Yapily generated UUID for the user.",
                      "in": "path",
                      "name": "userUuid",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "A successful response, returning a Balance Prediction Profile.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfFinancialProfileBalancePrediction"
                              },
                              "examples": {
                                  "Balance Prediction Example Response": {
                                      "description": "Balance Prediction Example Response",
                                      "value": {
                                          "status": "COMPLETED",
                                          "profileConsents": [
                                              {
                                                  "id": "eb2ad083-a111-4143-8756-a3a3cef4031c",
                                                  "status": "COMPLETED",
                                                  "userId": "3ddf5dd0-aa48-4d0f-baa7-fa057e9e911d",
                                                  "referenceConsentId": "1e2e5167-8519-4c19-b016-8f2f0c6e38b6",
                                                  "institutionId": "mock-sandbox"
                                              }
                                          ],
                                          "enrichedBalances": [
                                              {
                                                  "accountIds": [
                                                      "abc123",
                                                      "xyz456"
                                                  ],
                                                  "institutions": [
                                                      "llyods",
                                                      "monzo_ab"
                                                  ],
                                                  "historic": [
                                                      {
                                                          "date": "2021-03-01",
                                                          "balance": 20
                                                      },
                                                      {
                                                          "date": "2021-03-02",
                                                          "balance": 60
                                                      },
                                                      {
                                                          "date": "2021-03-03",
                                                          "balance": 0
                                                      },
                                                      {
                                                          "date": "2021-03-04",
                                                          "balance": 0
                                                      },
                                                      {
                                                          "date": "2021-03-05",
                                                          "balance": 100
                                                      }
                                                  ],
                                                  "predicted": [
                                                      {
                                                          "date": "2021-03-24",
                                                          "medianBalance": 28.48,
                                                          "90percentileBalance": 49.26,
                                                          "10percentileBalance": 5.96
                                                      },
                                                      {
                                                          "date": "2021-03-25",
                                                          "medianBalance": 28.88,
                                                          "90percentileBalance": 46.38,
                                                          "10percentileBalance": -2.39
                                                      },
                                                      {
                                                          "date": "2021-03-26",
                                                          "medianBalance": 22.07,
                                                          "90percentileBalance": 41.48,
                                                          "10percentileBalance": 0.82
                                                      },
                                                      {
                                                          "date": "2021-03-27",
                                                          "medianBalance": 20.91,
                                                          "90percentileBalance": 38.25,
                                                          "10percentileBalance": -1.24
                                                      },
                                                      {
                                                          "date": "2021-03-28",
                                                          "medianBalance": 14.99,
                                                          "90percentileBalance": 35.98,
                                                          "10percentileBalance": -14.64
                                                      }
                                                  ]
                                              }
                                          ]
                                      }
                                  }
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "Bad Request.  Returned if the userUuid is not a valid UUID.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "Either authentication credentials were not supplied, or they were invalid.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "Not Found.  Returned if the userUuid is not found for the `Application`, or data not found for the userUuid.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/notifications/event-subscriptions": {
          "post": {
              "tags": [
                  "Notifications"
              ],
              "summary": "Create Event Subscription",
              "description": "Used to subscribe to notifications relating to a specified event type.",
              "operationId": "createEventSubscription",
              "x-beta": true,
              "parameters": [
                {
                    "$ref": "#/components/parameters/SubAppHeader"
                }
              ],
              "requestBody": {
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/EventSubscriptionRequest"
                          }
                      }
                  }
              },
              "responses": {
                  "201": {
                      "description": "Event subscription created successfully",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfEventSubscriptionResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "Bad request for missing required properties"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "409": {
                      "description": "Event subscription already exist for the application"
                  }
              }
          },
          "get": {
              "tags": [
                  "Notifications"
              ],
              "summary": "Get Event Subscriptions",
              "description": "Get all event subscriptions that your application is subscribed to",
              "operationId": "getEventSubscriptions",
              "x-beta": true,
              "parameters": [
                {
                  "description": "The sub-application ID for which all event subscriptions will be returned",
                  "in": "header",
                  "name": "sub-application",
                  "required": false,
                  "schema": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              ],
              "responses": {
                  "200": {
                      "description": "Event subscriptions for the application",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiListResponseOfEventSubscriptionResponse"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  }
              }
          }
      },
      "/notifications/event-subscriptions/{eventTypeId}": {
          "get": {
              "tags": [
                  "Notifications"
              ],
              "summary": "Get Event Subscription",
              "description": "Used to get details of your subscription to a specified event type.",
              "operationId": "getEventSubscriptionById",
              "x-beta": true,
              "parameters": [
                  {
                      "$ref": "#/components/parameters/EventTypeId"
                  },
                  {
                      "$ref": "#/components/parameters/SubAppHeader"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Event subscription data found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfEventSubscriptionResponse"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "404": {
                      "description": "Event subscription not found"
                  }
              }
          },
          "delete": {
              "tags": [
                  "Notifications"
              ],
              "summary": "Delete Event Subscription",
              "description": "Used to unsubscribe to notifications relating to a specified event type.",
              "operationId": "deleteEventSubscriptionById",
              "x-beta": true,
              "parameters": [
                  {
                      "$ref": "#/components/parameters/EventTypeId"
                  },
                  {
                    "description": "The sub-application ID for which event type will be deleted",
                    "in": "header",
                    "name": "sub-application",
                    "required": false,
                    "schema": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }

              ],
              "responses": {
                  "200": {
                      "description": "Event subscription deleted successfully",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfEventSubscriptionDeleteResponse"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "404": {
                      "description": "Event subscription not found"
                  }
              }
          }
      },
      "/variable-recurring-payments/sweeping/consents": {
          "x-yapily-features": [
              "INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_SWEEPING"
          ],
          "post": {
              "description": "Used to initiate the authorisation process and direct users to the login screen of their financial Institution in order to give their consent for Sweeping Variable Recurring Payments. The request would return an Authorization URL and an Identifier for the consent created at the Institution. First make sure that the payment feature you wish to execute is supported by the bank by checking the features array in [GET Institution](https://docs.yapily.com/api/#get-institution). <br><br>See [Redirect Payment Flows](https://docs.yapily.com/guides/payments/payment-authorisation-flows/redirect/) for more information about this flow.<br><br>Features:<ul><li>`INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_SWEEPING`</li></ul>",
              "operationId": "createSweepingAuthorisation",
              "x-beta": true,
              "requestBody": {
                  "content": {
                      "application/json;charset=UTF-8": {
                          "examples": {
                              "UK Domestic Sweeping VRP Authorisation Example Request": {
                                  "description": "UK Domestic Sweeping VRP Authorisation Example Request",
                                  "value": {
                                      "applicationUserId": "string",
                                      "institutionId": "modelo-sandbox",
                                      "callback": "https://display-parameters.com/",
                                      "controlParameters": {
                                          "psuAuthenticationMethods": [
                                              "SCA_NOT_REQUIRED"
                                          ],
                                          "periodicLimits": [
                                              {
                                                  "totalMaxAmount": {
                                                      "amount": 100,
                                                      "currency": "GBP"
                                                  },
                                                  "frequency": "DAILY",
                                                  "alignment": "CONSENT"
                                              }
                                          ],
                                          "maxAmountPerPayment": {
                                              "amount": 10,
                                              "currency": "GBP"
                                          }
                                      },
                                      "initiationDetails": {
                                          "reference": "Own Account Sweeping",
                                          "payer": {
                                              "name": "John Doe",
                                              "accountIdentifications": [
                                                  {
                                                      "type": "ACCOUNT_NUMBER",
                                                      "identification": "87654321"
                                                  },
                                                  {
                                                      "type": "SORT_CODE",
                                                      "identification": "654321"
                                                  }
                                              ]
                                          },
                                          "payee": {
                                              "name": "John Doe",
                                              "accountIdentifications": [
                                                  {
                                                      "type": "ACCOUNT_NUMBER",
                                                      "identification": "12345678"
                                                  },
                                                  {
                                                      "type": "SORT_CODE",
                                                      "identification": "123456"
                                                  }
                                              ]
                                          }
                                      },
                                      "complianceData": {
                                          "payer": {
                                              "type": "INDIVIDUAL",
                                              "individual": {
                                                  "name": "John Doe",
                                                  "birthDate": "2000-08-12"
                                              }
                                          }
                                      }
                                  }
                              }
                          },
                          "schema": {
                              "$ref": "#/components/schemas/SweepingAuthorisationRequest"
                          }
                      }
                  },
                  "required": true
              },
              "responses": {
                  "201": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "UK Domestic Sweeping VRP Authorisation Example Response": {
                                      "description": "UK Domestic Sweeping VRP Authorisation Example Response",
                                      "value": {
                                          "meta": {
                                              "tracingId": "96169af01d394ad39658f17d53b49a5d"
                                          },
                                          "data": {
                                              "id": "a2a9ec77-a479-4996-9896-4568e1968e7a",
                                              "userId": "5350782b-60f3-489e-aae5-a24d8d679a07",
                                              "applicationUserId": "string",
                                              "institutionId": "modelo-sandbox",
                                              "status": "AWAITING_AUTHORIZATION",
                                              "createdAt": "2021-06-09T13:48:25.138Z",
                                              "featureScope": [
                                                  "EXISTING_PAYMENTS_DETAILS",
                                                  "EXISTING_PAYMENT_INITIATION_DETAILS",
                                                  "CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_SWEEPING",
                                                  "VARIABLE_RECURRING_PAYMENT_FUNDS_CONFIRMATION",
                                                  "INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_SWEEPING"
                                              ],
                                              "state": "80052c03007f41d589f64377eef4d620",
                                              "institutionConsentId": "sdp-6-25ff5bd8-d01c-422d-aa9e-8e68808bc899",
                                              "authorisationUrl": "https://ob19-auth1-ui.o3bank.co.uk/auth?client_id=e7f6b95b-5f35-419b-b301-8b08bcd946de&response_type=code+id_token&state=80052c03007f41d589f64377eef4d620&nonce=80052c03007f41d589f64377eef4d620&scope=openid+payments&redirect_uri=https%3A%2F%2Fauth.yapily.com%2F&request=eyJraWQiOiJnRTRvU3VaZDl4TVpUNXZDdTNWYy1mdktNak0iLCJhbGciOiJQUzI1NiJ9.eyJhdWQiOiJodHRwczovL29iMTktYXV0aDEtdWkubzNiYW5rLmNvLnVrIiwic2NvcGUiOiJvcGVuaWQgcGF5bWVudHMiLCJpc3MiOiJlN2Y2Yjk1Yi01ZjM1LTQxOWItYjMwMS04YjA4YmNkOTQ2ZGUiLCJjbGllbnRfaWQiOiJlN2Y2Yjk1Yi01ZjM1LTQxOWItYjMwMS04YjA4YmNkOTQ2ZGUiLCJyZXNwb25zZV90eXBlIjoiY29kZSBpZF90b2tlbiIsInJlZGlyZWN0X3VyaSI6Imh0dHBzOi8vYXV0aC55YXBpbHkuY29tLyIsInN0YXRlIjoiODAwNTJjMDMwMDdmNDFkNTg5ZjY0Mzc3ZWVmNGQ2MjAiLCJjbGFpbXMiOnsiaWRfdG9rZW4iOnsiYWNyIjp7InZhbHVlIjoidXJuOm9wZW5iYW5raW5nOnBzZDI6c2NhIiwiZXNzZW50aWFsIjp0cnVlfSwib3BlbmJhbmtpbmdfaW50ZW50X2lkIjp7InZhbHVlIjoic2RwLTYtMjVmZjViZDgtZDAxYy00MjJkLWFhOWUtOGU2ODgwOGJjODk5IiwiZXNzZW50aWFsIjp0cnVlfX0sInVzZXJpbmZvIjp7Im9wZW5iYW5raW5nX2ludGVudF9pZCI6eyJ2YWx1ZSI6InNkcC02LTI1ZmY1YmQ4LWQwMWMtNDIyZC1hYTllLThlNjg4MDhiYzg5OSIsImVzc2VudGlhbCI6dHJ1ZX19fSwibm9uY2UiOiI4MDA1MmMwMzAwN2Y0MWQ1ODlmNjQzNzdlZWY0ZDYyMCIsImp0aSI6ImUxYjZmMWM4LTQ1ZTktNGM0NS05NGE0LWExMTY1Nzk2NjZiNiIsImlhdCI6MTYyMzI0NjUwNSwiZXhwIjoxNjIzMjQ4MzA1fQ.C5YkClHiDOWl1CKnmEY0gM_JizUuELp2-k7sDjsWV5T-mgTWviO-jM7iVfCf4MsU6batLSBmeUFLco1b3S8PTQkAzwM3laHIgbfDAb_6bYkSBTbPriyzKcC8xAwhX3VdvWtb9qqdrn9zXSmIIITBhJdMzk1cgIjyETD7WNPln839eGP1-w8iB8yDOJOkYGRHJ850mQY-lk61GegmKs5kaxtYPIhrG2gygIi3JsN-uQJ6YOl2-5pylTEcJbuwhFiyeePdqHZdabqW2BSA6lDKQbMV_Zow_zhSWoFFv6RZdXCQpt4TBRj1W7tzZQKin-MC-TpzaF1q07RpSy0NtlN85w",
                                              "qrCodeUrl": "https://images.yapily.com/image/2bbb79b8-2c4a-4c8e-9132-0636879437da/1623246505?size=0",
                                              "controlParameters": {
                                                  "psuAuthenticationMethods": [
                                                      "SCA_NOT_REQUIRED"
                                                  ],
                                                  "periodicLimits": [
                                                      {
                                                          "totalMaxAmount": {
                                                              "amount": 100,
                                                              "currency": "GBP"
                                                          },
                                                          "frequency": "DAILY",
                                                          "alignment": "CONSENT"
                                                      }
                                                  ],
                                                  "maxAmountPerPayment": {
                                                      "amount": 10,
                                                      "currency": "GBP"
                                                  }
                                              },
                                              "payer": {
                                                  "name": "John Doe",
                                                  "accountIdentifications": [
                                                      {
                                                          "type": "ACCOUNT_NUMBER",
                                                          "identification": "87654321"
                                                      },
                                                      {
                                                          "type": "SORT_CODE",
                                                          "identification": "654321"
                                                      }
                                                  ]
                                              },
                                              "initiationDetails": {
                                                  "reference": "Own Account Sweeping",
                                                  "payer": {
                                                      "name": "John Doe",
                                                      "accountIdentifications": [
                                                          {
                                                              "type": "ACCOUNT_NUMBER",
                                                              "identification": "87654321"
                                                          },
                                                          {
                                                              "type": "SORT_CODE",
                                                              "identification": "654321"
                                                          }
                                                      ]
                                                  },
                                                  "payee": {
                                                      "name": "John Doe",
                                                      "accountIdentifications": [
                                                          {
                                                              "type": "ACCOUNT_NUMBER",
                                                              "identification": "12345678"
                                                          },
                                                          {
                                                              "type": "SORT_CODE",
                                                              "identification": "123456"
                                                          }
                                                      ]
                                                  }
                                              }
                                          }
                                      }
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfSweepingAuthorisationResponse"
                              }
                          }
                      },
                      "description": "Created"
                  },
                  "401": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "description": "Error Response",
                                      "value": {
                                          "error": {
                                              "tracingId": "0c2d0973bdd24224a65e5d0f7d1b6154",
                                              "code": 401,
                                              "status": "UNAUTHORIZED",
                                              "supportUrl": "https://support.yapily.com/",
                                              "source": "YAPILY",
                                              "issues": [
                                                  {
                                                      "type": "CREDENTIALS",
                                                      "code": "CREDENTIALS_MISSING",
                                                      "message": "Authentication header not present"
                                                  }
                                              ]
                                          }
                                      }
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      },
                      "description": "Error Response"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "description": "Error Response",
                                      "value": {
                                          "error": {
                                              "tracingId": "0c2d0973bdd24224a65e5d0f7d1b6154",
                                              "code": 400,
                                              "status": "BAD_REQUEST",
                                              "supportUrl": "https://support.yapily.com/",
                                              "source": "YAPILY",
                                              "issues": [
                                                  {
                                                      "type": "BAD_REQUEST",
                                                      "code": "BAD_REQUEST",
                                                      "message": "The server could not understand the request due to invalid syntax"
                                                  }
                                              ]
                                          }
                                      }
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Create Sweeping Variable Recurring Payment Authorisation",
              "tags": [
                  "Variable Recurring Payments"
              ]
          }
      },
      "/variable-recurring-payments/non-sweeping/consents": {
          "x-yapily-features": [
              "INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_NONSWEEPING"
          ],
          "post": {
              "description": "Used to initiate the authorisation process and direct users to the login screen of their financial Institution in order to give their consent for Non-Sweeping Variable Recurring Payments. The request would return an Authorization URL and an Identifier for the consent created at the Institution. First make sure that the payment feature you wish to execute is supported by the bank by checking the features array in [GET Institution](https://docs.yapily.com/api/#get-institution). <br><br>See [Redirect Payment Flows](https://docs.yapily.com/guides/payments/payment-authorisation-flows/redirect/) for more information about this flow.<br><br>Features:<ul><li>`INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_NONSWEEPING`</li></ul>",
              "operationId": "createNonSweepingAuthorisation",
              "x-beta": true,
              "requestBody": {
                  "content": {
                      "application/json;charset=UTF-8": {
                          "examples": {
                              "UK Domestic Non-Sweeping VRP Authorisation Example Request": {
                                  "description": "UK Domestic Non-Sweeping VRP Authorisation Example Request",
                                  "value": {
                                      "applicationUserId": "string",
                                      "institutionId": "modelo-sandbox",
                                      "callback": "https://display-parameters.com/",
                                      "controlParameters": {
                                          "psuAuthenticationMethods": [
                                              "SCA_NOT_REQUIRED"
                                          ],
                                          "periodicLimits": [
                                              {
                                                  "totalMaxAmount": {
                                                      "amount": 100,
                                                      "currency": "GBP"
                                                  },
                                                  "frequency": "DAILY",
                                                  "alignment": "CONSENT",
                                                  "maxNumberOfPayments": 1
                                              }
                                          ],
                                          "maxAmountPerPayment": {
                                              "amount": 10,
                                              "currency": "GBP"
                                          },
                                          "maxCumulativeAmount": {
                                              "amount": 100,
                                              "currency": "GBP"
                                          },
                                          "maxCumulativeNumberOfPayments": 10,
                                          "recurringPaymentCategory": "ONGOING"
                                      },
                                      "initiationDetails": {
                                          "reference": "Bill Payment",
                                          "payer": {
                                              "name": "John Doe",
                                              "accountIdentifications": [
                                                  {
                                                      "type": "ACCOUNT_NUMBER",
                                                      "identification": "87654321"
                                                  },
                                                  {
                                                      "type": "SORT_CODE",
                                                      "identification": "654321"
                                                  }
                                              ]
                                          },
                                          "payee": {
                                              "name": "Thames Water",
                                              "accountIdentifications": [
                                                  {
                                                      "type": "ACCOUNT_NUMBER",
                                                      "identification": "12345678"
                                                  },
                                                  {
                                                      "type": "SORT_CODE",
                                                      "identification": "123456"
                                                  }
                                              ]
                                          }
                                      },
                                      "complianceData": {
                                          "payer": {
                                              "type": "BUSINESS",
                                              "business": {
                                                  "name": "Company LTD",
                                                  "registrationNumber": "COM123NO",
                                                  "registeredAddress": {
                                                      "addressLine1": "123 Queens Street",
                                                      "addressLine2": "Unit 13",
                                                      "townName": "York",
                                                      "postCode": "12345",
                                                      "country": "GB"
                                                  },
                                                  "tradingAddress": {
                                                      "addressLine1": "123 Queens Street",
                                                      "addressLine2": "Unit 13",
                                                      "townName": "York",
                                                      "postCode": "12345",
                                                      "country": "GB"
                                                  }
                                              }
                                          }
                                      }
                                  }
                              }
                          },
                          "schema": {
                              "$ref": "#/components/schemas/NonSweepingAuthorisationRequest"
                          }
                      }
                  },
                  "required": true
              },
              "responses": {
                  "201": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "UK Domestic Non-Sweeping VRP Authorisation Example Response": {
                                      "description": "UK Domestic Non-Sweeping VRP Authorisation Example Response",
                                      "value": {
                                          "meta": {
                                              "tracingId": "96169af01d394ad39658f17d53b49a5d"
                                          },
                                          "data": {
                                              "id": "a2a9ec77-a479-4996-9896-4568e1968e7a",
                                              "userId": "5350782b-60f3-489e-aae5-a24d8d679a07",
                                              "applicationUserId": "string",
                                              "institutionId": "modelo-sandbox",
                                              "status": "AWAITING_AUTHORIZATION",
                                              "createdAt": "2021-06-09T13:48:25.138Z",
                                              "featureScope": [
                                                  "EXISTING_PAYMENTS_DETAILS",
                                                  "EXISTING_PAYMENT_INITIATION_DETAILS",
                                                  "CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_NONSWEEPING",
                                                  "VARIABLE_RECURRING_PAYMENT_FUNDS_CONFIRMATION",
                                                  "INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_NONSWEEPING"
                                              ],
                                              "state": "80052c03007f41d589f64377eef4d620",
                                              "institutionConsentId": "sdp-6-25ff5bd8-d01c-422d-aa9e-8e68808bc899",
                                              "authorisationUrl": "https://ob19-auth1-ui.o3bank.co.uk/auth?client_id=e7f6b95b-5f35-419b-b301-8b08bcd946de&response_type=code+id_token&state=80052c03007f41d589f64377eef4d620&nonce=80052c03007f41d589f64377eef4d620&scope=openid+payments&redirect_uri=https%3A%2F%2Fauth.yapily.com%2F&request=eyJraWQiOiJnRTRvU3VaZDl4TVpUNXZDdTNWYy1mdktNak0iLCJhbGciOiJQUzI1NiJ9.eyJhdWQiOiJodHRwczovL29iMTktYXV0aDEtdWkubzNiYW5rLmNvLnVrIiwic2NvcGUiOiJvcGVuaWQgcGF5bWVudHMiLCJpc3MiOiJlN2Y2Yjk1Yi01ZjM1LTQxOWItYjMwMS04YjA4YmNkOTQ2ZGUiLCJjbGllbnRfaWQiOiJlN2Y2Yjk1Yi01ZjM1LTQxOWItYjMwMS04YjA4YmNkOTQ2ZGUiLCJyZXNwb25zZV90eXBlIjoiY29kZSBpZF90b2tlbiIsInJlZGlyZWN0X3VyaSI6Imh0dHBzOi8vYXV0aC55YXBpbHkuY29tLyIsInN0YXRlIjoiODAwNTJjMDMwMDdmNDFkNTg5ZjY0Mzc3ZWVmNGQ2MjAiLCJjbGFpbXMiOnsiaWRfdG9rZW4iOnsiYWNyIjp7InZhbHVlIjoidXJuOm9wZW5iYW5raW5nOnBzZDI6c2NhIiwiZXNzZW50aWFsIjp0cnVlfSwib3BlbmJhbmtpbmdfaW50ZW50X2lkIjp7InZhbHVlIjoic2RwLTYtMjVmZjViZDgtZDAxYy00MjJkLWFhOWUtOGU2ODgwOGJjODk5IiwiZXNzZW50aWFsIjp0cnVlfX0sInVzZXJpbmZvIjp7Im9wZW5iYW5raW5nX2ludGVudF9pZCI6eyJ2YWx1ZSI6InNkcC02LTI1ZmY1YmQ4LWQwMWMtNDIyZC1hYTllLThlNjg4MDhiYzg5OSIsImVzc2VudGlhbCI6dHJ1ZX19fSwibm9uY2UiOiI4MDA1MmMwMzAwN2Y0MWQ1ODlmNjQzNzdlZWY0ZDYyMCIsImp0aSI6ImUxYjZmMWM4LTQ1ZTktNGM0NS05NGE0LWExMTY1Nzk2NjZiNiIsImlhdCI6MTYyMzI0NjUwNSwiZXhwIjoxNjIzMjQ4MzA1fQ.C5YkClHiDOWl1CKnmEY0gM_JizUuELp2-k7sDjsWV5T-mgTWviO-jM7iVfCf4MsU6batLSBmeUFLco1b3S8PTQkAzwM3laHIgbfDAb_6bYkSBTbPriyzKcC8xAwhX3VdvWtb9qqdrn9zXSmIIITBhJdMzk1cgIjyETD7WNPln839eGP1-w8iB8yDOJOkYGRHJ850mQY-lk61GegmKs5kaxtYPIhrG2gygIi3JsN-uQJ6YOl2-5pylTEcJbuwhFiyeePdqHZdabqW2BSA6lDKQbMV_Zow_zhSWoFFv6RZdXCQpt4TBRj1W7tzZQKin-MC-TpzaF1q07RpSy0NtlN85w",
                                              "qrCodeUrl": "https://images.yapily.com/image/2bbb79b8-2c4a-4c8e-9132-0636879437da/1623246505?size=0",
                                              "controlParameters": {
                                                  "psuAuthenticationMethods": [
                                                      "SCA_NOT_REQUIRED"
                                                  ],
                                                  "periodicLimits": [
                                                      {
                                                          "totalMaxAmount": {
                                                              "amount": 100,
                                                              "currency": "GBP"
                                                          },
                                                          "frequency": "DAILY",
                                                          "alignment": "CONSENT",
                                                          "maxNumberOfPayments": 1
                                                      }
                                                  ],
                                                  "maxAmountPerPayment": {
                                                      "amount": 10,
                                                      "currency": "GBP"
                                                  },
                                                  "maxCumulativeAmount": {
                                                      "amount": 100,
                                                      "currency": "GBP"
                                                  },
                                                  "maxCumulativeNumberOfPayments": 10,
                                                  "recurringPaymentCategory": "ONGOING"
                                              },
                                              "payer": {
                                                  "name": "John Doe",
                                                  "accountIdentifications": [
                                                      {
                                                          "type": "ACCOUNT_NUMBER",
                                                          "identification": "87654321"
                                                      },
                                                      {
                                                          "type": "SORT_CODE",
                                                          "identification": "654321"
                                                      }
                                                  ]
                                              },
                                              "initiationDetails": {
                                                  "reference": "Bill Payment",
                                                  "payer": {
                                                      "name": "John Doe",
                                                      "accountIdentifications": [
                                                          {
                                                              "type": "ACCOUNT_NUMBER",
                                                              "identification": "87654321"
                                                          },
                                                          {
                                                              "type": "SORT_CODE",
                                                              "identification": "654321"
                                                          }
                                                      ]
                                                  },
                                                  "payee": {
                                                      "name": "Thames Water",
                                                      "accountIdentifications": [
                                                          {
                                                              "type": "ACCOUNT_NUMBER",
                                                              "identification": "12345678"
                                                          },
                                                          {
                                                              "type": "SORT_CODE",
                                                              "identification": "123456"
                                                          }
                                                      ]
                                                  }
                                              }
                                          }
                                      }
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfNonSweepingAuthorisationResponse"
                              }
                          }
                      },
                      "description": "Created"
                  },
                  "401": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "description": "Error Response",
                                      "value": {
                                          "error": {
                                              "tracingId": "0c2d0973bdd24224a65e5d0f7d1b6154",
                                              "code": 401,
                                              "status": "UNAUTHORIZED",
                                              "supportUrl": "https://support.yapily.com/",
                                              "source": "YAPILY",
                                              "issues": [
                                                  {
                                                      "type": "CREDENTIALS",
                                                      "code": "CREDENTIALS_MISSING",
                                                      "message": "Authentication header not present"
                                                  }
                                              ]
                                          }
                                      }
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      },
                      "description": "Error Response"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "description": "Error Response",
                                      "value": {
                                          "error": {
                                              "tracingId": "0c2d0973bdd24224a65e5d0f7d1b6154",
                                              "code": 400,
                                              "status": "BAD_REQUEST",
                                              "supportUrl": "https://support.yapily.com/",
                                              "source": "YAPILY",
                                              "issues": [
                                                  {
                                                      "type": "BAD_REQUEST",
                                                      "code": "BAD_REQUEST",
                                                      "message": "The server could not understand the request due to invalid syntax"
                                                  }
                                              ]
                                          }
                                      }
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Create Non-Sweeping Variable Recurring Payment Authorisation",
              "tags": [
                  "Variable Recurring Payments"
              ]
          }
      },
      "/variable-recurring-payments/payments": {
          "x-yapily-features": [
              "CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_NONSWEEPING",
              "CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_NONSWEEPING"
          ],
          "post": {
              "description": "Creates a Variable Recurring Payment transaction after obtaining the user's authorisation.<br><br>Features:<ul><li>`CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_SWEEPING`</li><li>`CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_NONSWEEPING`</li></ul>",
              "operationId": "createVrpPayment",
              "x-beta": true,
              "parameters": [
                  {
                      "description": "__Mandatory__. The `consent-token` containing the user's authorisation to make the request.",
                      "example": "{consentToken}",
                      "in": "header",
                      "name": "consent",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json;charset=UTF-8": {
                          "examples": {
                              "UK Domestic VRP Payment Example Request": {
                                  "description": "UK Domestic VRP Payment Example Request",
                                  "value": {
                                      "paymentIdempotencyId": "234g87t58tgeuo848wudjew489",
                                      "psuAuthenticationMethod": "SCA_NOT_REQUIRED",
                                      "paymentAmount": {
                                          "amount": 10,
                                          "currency": "GBP"
                                      }
                                  }
                              }
                          },
                          "schema": {
                              "$ref": "#/components/schemas/SubmissionRequest"
                          }
                      }
                  },
                  "required": true
              },
              "responses": {
                  "201": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "UK Domestic VRP Payment Example Response": {
                                      "description": "UK Domestic VRP Payment Example Response",
                                      "value": {
                                          "meta": {
                                              "tracingId": "0f14e900011b445fa6b6c2c4272d7321"
                                          },
                                          "data": {
                                              "id": "a9582f8e-08be-4cca-9f01-1ad3be96532d",
                                              "paymentIdempotencyId": "234g87t58tgeuo848wudjew489",
                                              "institutionConsentId": "PF23232222DD",
                                              "status": "COMPLETED",
                                              "statusDetails": {
                                                  "status": "COMPLETED",
                                                  "isoStatus": {
                                                      "code": "ACCP",
                                                      "name": "AcceptedCustomerProfile"
                                                  }
                                              },
                                              "initiationDetails": {
                                                  "reference": "Own Account Sweeping",
                                                  "payer": {
                                                      "name": "John Doe",
                                                      "accountIdentifications": [
                                                          {
                                                              "type": "ACCOUNT_NUMBER",
                                                              "identification": "87654321"
                                                          },
                                                          {
                                                              "type": "SORT_CODE",
                                                              "identification": "654321"
                                                          }
                                                      ]
                                                  },
                                                  "payee": {
                                                      "name": "John Doe",
                                                      "accountIdentifications": [
                                                          {
                                                              "type": "ACCOUNT_NUMBER",
                                                              "identification": "12345678"
                                                          },
                                                          {
                                                              "type": "SORT_CODE",
                                                              "identification": "123456"
                                                          }
                                                      ]
                                                  }
                                              },
                                              "submissionDetails": {
                                                  "reference": "Own Account Sweeping",
                                                  "payee": {
                                                      "name": "John Doe",
                                                      "accountIdentifications": [
                                                          {
                                                              "type": "ACCOUNT_NUMBER",
                                                              "identification": "12345678"
                                                          },
                                                          {
                                                              "type": "SORT_CODE",
                                                              "identification": "123456"
                                                          }
                                                      ]
                                                  },
                                                  "paymentAmount": {
                                                      "amount": 10,
                                                      "currency": "GBP"
                                                  }
                                              },
                                              "payer": {
                                                  "name": "John Doe",
                                                  "accountIdentifications": [
                                                      {
                                                          "type": "ACCOUNT_NUMBER",
                                                          "identification": "87654321"
                                                      },
                                                      {
                                                          "type": "SORT_CODE",
                                                          "identification": "654321"
                                                      }
                                                  ]
                                              },
                                              "refundAccount": {
                                                  "accountIdentifications": [
                                                      {
                                                          "identification": "400400",
                                                          "type": "SORT_CODE"
                                                      },
                                                      {
                                                          "identification": "99999999",
                                                          "type": "ACCOUNT_NUMBER"
                                                      }
                                                  ],
                                                  "name": "Refund Account"
                                              },
                                              "expectedSettlementTime": "2022-03-02T12:00:00.000Z",
                                              "expectedExecutionTime": "2022-03-02T12:00:00.000Z"
                                          }
                                      }
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfSubmissionResponse"
                              }
                          }
                      },
                      "description": "Created"
                  },
                  "401": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "description": "Error Response",
                                      "value": {
                                          "error": {
                                              "tracingId": "0c2d0973bdd24224a65e5d0f7d1b6154",
                                              "code": 401,
                                              "status": "UNAUTHORIZED",
                                              "supportUrl": "https://support.yapily.com/",
                                              "source": "YAPILY",
                                              "issues": [
                                                  {
                                                      "type": "CREDENTIALS",
                                                      "code": "CREDENTIALS_MISSING",
                                                      "message": "Authentication header not present"
                                                  }
                                              ]
                                          }
                                      }
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      },
                      "description": "Error Response"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "description": "Error Response",
                                      "value": {
                                          "error": {
                                              "tracingId": "0c2d0973bdd24224a65e5d0f7d1b6154",
                                              "code": 400,
                                              "status": "BAD_REQUEST",
                                              "supportUrl": "https://support.yapily.com/",
                                              "source": "YAPILY",
                                              "issues": [
                                                  {
                                                      "type": "BAD_REQUEST",
                                                      "code": "BAD_REQUEST",
                                                      "message": "The server could not understand the request due to invalid syntax"
                                                  }
                                              ]
                                          }
                                      }
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Create Variable Recurring Payment",
              "tags": [
                  "Variable Recurring Payments"
              ]
          }
      },
      "/variable-recurring-payments/sweeping/consents/{consentId}": {
          "get": {
              "description": "Get Sweeping Variable Recurring Payments consent details using the consent Id",
              "operationId": "getSweepingVrpConsentById",
              "x-beta": true,
              "parameters": [
                  {
                      "description": "__Mandatory__. The consent Id of the `Variable Recurring Payments Consent` to retrieve.",
                      "in": "path",
                      "name": "consentId",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Get Sweeping Variable Recurring Payments Consent Example Response": {
                                      "description": "Get Sweeping Variable Recurring Payments Consent Example Response",
                                      "value": {
                                          "meta": {
                                              "tracingId": "679e7bb6cd45416a9a9a8d004c5315da"
                                          },
                                          "data": {
                                              "id": "56a42244-414a-4b52-8c4f-4ad2a50e82fe",
                                              "userId": "ca412fdf-5a30-43a2-88b7-5964a24a8e55",
                                              "applicationUserId": "string",
                                              "institutionId": "modelo-sandbox",
                                              "status": "AUTHORIZED",
                                              "createdAt": "2021-06-08T10:59:35.138Z",
                                              "featureScope": [
                                                  "EXISTING_PAYMENTS_DETAILS",
                                                  "EXISTING_PAYMENT_INITIATION_DETAILS",
                                                  "CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_SWEEPING",
                                                  "VARIABLE_RECURRING_PAYMENT_FUNDS_CONFIRMATION",
                                                  "INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_SWEEPING"
                                              ],
                                              "consentToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJJTlNUSVRVVElPTiI6Im1vZGVsby1zYW5kYm94IiwiQ09OU0VOVCI6IjU2YTQyMjQ0LTQxNGEtNGI1Mi04YzRmLTRhZDJhNTBlODJmZSIsIkFQUExJQ0FUSU9OX1VTRVJfSUQiOiJtb2ZlLTIiLCJVU0VSIjoiY2E0MTJmZGYtNWEzMC00M2EyLTg4YjctNTk2NGEyNGE4ZTU1In0.gorwpnUjSr5dzQJLR32M2geWOj7yK9xMsZmq27ssY9xP_xGmWfUL_aqVHYyQ4r5KWw6Xb6RjvO839st8chJLtg",
                                              "state": "a09f8ff9c1284444aa635267e05f76e1",
                                              "authorizedAt": "2021-06-08T10:59:53.288Z",
                                              "institutionConsentId": "aac-605d48f2-2a0e-4594-81a9-996524fa3b2a",
                                              "controlParameters": {
                                                  "psuAuthenticationMethods": [
                                                      "SCA_NOT_REQUIRED"
                                                  ],
                                                  "periodicLimits": [
                                                      {
                                                          "totalMaxAmount": {
                                                              "amount": 100,
                                                              "currency": "GBP"
                                                          },
                                                          "frequency": "DAILY",
                                                          "alignment": "CONSENT"
                                                      }
                                                  ],
                                                  "maxAmountPerPayment": {
                                                      "amount": 10,
                                                      "currency": "GBP"
                                                  }
                                              },
                                              "payer": {
                                                  "name": "John Doe",
                                                  "accountIdentifications": [
                                                      {
                                                          "type": "ACCOUNT_NUMBER",
                                                          "identification": "87654321"
                                                      },
                                                      {
                                                          "type": "SORT_CODE",
                                                          "identification": "654321"
                                                      }
                                                  ]
                                              },
                                              "initiationDetails": {
                                                  "reference": "Own Account Sweeping",
                                                  "payer": {
                                                      "name": "John Doe",
                                                      "accountIdentifications": [
                                                          {
                                                              "type": "ACCOUNT_NUMBER",
                                                              "identification": "87654321"
                                                          },
                                                          {
                                                              "type": "SORT_CODE",
                                                              "identification": "654321"
                                                          }
                                                      ]
                                                  },
                                                  "payee": {
                                                      "name": "John Doe",
                                                      "accountIdentifications": [
                                                          {
                                                              "type": "ACCOUNT_NUMBER",
                                                              "identification": "12345678"
                                                          },
                                                          {
                                                              "type": "SORT_CODE",
                                                              "identification": "123456"
                                                          }
                                                      ]
                                                  }
                                              }
                                          }
                                      }
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfSweepingAuthorisationResponse"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "401": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "description": "Error Response",
                                      "value": {
                                          "error": {
                                              "tracingId": "0c2d0973bdd24224a65e5d0f7d1b6154",
                                              "code": 401,
                                              "status": "UNAUTHORIZED",
                                              "supportUrl": "https://support.yapily.com/",
                                              "source": "YAPILY",
                                              "issues": [
                                                  {
                                                      "type": "CREDENTIALS",
                                                      "code": "CREDENTIALS_MISSING",
                                                      "message": "Authentication header not present"
                                                  }
                                              ]
                                          }
                                      }
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      },
                      "description": "Error Response"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "description": "Error Response",
                                      "value": {
                                          "error": {
                                              "tracingId": "0c2d0973bdd24224a65e5d0f7d1b6154",
                                              "code": 400,
                                              "status": "BAD_REQUEST",
                                              "supportUrl": "https://support.yapily.com/",
                                              "source": "YAPILY",
                                              "issues": [
                                                  {
                                                      "type": "BAD_REQUEST",
                                                      "code": "BAD_REQUEST",
                                                      "message": "The server could not understand the request due to invalid syntax"
                                                  }
                                              ]
                                          }
                                      }
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Get Sweeping Variable Recurring Payment Consent Details",
              "tags": [
                  "Variable Recurring Payments"
              ]
          }
      },
      "/variable-recurring-payments/non-sweeping/consents/{consentId}": {
          "get": {
              "description": "Get Non-Sweeping Variable Recurring Payments consent details using the consent Id",
              "operationId": "getNonSweepingVrpConsentById",
              "x-beta": true,
              "parameters": [
                  {
                      "description": "__Mandatory__. The consent Id of the `Variable Recurring Payments Consent` to retrieve.",
                      "in": "path",
                      "name": "consentId",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Get Non-Sweeping Variable Recurring Payments Consent Example Response": {
                                      "description": "Get Non-Sweeping Variable Recurring Payments Consent Example Response",
                                      "value": {
                                          "meta": {
                                              "tracingId": "679e7bb6cd45416a9a9a8d004c5315da"
                                          },
                                          "data": {
                                              "id": "56a42244-414a-4b52-8c4f-4ad2a50e82fe",
                                              "userId": "ca412fdf-5a30-43a2-88b7-5964a24a8e55",
                                              "applicationUserId": "string",
                                              "institutionId": "modelo-sandbox",
                                              "status": "AUTHORIZED",
                                              "createdAt": "2021-06-08T10:59:35.138Z",
                                              "featureScope": [
                                                  "EXISTING_PAYMENTS_DETAILS",
                                                  "EXISTING_PAYMENT_INITIATION_DETAILS",
                                                  "CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_NONSWEEPING",
                                                  "VARIABLE_RECURRING_PAYMENT_FUNDS_CONFIRMATION",
                                                  "INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_NONSWEEPING"
                                              ],
                                              "consentToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJJTlNUSVRVVElPTiI6Im1vZGVsby1zYW5kYm94IiwiQ09OU0VOVCI6IjU2YTQyMjQ0LTQxNGEtNGI1Mi04YzRmLTRhZDJhNTBlODJmZSIsIkFQUExJQ0FUSU9OX1VTRVJfSUQiOiJtb2ZlLTIiLCJVU0VSIjoiY2E0MTJmZGYtNWEzMC00M2EyLTg4YjctNTk2NGEyNGE4ZTU1In0.gorwpnUjSr5dzQJLR32M2geWOj7yK9xMsZmq27ssY9xP_xGmWfUL_aqVHYyQ4r5KWw6Xb6RjvO839st8chJLtg",
                                              "state": "a09f8ff9c1284444aa635267e05f76e1",
                                              "authorizedAt": "2021-06-08T10:59:53.288Z",
                                              "institutionConsentId": "aac-605d48f2-2a0e-4594-81a9-996524fa3b2a",
                                              "controlParameters": {
                                                  "psuAuthenticationMethods": [
                                                      "SCA_NOT_REQUIRED"
                                                  ],
                                                  "periodicLimits": [
                                                      {
                                                          "totalMaxAmount": {
                                                              "amount": 100,
                                                              "currency": "GBP"
                                                          },
                                                          "frequency": "DAILY",
                                                          "alignment": "CONSENT",
                                                          "maxNumberOfPayments": 10
                                                      }
                                                  ],
                                                  "maxAmountPerPayment": {
                                                      "amount": 10,
                                                      "currency": "GBP"
                                                  },
                                                  "maxCumulativeAmount": {
                                                      "amount": 100,
                                                      "currency": "GBP"
                                                  },
                                                  "maxCumulativeNumberOfPayments": 10
                                              },
                                              "payer": {
                                                  "name": "John Doe",
                                                  "accountIdentifications": [
                                                      {
                                                          "type": "ACCOUNT_NUMBER",
                                                          "identification": "87654321"
                                                      },
                                                      {
                                                          "type": "SORT_CODE",
                                                          "identification": "654321"
                                                      }
                                                  ]
                                              },
                                              "initiationDetails": {
                                                  "reference": "Bill Payment",
                                                  "payer": {
                                                      "name": "John Doe",
                                                      "accountIdentifications": [
                                                          {
                                                              "type": "ACCOUNT_NUMBER",
                                                              "identification": "87654321"
                                                          },
                                                          {
                                                              "type": "SORT_CODE",
                                                              "identification": "654321"
                                                          }
                                                      ]
                                                  },
                                                  "payee": {
                                                      "name": "Thames Water",
                                                      "accountIdentifications": [
                                                          {
                                                              "type": "ACCOUNT_NUMBER",
                                                              "identification": "12345678"
                                                          },
                                                          {
                                                              "type": "SORT_CODE",
                                                              "identification": "123456"
                                                          }
                                                      ]
                                                  }
                                              }
                                          }
                                      }
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfNonSweepingAuthorisationResponse"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "401": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "description": "Error Response",
                                      "value": {
                                          "error": {
                                              "tracingId": "0c2d0973bdd24224a65e5d0f7d1b6154",
                                              "code": 401,
                                              "status": "UNAUTHORIZED",
                                              "supportUrl": "https://support.yapily.com/",
                                              "source": "YAPILY",
                                              "issues": [
                                                  {
                                                      "type": "CREDENTIALS",
                                                      "code": "CREDENTIALS_MISSING",
                                                      "message": "Authentication header not present"
                                                  }
                                              ]
                                          }
                                      }
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      },
                      "description": "Error Response"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "description": "Error Response",
                                      "value": {
                                          "error": {
                                              "tracingId": "0c2d0973bdd24224a65e5d0f7d1b6154",
                                              "code": 400,
                                              "status": "BAD_REQUEST",
                                              "supportUrl": "https://support.yapily.com/",
                                              "source": "YAPILY",
                                              "issues": [
                                                  {
                                                      "type": "BAD_REQUEST",
                                                      "code": "BAD_REQUEST",
                                                      "message": "The server could not understand the request due to invalid syntax"
                                                  }
                                              ]
                                          }
                                      }
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Get Non-Sweeping Variable Recurring Payment Consent Details",
              "tags": [
                  "Variable Recurring Payments"
              ]
          }
      },
      "/variable-recurring-payments/funds-confirmation": {
          "x-yapily-features": [
              "VARIABLE_RECURRING_PAYMENT_FUNDS_CONFIRMATION"
          ],
          "post": {
              "description": "Confirms whether there are available funds on the Payer account to execute a Variable Recurring Payment after obtaining the user's authorisation. <br><br>Features:<ul><li>`VARIABLE_RECURRING_PAYMENT_FUNDS_CONFIRMATION`</li></ul>",
              "operationId": "createVrpFundsConfirmation",
              "x-beta": true,
              "parameters": [
                  {
                      "description": "__Mandatory__. The `consent-token` containing the user's authorisation to make the request.",
                      "example": "{consentToken}",
                      "in": "header",
                      "name": "consent",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json;charset=UTF-8": {
                          "examples": {
                              "UK Domestic VRP Funds Confirmation Example Request": {
                                  "description": "UK Domestic VRP Funds Confirmation Example Request",
                                  "value": {
                                      "reference": "Own Account Sweeping",
                                      "paymentAmount": {
                                          "amount": 10,
                                          "currency": "GBP"
                                      }
                                  }
                              }
                          },
                          "schema": {
                              "$ref": "#/components/schemas/FundsConfirmationRequest"
                          }
                      }
                  },
                  "required": true
              },
              "responses": {
                  "201": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "UK Domestic VRP Funds Confirmation Example Response": {
                                      "description": "UK Domestic VRP Funds Confirmation Example Response",
                                      "value": {
                                          "meta": {
                                              "tracingId": "0f14e900011b445fa6b6c2c4272d7321"
                                          },
                                          "data": {
                                              "id": "a9582f8e-08be-4cca-9f01-1ad3be96532d",
                                              "fundsAvailable": {
                                                  "fundsAvailable": true,
                                                  "fundsAvailableAt": "2021-06-08T10:59:35.138Z"
                                              },
                                              "reference": "Own Account Sweeping",
                                              "paymentAmount": {
                                                  "amount": 10,
                                                  "currency": "GBP"
                                              }
                                          }
                                      }
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfFundsConfirmationResponse"
                              }
                          }
                      },
                      "description": "Created"
                  },
                  "401": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "description": "Error Response",
                                      "value": {
                                          "error": {
                                              "tracingId": "0c2d0973bdd24224a65e5d0f7d1b6154",
                                              "code": 401,
                                              "status": "UNAUTHORIZED",
                                              "supportUrl": "https://support.yapily.com/",
                                              "source": "YAPILY",
                                              "issues": [
                                                  {
                                                      "type": "CREDENTIALS",
                                                      "code": "CREDENTIALS_MISSING",
                                                      "message": "Authentication header not present"
                                                  }
                                              ]
                                          }
                                      }
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      },
                      "description": "Error Response"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "description": "Error Response",
                                      "value": {
                                          "error": {
                                              "tracingId": "0c2d0973bdd24224a65e5d0f7d1b6154",
                                              "code": 400,
                                              "status": "BAD_REQUEST",
                                              "supportUrl": "https://support.yapily.com/",
                                              "source": "YAPILY",
                                              "issues": [
                                                  {
                                                      "type": "BAD_REQUEST",
                                                      "code": "BAD_REQUEST",
                                                      "message": "The server could not understand the request due to invalid syntax"
                                                  }
                                              ]
                                          }
                                      }
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Confirm Funds for Variable Recurring Payment",
              "tags": [
                  "Variable Recurring Payments"
              ]
          }
      },
      "/variable-recurring-payments/payments/{paymentId}/details": {
          "get": {
              "description": "Get Variable Recurring Payment details using the Payment Id",
              "operationId": "getVrpPaymentDetails",
              "x-beta": true,
              "parameters": [
                  {
                      "description": "__Mandatory__. The Payment Id of the `Variable Recurring Payments` to retrieve.",
                      "in": "path",
                      "name": "paymentId",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Mandatory__. The consent token containing the user's authorisation to make the `Variable Recurring Payments` request.",
                      "in": "header",
                      "name": "consent",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Get Variable Recurring Payment Details Example Response": {
                                      "description": "Get Variable Recurring Payment Details Example Response",
                                      "value": {
                                          "meta": {
                                              "tracingId": "679e7bb6cd45416a9a9a8d004c5315da"
                                          },
                                          "data": {
                                              "id": "a9582f8e-08be-4cca-9f01-1ad3be96532d",
                                              "paymentIdempotencyId": "234g87t58tgeuo848wudjew489",
                                              "institutionConsentId": "PF23232222DD",
                                              "status": "COMPLETED",
                                              "statusDetails": {
                                                  "status": "COMPLETED",
                                                  "isoStatus": {
                                                      "code": "ACCP",
                                                      "name": "AcceptedCustomerProfile"
                                                  }
                                              },
                                              "initiationDetails": {
                                                  "reference": "Own Account Sweeping",
                                                  "payer": {
                                                      "name": "John Doe",
                                                      "accountIdentifications": [
                                                          {
                                                              "type": "ACCOUNT_NUMBER",
                                                              "identification": "87654321"
                                                          },
                                                          {
                                                              "type": "SORT_CODE",
                                                              "identification": "654321"
                                                          }
                                                      ]
                                                  },
                                                  "payee": {
                                                      "name": "John Doe",
                                                      "accountIdentifications": [
                                                          {
                                                              "type": "ACCOUNT_NUMBER",
                                                              "identification": "12345678"
                                                          },
                                                          {
                                                              "type": "SORT_CODE",
                                                              "identification": "123456"
                                                          }
                                                      ]
                                                  }
                                              },
                                              "submissionDetails": {
                                                  "reference": "Own Account Sweeping",
                                                  "payee": {
                                                      "name": "John Doe",
                                                      "accountIdentifications": [
                                                          {
                                                              "type": "ACCOUNT_NUMBER",
                                                              "identification": "12345678"
                                                          },
                                                          {
                                                              "type": "SORT_CODE",
                                                              "identification": "123456"
                                                          }
                                                      ]
                                                  },
                                                  "paymentAmount": {
                                                      "amount": 10,
                                                      "currency": "GBP"
                                                  }
                                              },
                                              "payer": {
                                                  "name": "John Doe",
                                                  "accountIdentifications": [
                                                      {
                                                          "type": "ACCOUNT_NUMBER",
                                                          "identification": "87654321"
                                                      },
                                                      {
                                                          "type": "SORT_CODE",
                                                          "identification": "654321"
                                                      }
                                                  ]
                                              },
                                              "refundAccount": {
                                                  "accountIdentifications": [
                                                      {
                                                          "identification": "400400",
                                                          "type": "SORT_CODE"
                                                      },
                                                      {
                                                          "identification": "99999999",
                                                          "type": "ACCOUNT_NUMBER"
                                                      }
                                                  ],
                                                  "name": "Refund Account"
                                              },
                                              "expectedSettlementTime": "2022-03-02T12:00:00.000Z",
                                              "expectedExecutionTime": "2022-03-02T12:00:00.000Z"
                                          }
                                      }
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfSubmissionResponse"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "401": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "description": "Error Response",
                                      "value": {
                                          "error": {
                                              "tracingId": "0c2d0973bdd24224a65e5d0f7d1b6154",
                                              "code": 401,
                                              "status": "UNAUTHORIZED",
                                              "supportUrl": "https://support.yapily.com/",
                                              "source": "YAPILY",
                                              "issues": [
                                                  {
                                                      "type": "CREDENTIALS",
                                                      "code": "CREDENTIALS_MISSING",
                                                      "message": "Authentication header not present"
                                                  }
                                              ]
                                          }
                                      }
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      },
                      "description": "Error Response"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "description": "Error Response",
                                      "value": {
                                          "error": {
                                              "tracingId": "0c2d0973bdd24224a65e5d0f7d1b6154",
                                              "code": 400,
                                              "status": "BAD_REQUEST",
                                              "supportUrl": "https://support.yapily.com/",
                                              "source": "YAPILY",
                                              "issues": [
                                                  {
                                                      "type": "BAD_REQUEST",
                                                      "code": "BAD_REQUEST",
                                                      "message": "The server could not understand the request due to invalid syntax"
                                                  }
                                              ]
                                          }
                                      }
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Get Variable Recurring Payment Details",
              "tags": [
                  "Variable Recurring Payments"
              ]
          }
      },
      "/accounts/{accountId}/real-time/transactions": {
          "get": {
              "description": "Used to get the account transactions for an account in real time with cursor pagination<br><br>Feature: `ACCOUNT_TRANSACTIONS`",
              "operationId": "getRealTimeTransactions",
              "x-beta": true,
              "parameters": [
                  {
                      "description": "__Mandatory__. The account Id of the user's bank account.",
                      "in": "path",
                      "name": "accountId",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Mandatory__. The `consent-token` containing the user's authorisation to make the request.",
                      "example": "{consentToken}",
                      "in": "header",
                      "name": "consent",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/knowledge/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. Represents the user's login ID for the `Institution` to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/knowledge/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-corporate-id",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Conditional__. The IP address of the PSU. <br><br>See [PSU identifiers](https://docs.yapily.com/knowledge/psu_identifiers/) to see if this header is required.",
                      "in": "header",
                      "name": "psu-ip-address",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "$ref": "#/components/parameters/SubAppHeader"
                  },
                  {
                      "description": "__Optional__. Returned transactions will be on or after this date (yyyy-MM-dd'T'HH:mm:ss.SSSZ).",
                      "in": "query",
                      "name": "from",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Optional__. Returned transactions will be on or before this date (yyyy-MM-dd'T'HH:mm:ss.SSSZ).",
                      "in": "query",
                      "name": "before",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Optional__. The cursor token supplied by a previous call. The cursor represents a location in the data set.",
                      "in": "query",
                      "name": "cursor",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "__Optional__. Used to obtain the raw request and response to and from the <code>Institution</code>.",
                      "in": "query",
                      "name": "raw",
                      "required": false,
                      "schema": {
                          "type": "boolean"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Example Response": {
                                      "description": "Example Response",
                                      "value": {
                                          "meta": {
                                              "tracingId": "488ce8243ee74a378be722ffffec8f7f",
                                              "count": 1
                                          },
                                          "data": [
                                              {
                                                  "id": "49d6e5c6-0130-46e3-884b-1b185432d9e0",
                                                  "date": "2021-05-06T17:44:34.589Z",
                                                  "bookingDateTime": "2021-05-06T17:44:34.589Z",
                                                  "valueDateTime": "2021-05-06T17:44:34.589Z",
                                                  "status": "BOOKED",
                                                  "transactionAmount": {
                                                      "amount": -100.23,
                                                      "currency": "GBP"
                                                  },
                                                  "reference": "0",
                                                  "description": "Debit for Payment Id: sdp-1-57379a43-c4b8-49f5-bd7c-699189ee7a60",
                                                  "transactionInformation": [
                                                      "Debit for Payment Id: sdp-1-57379a43-c4b8-49f5-bd7c-699189ee7a60"
                                                  ],
                                                  "isoBankTransactionCode": {
                                                      "domainCode": {
                                                          "code": "PMNT",
                                                          "name": "Payments"
                                                      },
                                                      "familyCode": {
                                                          "code": "ICDT",
                                                          "name": "Issued Credit Transfers"
                                                      },
                                                      "subFamilyCode": {
                                                          "code": "DMCT",
                                                          "name": "Domestic Credit Transfer"
                                                      }
                                                  },
                                                  "proprietaryBankTransactionCode": {
                                                      "code": "PMT",
                                                      "issuer": "modelo-sandbox"
                                                  },
                                                  "balance": {
                                                      "type": "CLOSING_AVAILABLE",
                                                      "balanceAmount": {
                                                          "amount": 426.53,
                                                          "currency": "GBP"
                                                      }
                                                  }
                                              }
                                          ],
                                          "links": {
                                              "first": "https://api.yapily.com/accounts/700004000000000000000002/transactions?cursor=aaa",
                                              "prev": "https://api.yapily.com/accounts/700004000000000000000002/transactions?cursor=bbb",
                                              "self": "https://api.yapily.com/accounts/700004000000000000000002/transactions?cursor=ccc",
                                              "next": "https://api.yapily.com/accounts/700004000000000000000002/transactions?cursor=ddd",
                                              "last": "https://api.yapily.com/accounts/700004000000000000000002/transactions?cursor=zzz"
                                          }
                                      }
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiListResponseOfRealTimeTransaction"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "401": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "description": "Error Response",
                                      "value": {
                                          "error": {
                                              "tracingId": "0c2d0973bdd24224a65e5d0f7d1b6154",
                                              "code": 401,
                                              "status": "UNAUTHORIZED",
                                              "supportUrl": "https://support.yapily.com/",
                                              "source": "YAPILY",
                                              "issues": [
                                                  {
                                                      "type": "CREDENTIALS",
                                                      "code": "CREDENTIALS_MISSING",
                                                      "message": "Authentication header not present"
                                                  }
                                              ]
                                          }
                                      }
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "description": "Error Response",
                                      "value": {
                                          "error": {
                                              "tracingId": "0c2d0973bdd24224a65e5d0f7d1b6154",
                                              "code": 400,
                                              "status": "BAD_REQUEST",
                                              "supportUrl": "https://support.yapily.com/",
                                              "source": "YAPILY",
                                              "issues": [
                                                  {
                                                      "type": "BAD_REQUEST",
                                                      "code": "BAD_REQUEST",
                                                      "message": "The server could not understand the request due to invalid syntax"
                                                  }
                                              ]
                                          }
                                      }
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Get Real Time Account Transactions",
              "tags": [
                  "Financial Data"
              ]
          }
      },
      "/accounts/{accountId}/transactions/categorisation": {
          "parameters": [
              {
                  "description": "__Mandatory__. The `consent-token` containing the user's authorisation to make the request.",
                  "example": "{consentToken}",
                  "in": "header",
                  "name": "consent",
                  "required": true,
                  "schema": {
                      "type": "string"
                  }
              },
              {
                  "description": "__Conditional__. Represents the user's login ID for the `Institution` to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                  "in": "header",
                  "name": "psu-id",
                  "required": false,
                  "schema": {
                      "type": "string"
                  }
              },
              {
                  "description": "__Conditional__. Represents the user's login ID for the `Institution` to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                  "in": "header",
                  "name": "psu-corporate-id",
                  "required": false,
                  "schema": {
                      "type": "string"
                  }
              },
              {
                  "description": "__Conditional__. The IP address of the PSU. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.",
                  "in": "header",
                  "name": "psu-ip-address",
                  "required": false,
                  "schema": {
                      "type": "string"
                  }
              },
              {
                  "$ref": "#/components/parameters/SubAppHeader"
              },
              {
                  "schema": {
                      "type": "string"
                  },
                  "name": "accountId",
                  "in": "path",
                  "required": true,
                  "description": "Unique identifier for account"
              }
          ],
          "post": {
              "summary": "Trigger transaction categorisation",
              "description": "Trigger categorisation for a specified set of transactions",
              "tags": [
                  "Enrichment"
              ],
              "responses": {
                "201": {
                      "description": "Created",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "x-examples": {
                                      "Example 1": {
                                          "meta": {
                                              "tracingId": "string"
                                          },
                                          "data": {
                                              "categorisationId": "b835bb6a-766d-42bf-8c0c-93921937925a"
                                          }
                                      }
                                  },
                                  "properties": {
                                      "meta": {
                                          "type": "object",
                                          "properties": {
                                              "tracingId": {
                                                  "type": "string"
                                              }
                                          }
                                      },
                                      "data": {
                                          "type": "object",
                                          "properties": {
                                              "categorisationId": {
                                                  "type": "string",
                                                  "format": "uuid"
                                              }
                                          }
                                      }
                                  }
                              },
                              "examples": {
                                  "Example 1": {
                                      "value": {
                                          "meta": {
                                              "tracingId": "string"
                                          },
                                          "data": {
                                              "categorisationId": "b835bb6a-766d-42bf-8c0c-93921937925a"
                                          }
                                      }
                                  }
                              }
                          }
                      }
                  },
                "400": {
                  "description": "There are validation errors",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/ApiErrorResponseV2"
                      },
                      "examples": {
                        "Example-1": {
                          "$ref": "#/components/examples/400-error-response"
                        }
                      }
                    }
                  }
                },
                "401": {
                  "description": "Authentication Error",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/ApiErrorResponseV2"
                      },
                      "examples": {
                        "Example-1": {
                          "$ref": "#/components/examples/401-error-response"
                        }
                      }
                    }
                  }
                },
                "500": {
                  "description": "An unexpected error occurred.",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/ApiErrorResponseV2"
                      },
                      "examples": {
                        "Example-1": {
                          "$ref": "#/components/examples/500-error-response"
                        }
                      }
                    }
                  }
                }
              },
              "operationId": "post-accounts-accountId-transactions-categorisation",
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "type": "object",
                              "required": [
                                "categorisationType",
                                "countryCode"
                              ],
                              "properties": {
                                  "countryCode": {
                                      "type": "string",
                                      "description": "_Mandatory_, ISO 3166-1 alpha-2 two-letter country codes e.g. GB"
                                  },
                                  "categorisationType": {
                                    "type": "string",
                                    "description": "__Mandatory__. Allowed values are `consumer` and `business`."
                                  },
                                  "from": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "__Optional__. Returned transactions will be on or after this date (yyyy-MM-dd'T'HH:mm:ss.SSSZ). "
                                  },
                                  "before": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "__Optional__. Returned transactions will be on or before this date (yyyy-MM-dd'T'HH:mm:ss.SSSZ)."
                                  }
                              }
                          },
                          "examples": {
                              "Example": {
                                  "value": {
                                      "countryCode": "GB",
                                      "categorisationType": "consumer",
                                      "from": "2019-08-24T14:15:22Z",
                                      "before": "2019-08-24T14:15:22Z"
                                  }
                              }
                          }
                      }
                  }
              }
          }
      },
      "/accounts/{accountId}/transactions/categorisation/{categorisationId}": {
        "parameters": [
          {
            "description": "__Mandatory__. The `consent-token` containing the user's authorisation to make the request.",
            "example": "{consentToken}",
            "in": "header",
            "name": "consent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "schema": {
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "Unique identifier for account"
          },
          {
            "schema": {
              "type": "string"
            },
            "name": "categorisationId",
            "in": "path",
            "required": true,
            "description": "Unique identifier for transaction categorisation request"
          },
          {
            "$ref": "#/components/parameters/SubAppHeader"
          },
          {
            "description": "__Optional__. The maximum number of transaction records to be returned. Must be between 100 and 1000. If not specified will default to 100.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 100,
              "maximum": 1000
            }
          },
          {
            "description": "__Optional__. The page number to be returned. If not specified will default to 1.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1
            }
          }
        ],
          "get": {
              "summary": "Get Categorised Transactions",
              "description": "Retrieve a set of categorised transactions using a provided categorisation ID (__Note__: A categorisation ID will only be valid for 30 mins after a __transactions.categorisation.successful__ wedhook has be received)",
              "tags": [
                  "Enrichment"
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "meta": {
                            "type": "object",
                            "properties": {
                              "tracingId": {
                                "type": "string"
                              },
                              "count": {
                                "type": "integer",
                                "description": "total number of transactions available"
                              },
                              "pageCount": {
                                "type": "integer",
                                "description": "total number of pages available calculated based on the limit per page sent in the request"
                              }
                            }
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "transactions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "date": {
                                      "type": "string"
                                    },
                                    "bookingDateTime": {
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "valueDateTime": {
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "status": {
                                      "type": "string"
                                    },
                                    "amount": {
                                      "type": "integer"
                                    },
                                    "currency": {
                                      "type": "string"
                                    },
                                    "transactionAmount": {
                                      "type": "object",
                                      "properties": {
                                        "amount": {
                                          "type": "integer"
                                        },
                                        "currency": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "reference": {
                                      "type": "string"
                                    },
                                    "description": {
                                      "type": "string"
                                    },
                                    "transactionInformation": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "proprietaryBankTransactionCode": {
                                      "type": "object",
                                      "properties": {
                                        "code": {
                                          "type": "string"
                                        },
                                        "issuer": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "isoBankTransactionCode": {
                                      "type": "object",
                                      "properties": {
                                        "domainCode": {
                                          "type": "object",
                                          "properties": {
                                            "code": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "familyCode": {
                                          "type": "object",
                                          "properties": {
                                            "code": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "subFamilyCode": {
                                          "type": "object",
                                          "properties": {
                                            "code": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "balance": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string"
                                        },
                                        "balanceAmount": {
                                          "type": "object",
                                          "properties": {
                                            "amount": {
                                              "type": "integer"
                                            },
                                            "currency": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "enrichment": {
                                      "type": "object",
                                      "properties": {
                                        "categorisation": {
                                          "type": "object",
                                          "properties": {
                                            "categories": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "recurrence": {
                                          "type": "string"
                                        },
                                        "transactionHash": {
                                          "type": "object",
                                          "properties": {
                                            "hash": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "merchant": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "paymentProcessor": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "hash": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "first": {
                                "type": "string"
                              },
                              "prev": {
                                "type": "string"
                              },
                              "self": {
                                "type": "string"
                              },
                              "next": {
                                "type": "string"
                              },
                              "last": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "examples": {
                        "Example 1": {
                          "value": {
                            "meta": {
                              "tracingId": "string",
                              "count": 1
                            },
                            "data": {
                              "transactions": [
                                {
                                  "id": "string",
                                  "date": "string",
                                  "bookingDateTime": "2019-08-24T14:15:22Z",
                                  "valueDateTime": "2019-08-24T14:15:22Z",
                                  "status": "string",
                                  "amount": 0,
                                  "currency": "string",
                                  "transactionAmount": {
                                    "amount": 0,
                                    "currency": "string"
                                  },
                                  "reference": "string",
                                  "description": "string",
                                  "transactionInformation": [
                                    "string"
                                  ],
                                  "proprietaryBankTransactionCode": {
                                    "code": "string",
                                    "issuer": "string"
                                  },
                                  "isoBankTransactionCode": {
                                    "domainCode": {
                                      "code": "string",
                                      "name": "string"
                                    },
                                    "familyCode": {
                                      "code": "string",
                                      "name": "string"
                                    },
                                    "subFamilyCode": {
                                      "code": "string",
                                      "name": "string"
                                    }
                                  },
                                  "balance": {
                                    "type": "string",
                                    "balanceAmount": {
                                      "amount": 0,
                                      "currency": "string"
                                    }
                                  },
                                  "enrichment": {
                                    "categorisation": {
                                      "categories": [
                                        "string"
                                      ]
                                    },
                                    "recurrence": "string",
                                    "transactionHash": {
                                      "hash": "string"
                                    },
                                    "merchant": {
                                      "id": "string",
                                      "name": "string"
                                    },
                                    "paymentProcessor": "string"
                                  },
                                  "hash": "string"
                                }
                              ]
                            },
                            "links": {
                              "first": "https://api.yapily.com/accounts/700004000000000000000002/transactions?cursor=aaa",
                              "prev": "https://api.yapily.com/accounts/700004000000000000000002/transactions?cursor=bbb",
                              "self": "https://api.yapily.com/accounts/700004000000000000000002/transactions?cursor=ccc",
                              "next": "https://api.yapily.com/accounts/700004000000000000000002/transactions?cursor=ddd",
                              "last": "https://api.yapily.com/accounts/700004000000000000000002/transactions?cursor=zzz"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "There are validation errors",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/ApiErrorResponseV2"
                      },
                      "examples": {
                        "Example-1": {
                          "$ref": "#/components/examples/400-error-response"
                        }
                      }
                    }
                  }
                },
                "401": {
                  "description": "Authentication Error",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/ApiErrorResponseV2"
                      },
                      "examples": {
                        "Example-1": {
                          "$ref": "#/components/examples/401-error-response"
                        }
                      }
                    }
                  }
                },
                "404": {
                  "description": "Webhook id not found",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/ApiErrorResponseV2"
                      },
                      "examples": {
                        "Example-1": {
                          "$ref": "#/components/examples/404-error-response"
                        }
                      }
                    }
                  }
                },
                "500": {
                  "description": "An unexpected error occurred.",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/ApiErrorResponseV2"
                      },
                      "examples": {
                        "Example-1": {
                          "$ref": "#/components/examples/500-error-response"
                        }
                      }
                    }
                  }
                }
              },
              "operationId": "get-accounts-transactions-categorised"
          }
      },
      "/transactions/categorisation/categories/{accountType}": {
          "parameters": [
              {
                  "schema": {
                      "type": "string"
                  },
                  "name": "accountType",
                  "in": "path",
                  "required": true,
                  "description": "type of bank account (consumer or business)"
              },
              {
                  "$ref": "#/components/parameters/SubAppHeader"
              }
          ],
          "get": {
              "summary": "Get the list of all categories for a specific account type",
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "meta": {
                            "type": "object",
                            "properties": {
                              "tracingId": {
                                "type": "string"
                              }
                            }
                          },
                          "data": {
                            "$ref": "#/components/schemas/GetCategoriesResponse"
                          }
                        }
                      },
                      "examples": {
                        "Example consumer": {
                          "value": {
                            "meta": {
                              "tracingId": "string"
                            },
                            "data": {
                              "labels": [
                                "ATM/bank deposit",
                                "Benefits",
                                "ATM/bank withdrawal",
                                "App stores"
                              ]
                            }
                          }
                        },
                        "Example business": {
                          "value": {
                            "meta": {
                              "tracingId": "string"
                            },
                            "data": {
                              "labels": [
                                "client deposit",
                                "cost of goods sold - customer return"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "There are validation errors",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/ApiErrorResponseV2"
                      },
                      "examples": {
                        "Example-1": {
                          "$ref": "#/components/examples/400-error-response"
                        }
                      }
                    }
                  }
                },
                "401": {
                  "description": "Authentication Error",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/ApiErrorResponseV2"
                      },
                      "examples": {
                        "Example-1": {
                          "$ref": "#/components/examples/401-error-response"
                        }
                      }
                    }
                  }
                },
                "404": {
                  "description": "Webhook id not found",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/ApiErrorResponseV2"
                      },
                      "examples": {
                        "Example-1": {
                          "$ref": "#/components/examples/404-error-response"
                        }
                      }
                    }
                  }
                },
                "500": {
                  "description": "An unexpected error occurred.",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/ApiErrorResponseV2"
                      },
                      "examples": {
                        "Example-1": {
                          "$ref": "#/components/examples/500-error-response"
                        }
                      }
                    }
                  }
                }
              },
              "operationId": "get-categorisation-accountType",
              "description": "Returns the list of categories that can be returned for a specific account type (consumer or business)",
              "tags": [
                  "Enrichment"
              ]
          }
      },
      "/hosted/consent-requests" : {
        "post": {
          "description": "Used to initiate a consent request using Yapily Hosted Pages.",
          "x-beta": true,
          "operationId": "createHostedConsentRequest",
          "requestBody": {
            "content": {
              "application/json;charset=UTF-8": {
                "examples": {
                  "Create Hosted Consent Request": {
                    "$ref": "#/components/examples/create-hosted-consent-request"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CreateHostedConsentRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "content": {
                "application/json;charset=UTF-8": {
                  "examples": {
                    "Create Hosted Consent Request Response": {
                      "$ref": "#/components/examples/create-hosted-consent-response"
                    }
                  },
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseOfCreateHostedConsentRequest"
                  }
                }
              },
              "description": "Created"
            },
            "400": {
              "content": {
                "application/json;charset=UTF-8": {
                  "examples": {
                    "400 Error Response": {
                      "$ref": "#/components/examples/400-error-response"
                    }
                  },
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseError"
                  }
                }
              },
              "description": "Bad Request"
            },
            "401": {
              "content": {
                "application/json;charset=UTF-8": {
                  "examples": {
                    "401 Error Response": {
                      "$ref": "#/components/examples/401-error-response"
                    }
                  },
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseError"
                  }
                }
              },
              "description": "Unauthorized. Credentials are missing or invalid"
            },
            "500": {
              "content": {
                "application/json;charset=UTF-8": {
                  "examples": {
                    "500 Error Response": {
                      "$ref": "#/components/examples/500-error-response"
                    }
                  },
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseError"
                  }
                }
              },
              "description": "Unexpected Error"
            },
            "default": {
              "content": {
                "application/json;charset=UTF-8": {
                  "examples": {
                    "Error Response": {
                      "$ref": "#/components/examples/error-response-code-401"
                    }
                  },
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseError"
                  }
                }
              },
              "description": "Error Response"
            }
          },
          "summary": "Create Hosted Consent Request",
          "tags": [
            "Hosted Consent Pages"
          ]
        }
      },
      "/hosted/consent-requests/{consentRequestId}": {
        "get": {
          "description": "Used to get details of a hosted consent request",
          "x-beta": true,
          "operationId": "getHostedConsentRequest",
          "parameters": [
            {
              "description": "Unique Identifier of the consent request",
              "in": "path",
              "name": "consentRequestId",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json;charset=UTF-8": {
                  "examples": {
                    "Get Hosted Consent Request Response": {
                      "$ref": "#/components/examples/get-hosted-consent-response"
                    }
                  },
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseOfGetHostedConsentRequest"
                  }
                }
              },
              "description": "Ok"
            },
            "401": {
              "content": {
                "application/json;charset=UTF-8": {
                  "examples": {
                    "401 Error Response": {
                      "$ref": "#/components/examples/401-error-response"
                    }
                  },
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseError"
                  }
                }
              },
              "description": "Unauthorized"
            },
            "404": {
              "content": {
                "application/json;charset=UTF-8": {
                  "examples": {
                    "404 Error Response": {
                      "$ref": "#/components/examples/404-error-response"
                    }
                  },
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseError"
                  }
                }
              },
              "description": "Not Found"
            },
            "500": {
              "content": {
                "application/json;charset=UTF-8": {
                  "examples": {
                    "500 Error Response": {
                      "$ref": "#/components/examples/500-error-response"
                    }
                  },
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseError"
                  }
                }
              },
              "description": "Unexpected Error"
            },
            "default": {
              "content": {
                "application/json;charset=UTF-8": {
                  "examples": {
                    "Error Response": {
                      "$ref": "#/components/examples/error-response-code-401"
                    }
                  },
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseError"
                  }
                }
              },
              "description": "Error Response"
            }
          },
          "summary": "Get Hosted Consent Request",
          "tags": [
            "Hosted Consent Pages"
          ]
        }
      },
      "/hosted/payment-requests": {
          "x-yapily-features": [
              "INITIATE_DOMESTIC_SINGLE_PAYMENT"
          ],
          "post": {
              "description": "Used to initiate a payment request using Yapily Hosted Pages.",
              "x-beta": true,
              "operationId": "createHostedPaymentRequest",
              "requestBody": {
                  "content": {
                      "application/json;charset=UTF-8": {
                          "examples": {
                              "Create Hosted Payment Request": {
                                  "$ref": "#/components/examples/create-hosted-payment-request"
                              }
                          },
                          "schema": {
                              "$ref": "#/components/schemas/CreateHostedPaymentRequest"
                          }
                      }
                  },
                  "required": true
              },
              "responses": {
                  "201": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Create Hosted Payment Request Response": {
                                      "$ref": "#/components/examples/create-hosted-payment-request-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfCreateHostedPaymentRequest"
                              }
                          }
                      },
                      "description": "Created"
                  },
                  "400": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "400 Error Response": {
                                      "$ref": "#/components/examples/400-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Bad Request"
                  },
                  "401": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "401 Error Response": {
                                      "$ref": "#/components/examples/401-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Unauthorized. Credentials are missing or invalid"
                  },
                  "500": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "500 Error Response": {
                                      "$ref": "#/components/examples/500-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Unexpected Error"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Create Hosted payment request",
              "tags": [
                  "Hosted Payment Pages"
              ]
          }
      },
      "/hosted/payment-requests/links": {
          "post": {
              "description": "Used to created a long lived payment request for Pay By Link",
              "x-beta": true,
              "operationId": "createHostedPaymentRequestLink",
              "requestBody": {
                  "content": {
                      "application/json;charset=UTF-8": {
                          "examples": {
                              "Create Hosted Payment Request": {
                                  "$ref": "#/components/examples/create-hosted-payment-request-link"
                              }
                          },
                          "schema": {
                              "$ref": "#/components/schemas/CreateHostedPaymentRequestLink"
                          }
                      }
                  },
                  "required": true
              },
              "responses": {
                  "201": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Create Hosted Payment Request Response": {
                                      "$ref": "#/components/examples/create-hosted-payment-request-link-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfCreateHostedPaymentRequestLink"
                              }
                          }
                      },
                      "description": "Created"
                  },
                  "400": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "400 Error Response": {
                                      "$ref": "#/components/examples/400-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Bad Request"
                  },
                  "401": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "401 Error Response": {
                                      "$ref": "#/components/examples/401-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Unauthorized. Credentials are missing or invalid"
                  },
                  "500": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "500 Error Response": {
                                      "$ref": "#/components/examples/500-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Unexpected Error"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Create Pay By Link",
              "tags": [
                  "Hosted Payment Pages"
              ]
          }
      },
      "/hosted/payment-requests/{paymentRequestId}": {
          "get": {
              "description": "Used to get details of a payment request",
              "x-beta": true,
              "operationId": "getHostedPaymentRequest",
              "parameters": [
                  {
                      "description": "Unique Identifier of the payment request",
                      "in": "path",
                      "name": "paymentRequestId",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Get Hosted Payment Request Response": {
                                      "$ref": "#/components/examples/get-hosted-payment-request-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfGetHostedPaymentRequest"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "401": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "401 Error Response": {
                                      "$ref": "#/components/examples/401-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Unauthorized"
                  },
                  "404": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "404 Error Response": {
                                      "$ref": "#/components/examples/404-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Not Found"
                  },
                  "500": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "500 Error Response": {
                                      "$ref": "#/components/examples/500-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Unexpected Error"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Get Hosted payment request",
              "tags": [
                  "Hosted Payment Pages"
              ]
          }
      },
      "/hosted/vrp/consent-requests": {
          "post": {
              "description": "Used to initiate a VRP consent / mandate request through Yapily Hosted Pages",
              "operationId": "createHostedVRPConsentRequest",
        "x-beta": true,
              "parameters": [
                  {
                      "description": "__Mandatory__. The unique identifier of the sub application the request is being submitted on behalf of (e.g. an underlying merchant)",
                      "in": "header",
                      "name": "sub-application",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json;charset=UTF-8": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateHostedVRPConsentRequest"
                          },
              "examples":{
                              "Create Hosted VRP Consent Request": {
                                  "$ref": "#/components/examples/create-hosted-vrp-consent-request"
                              }
                          }
                      }
                  },
                  "required": true
              },
              "responses": {
                  "201": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfCreateHostedVRPConsentRequest"
                              },
                "examples":{
                                  "Create Hosted VRP Consent Response": {
                                      "$ref": "#/components/examples/create-hosted-vrp-consent-response"
                                  }
                              }
                          }
                      },
                      "description": "Created"
                  },
                  "400": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "400 Error Response": {
                                      "$ref": "#/components/examples/400-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Bad Request"
                  },
                  "401": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "401 Error Response": {
                                      "$ref": "#/components/examples/401-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Unauthorized. Credentials are missing or invalid"
                  },
                  "500": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "500 Error Response": {
                                      "$ref": "#/components/examples/500-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Unexpected Error"
                  }
              },
              "summary": "Create VRP Consent",
              "tags": [
                  "Hosted Payment Pages"
              ]
          },
          "get": {
              "description": "Used to get all VRP consent requests initiated through Yapily Hosted Pages",
              "operationId": "getHostedVRPConsentRequests",
        "x-beta": true,
              "parameters": [
                  {
                      "description": "__Mandatory__. The unique identifier of the sub application the request is being submitted on behalf of (e.g. an underlying merchant)",
                      "in": "header",
                      "name": "sub-application",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfGetHostedVRPConsentsRequest"
                              },
                "examples":{
                                  "Get Hosted VRP Consents Response": {
                                      "$ref": "#/components/examples/get-hosted-vrp-consents-response"
                                  }
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "400": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "400 Error Response": {
                                      "$ref": "#/components/examples/400-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Bad Request"
                  },
                  "401": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "401 Error Response": {
                                      "$ref": "#/components/examples/401-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Unauthorized. Credentials are missing or invalid"
                  },
                  "500": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "500 Error Response": {
                                      "$ref": "#/components/examples/500-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Unexpected Error"
                  }
              },
              "summary": "Get Hosted VRP Consent Requests",
              "tags": [
                  "Hosted Payment Pages"
              ]
          }
      },
      "/hosted/vrp/consent-requests/{consentRequestId}": {
          "get": {
              "description": "Used to get details of a VRP Consent Request",
              "operationId": "getHostedVrpConsentRequest",
        "x-beta": true,
              "parameters": [
                  {
                      "description": "The unique identifier of the sub application the request is being submitted on behalf of (e.g. an underlying merchant)",
                      "in": "header",
                      "name": "sub-application",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "Unique Identifier of the Consent Request",
                      "in": "path",
                      "name": "consentRequestId",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfGetHostedVRPConsentRequest"
                              },
                "examples":{
                                  "Get Hosted VRP Consent Response": {
                                      "$ref": "#/components/examples/get-hosted-vrp-consent-response"
                                  }
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "401": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "401 Error Response": {
                                      "$ref": "#/components/examples/401-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Unauthorized"
                  },
                  "404": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "404 Error Response": {
                                      "$ref": "#/components/examples/404-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Not Found"
                  },
                  "500": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "500 Error Response": {
                                      "$ref": "#/components/examples/500-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Unexpected Error"
                  }
              },
              "summary": "Get Hosted VRP Consent Request",
              "tags": [
                  "Hosted Payment Pages"
              ]
          }
      },
      "/hosted/vrp/consent-requests/{consentRequestId}/revoke": {
          "post": {
              "description": "Revoke Hosted VRP Consent Request",
              "operationId": "revokeHostedConsentRequest",
        "x-beta": true,
              "parameters": [
                  {
                      "description": "The unique identifier of the sub application the request is being submitted on behalf of (e.g. an underlying merchant)",
                      "in": "header",
                      "name": "sub-application",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "Unique Identifier of the Consent Request",
                      "in": "path",
                      "name": "consentRequestId",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfRevokeHostedVRPConsentRequest"
                              },
                "examples":{
                                  "Revoke Hosted VRP Consent Response": {
                                      "$ref": "#/components/examples/revoke-hosted-vrp-consent-response"
                                  }
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "401": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "401 Error Response": {
                                      "$ref": "#/components/examples/401-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Unauthorized"
                  },
                  "404": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "404 Error Response": {
                                      "$ref": "#/components/examples/404-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Not Found"
                  },
                  "500": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "500 Error Response": {
                                      "$ref": "#/components/examples/500-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Unexpected Error"
                  }
              },
              "summary": "Revoke Hosted VRP Consent Request",
              "tags": [
                  "Hosted Payment Pages"
              ]
          }
      },
      "/hosted/vrp/consent-requests/{consentRequestId}/payments": {
          "post": {
              "description": "Creates a Variable Recurring Payment",
              "operationId": "createHostedVrpPayment",
        "x-beta": true,
              "parameters": [
                  {
                      "description": "Unique Identifier of the Consent Request",
                      "in": "path",
                      "name": "consentRequestId",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "description": "__Mandatory__. The `consent-token` containing the user's authorisation to make the request.",
                      "example": "{consentToken}",
                      "in": "header",
                      "name": "consent-token",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "The unique identifier of the sub application the request is being submitted on behalf of (e.g. an underlying merchant)",
                      "in": "header",
                      "name": "sub-application",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json;charset=UTF-8": {
                          "examples": {
                              "Hosted VRP Payment Request": {
                                  "$ref": "#/components/examples/create-hosted-vrp-payment-request"
                              }
                          },
                          "schema": {
                              "$ref": "#/components/schemas/CreateHostedVRPPaymentRequest"
                          }
                      }
                  },
                  "required": true
              },
              "responses": {
                  "201": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfCreateHostedVRPPaymentRequest"
                              },
                              "examples": {
                                  "Hosted VRP Payment Response": {
                                      "$ref": "#/components/examples/create-hosted-vrp-payment-response"
                                  }
                              }
                          }
                      },
                      "description": "Created"
                  },
                  "401": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "401 Error Response": {
                                      "$ref": "#/components/examples/401-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "400 Error Response": {
                                      "$ref": "#/components/examples/400-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Create VRP Payment",
              "tags": [
                  "Hosted Payment Pages"
              ]
          }
      },
      "/hosted/vrp/consent-requests/{consentRequestId}/payments/{paymentId}": {
          "get": {
              "description": "Used to get details of a VRP Payment",
              "operationId": "getHostedVRPPaymentRequest",
        "x-beta": true,
              "parameters": [
                  {
                      "description": "Unique Identifier of the Consent Request",
                      "in": "path",
                      "name": "consentRequestId",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "description": "Unique Identifier of the Consent Request",
                      "in": "path",
                      "name": "paymentId",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "The unique identifier of the sub application the request is being submitted on behalf of (e.g. an underlying merchant)",
                      "in": "header",
                      "name": "sub-application",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfGetHostedVRPPaymentRequest"
                              },
                "examples" : {
                                  "UK Domestic VRP Payment Example Response": {
                                      "$ref": "#/components/examples/get-hosted-vrp-payment-response"
                                  }
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "401": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "401 Error Response": {
                                      "$ref": "#/components/examples/401-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Unauthorized"
                  },
                  "404": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "404 Error Response": {
                                      "$ref": "#/components/examples/404-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Not Found"
                  },
                  "500": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "500 Error Response": {
                                      "$ref": "#/components/examples/500-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Unexpected Error"
                  }
              },
              "summary": "Get VRP payment",
              "tags": [
                  "Hosted Payment Pages"
              ]
          }
      },
      "/hosted/vrp/consent-requests/{consentRequestId}/funds-confirmation": {
          "post": {
              "description": "Confirms whether there are available funds on the Payer account to execute a Variable Recurring Payment after obtaining the user's authorisation. <br><br>Features:<ul><li>`VARIABLE_RECURRING_PAYMENT_FUNDS_CONFIRMATION`</li></ul>",
              "operationId": "createHostedVrpFundsConfirmation",
        "x-beta": true,
              "parameters": [
                  {
                      "description": "Unique Identifier of the Consent Request",
                      "in": "path",
                      "name": "consentRequestId",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "description": "__Mandatory__. The `consent-token` containing the user's authorisation to make the request.",
                      "example": "{consentToken}",
                      "in": "header",
                      "name": "consent-token",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "The unique identifier of the sub application the request is being submitted on behalf of (e.g. an underlying merchant)",
                      "in": "header",
                      "name": "sub-application",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json;charset=UTF-8": {
                          "examples": {
                              "Hosted VRP Payment Request": {
                                  "$ref": "#/components/examples/create-hosted-vrp-fund-confirmation"
                              }
                          },
                          "schema": {
                              "$ref": "#/components/schemas/FundsConfirmationRequest"
                          }
                      }
                  },
                  "required": true
              },
              "responses": {
                  "201": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfFundsConfirmationResponse"

                              },
                              "examples": {
                                  "Hosted VRP Payment Response": {
                                      "$ref": "#/components/examples/create-hosted-vrp-fund-confirmation-response"
                                  }
                              }
                          }
                      },
                      "description": "Created"
                  },
                  "401": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "401 Error Response": {
                                      "$ref": "#/components/examples/401-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  },
                  "default": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "400 Error Response": {
                                      "$ref": "#/components/examples/400-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Error Response"
                  }
              },
              "summary": "Check Funds Availability",
              "tags": [
                  "Hosted Payment Pages"
              ]
          }
      },
      "/institutions/constraints/payments": {
          "get": {
              "description": "Retrieve institution specific constraints for payment authorisation and submission requests",
              "operationId": "getPaymentConstraintsRulesByInstitution",
              "x-beta": true,
              "parameters": [
                  {
                      "description": "Unique Id(s) of the `Institution`(s) to retrieve the Payment Constraints for. Multiple institutionIds need to be separated by `,`",
                      "name": "institutionIds",
                      "required": true,
                      "in": "query",
                      "schema": {
                          "type": "array",
                          "items": {
                              "type": "string"
                          }
                      }
                  },
                  {
                      "description": "Country code of the `Institution`(s). Ensure that the country code matches the respective institutionIds; any mismatch will result in an HTTP 404 error response.",
                      "in": "query",
                      "name": "institutionCountryCode",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "Type of payment to retrieve payment constraints for",
                      "in": "query",
                      "name": "paymentType",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "enum": [
                              "DOMESTIC_PAYMENT",
                              "DOMESTIC_INSTANT_PAYMENT",
                              "DOMESTIC_VARIABLE_RECURRING_PAYMENT",
                              "DOMESTIC_SCHEDULED_PAYMENT",
                              "DOMESTIC_PERIODIC_PAYMENT",
                              "INTERNATIONAL_PAYMENT",
                              "INTERNATIONAL_SCHEDULED_PAYMENT",
                              "INTERNATIONAL_PERIODIC_PAYMENT"
                          ]
                      }
                  },
                  {
                      "description": "The path on the API that is associated with the operation for which constraints are to be retrieved",
                      "in": "query",
                      "name": "endpointPath",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "The HTTP method that is associated with the operation for which constraints are to be retrieved",
                      "in": "query",
                      "name": "endpointMethod",
                      "required": false,
                      "schema": {
                          "type": "string",
                          "enum": [
                              "POST",
                              "PATCH",
                              "PUT",
                              "GET",
                              "DELETE"
                          ]
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiListResponseOfPaymentConstraints"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "400": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "500 Error Response": {
                                      "$ref": "#/components/examples/400-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Bad Request."
                  },
                  "401": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "500 Error Response": {
                                      "$ref": "#/components/examples/401-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Either authentication credentials were not supplied, or they were invalid."
                  },
                  "404": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "500 Error Response": {
                                      "$ref": "#/components/examples/404-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Not Found."
                  },
                  "500": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "500 Error Response": {
                                      "$ref": "#/components/examples/500-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Unexpected Error"
                  }
              },
              "summary": "Get Payment Constraints Rules",
              "tags": [
                  "Constraints"
              ]
          }
      },
      "/institutions/constraints/data": {
          "get": {
              "description": "Get Data Constraints Rules against an Institution for Account Authorisation requests",
              "operationId": "getAccountConstraintsRulesByInstitution",
              "x-beta": true,
              "parameters": [
                  {
                      "description": "Unique Id(s) of the `Institution`(s) to retrieve the Data Constraints for. Multiple institutionIds need to be separated by `,`",
                      "name": "institutionIds",
                      "required": true,
                      "in": "query",
                      "schema": {
                          "type": "array",
                          "items": {
                              "type": "string"
                          }
                      }
                  },
                  {
                      "description": "Country code of the `Institution`(s). Ensure that the country code matches the respective institutionIds; any mismatch will result in an HTTP 404 error response.",
                      "in": "query",
                      "name": "institutionCountryCode",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "The path on the API that is associated with the operation for which constraints are to be retrieved",
                      "in": "query",
                      "name": "endpointPath",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "description": "The HTTP method that is associated with the operation for which constraints are to be retrieved",
                      "in": "query",
                      "name": "endpointMethod",
                      "required": false,
                      "schema": {
                          "type": "string",
                          "enum": [
                              "POST",
                              "PATCH",
                              "PUT",
                              "GET",
                              "DELETE"
                          ]
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiListResponseOfDataConstraints"
                              }
                          }
                      },
                      "description": "Ok"
                  },
                  "400": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "500 Error Response": {
                                      "$ref": "#/components/examples/400-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Bad Request."
                  },
                  "401": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "500 Error Response": {
                                      "$ref": "#/components/examples/401-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Either authentication credentials were not supplied, or they were invalid."
                  },
                  "404": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "500 Error Response": {
                                      "$ref": "#/components/examples/404-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Not Found."
                  },
                  "500": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "500 Error Response": {
                                      "$ref": "#/components/examples/500-error-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseError"
                              }
                          }
                      },
                      "description": "Unexpected Error"
                  }
              },
              "summary": "Get Data Constraints Rules",
              "tags": [
                  "Constraints"
              ]
          }
      },
      "/applications": {
          "post": {
              "description": "Creates a sub-application under the given root application id provided in the authentication token. The sub-application can use the root's credentials to call the API",
              "summary": "Creates a sub-application for the root application id provided in the authentication token",
              "x-beta": true,
              "operationId": "createSubApplication",
              "requestBody": {
                  "description": "The sub-application to create",
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/ApplicationRequest"
                          },
                          "examples": {
                              "Create Sub-application Request": {
                                  "$ref": "#/components/examples/application-request"
                              }
                          }
                      }
                  }
              },
              "responses": {
                  "201": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Create Sub-application Response": {
                                      "$ref": "#/components/examples/application-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfApplicationResponse"
                              }
                          }
                      },
                      "description": "Sub-application was successfully created"
                  },
                  "400": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/application-error-response-code-400"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ValidationErrorResponse"
                              }
                          }
                      },
                      "description": "There are validation errors"
                  },
                  "401": {
                      "description": "Either authentication credentials were not supplied, or they were invalid.",
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "Forbidden from accessing the requested Application.",
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "Application with given root id not found.",
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "An unexpected error occurred.",
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Application Management"
              ]
          },
          "get": {
              "description": "Retrieves sub-applications for the root application provided in the authentication token. If a sub-application is provided in the authentication token, it will return an empty list.",
              "summary": "Retrieve sub-applications for the root application provided in the authentication token.",
              "x-beta": true,
              "operationId": "searchApplications",
              "parameters": [
                  {
                      "$ref": "#/components/parameters/SearchApplicationsParameters"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "The sub-applications that are returned as part of the search results.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiListOfApplicationResponse"
                              },
                              "examples": {
                                  "Get Applications Response": {
                                      "$ref": "#/components/examples/application-responses"
                                  }
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "There are validation errors",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ValidationErrorResponse"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "Either authentication credentials were not supplied, or they were invalid.",
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "Forbidden from accessing the requested Application.",
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "An unexpected error occurred.",
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Application Management"
              ]
          }
      },
      "/applications/{applicationId}": {
          "get": {
              "description": "Retrieves an application by the id provided in the path",
              "x-beta": true,
              "operationId": "getApplicationById",
              "parameters": [
                  {
                      "in": "path",
                      "name": "applicationId",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "format": "uuid"
                      },
                      "description": "The id of the application being fetched"
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Get Application By Id Response": {
                                      "$ref": "#/components/examples/application-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfApplicationResponse"
                              }
                          }
                      },
                      "description": "Application was successfully fetched"
                  },
                  "401": {
                      "description": "Either authentication credentials were not supplied, or they were invalid.",
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "Forbidden from accessing the requested Application.",
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "Application with given id not found.",
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "An unexpected error occurred.",
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Application Management"
              ],
              "summary": "Get application details"
          },
          "put": {
              "description": "Updates the application properties for the application with the given ID in the path",
              "x-beta": true,
              "operationId": "updateApplication",
              "parameters": [
                  {
                      "in": "path",
                      "name": "applicationId",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "format": "uuid"
                      },
                      "description": "The id of the application being updated"
                  }
              ],
              "requestBody": {
                  "description": "The application to update",
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/ApplicationRequest"
                          },
                          "examples": {
                              "Update Application Request": {
                                  "$ref": "#/components/examples/application-request"
                              }
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Update Application Response": {
                                      "$ref": "#/components/examples/application-response"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiResponseOfApplicationResponse"
                              }
                          }
                      },
                      "description": "Application was successfully updated"
                  },
                  "400": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/application-error-response-code-400"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ValidationErrorResponse"
                              }
                          }
                      },
                      "description": "There are validation errors"
                  },
                  "401": {
                      "description": "Either authentication credentials were not supplied, or they were invalid.",
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "Forbidden from accessing the requested Application.",
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "An unexpected error occurred.",
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Application Management"
              ],
              "summary": "Update an Application"
          },
          "delete": {
              "description": "Deletes the application with the given ID in the path",
              "x-beta": true,
              "operationId": "deleteApplication",
              "parameters": [
                  {
                      "in": "path",
                      "name": "applicationId",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "format": "uuid"
                      },
                      "description": "The id of the application being deleted"
                  }
              ],
              "responses": {
                  "204": {
                      "description": "Application was successfully deleted"
                  },
                  "401": {
                      "description": "Either authentication credentials were not supplied, or they were invalid.",
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/error-response-code-401"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "Forbidden from accessing the requested Application.",
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "Application with given id not found.",
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "An unexpected error occurred.",
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Application Management"
              ],
              "summary": "Delete an application"
          }
      },
      "/applications/{applicationId}/vrp": {
          "post": {
              "description": "Create application vrp configuration",
              "summary": "Create application VRP configuration by Application Id",
              "x-beta": true,
              "operationId": "createApplicationVRPConfigurationByApplicationId",
              "parameters": [
                  {
                      "in": "path",
                      "name": "applicationId",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "format": "uuid"
                      },
                      "description": "The id of the application that vrp configuration being created for"
                  }
              ],
              "requestBody": {
                  "description": "The vrp configuration to create",
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/VrpConfiguration"
                          }
                      }
                  }
              },
              "responses": {
                  "201": {
                      "description": "Application vrp configuration was successfully created"
                  },
                  "400": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/application-error-response-code-400"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ValidationErrorResponse"
                              }
                          }
                      },
                      "description": "There are validation errors"
                  },
                  "401": {
                      "description": "Either authentication credentials were not supplied, or they were invalid.",
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              },
                              "examples": {
                                  "401 Error Response": {
                                      "$ref": "#/components/examples/401-error-response"
                                  }
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "Forbidden from accessing the requested Application.",
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              },
                              "examples": {
                                  "403 Error Response": {
                                      "$ref": "#/components/examples/403-error-response"
                                  }
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "VRP Configuration with given application id not found.",
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              },
                              "examples": {
                                  "404 Error Response": {
                                      "$ref": "#/components/examples/404-error-response"
                                  }
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "An unexpected error occurred.",
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              },
                              "examples": {
                                  "500 Error Response": {
                                      "$ref": "#/components/examples/500-error-response"
                                  }
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Application Management"
              ]
          },
          "put": {
              "description": "Update application vrp configuration",
              "summary": "Update application VRP configuration by Application Id",
              "x-beta": true,
              "operationId": "updateApplicationVRPConfigurationByApplicationId",
              "parameters": [
                  {
                      "in": "path",
                      "name": "applicationId",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "format": "uuid"
                      },
                      "description": "The id of the application that vrp configuration being created for"
                  }
              ],
              "requestBody": {
                  "description": "The vrp configuration to create",
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/VrpConfiguration"
                          }
                      }
                  }
              },
              "responses": {
                  "201": {
                      "description": "Application vrp configuration was successfully updated"
                  },
                  "400": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/application-error-response-code-400"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ValidationErrorResponse"
                              }
                          }
                      },
                      "description": "There are validation errors"
                  },
                  "401": {
                      "description": "Either authentication credentials were not supplied, or they were invalid.",
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              },
                              "examples": {
                                  "401 Error Response": {
                                      "$ref": "#/components/examples/401-error-response"
                                  }
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "Forbidden from accessing the requested Application.",
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              },
                              "examples": {
                                  "403 Error Response": {
                                      "$ref": "#/components/examples/403-error-response"
                                  }
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "VRP Configuration with given application id not found.",
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              },
                              "examples": {
                                  "404 Error Response": {
                                      "$ref": "#/components/examples/404-error-response"
                                  }
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "An unexpected error occurred.",
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              },
                              "examples": {
                                  "500 Error Response": {
                                      "$ref": "#/components/examples/500-error-response"
                                  }
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Application Management"
              ]
          },
          "get": {
              "description": "Get application vrp configuration",
              "summary": "Get application VRP configuration by Application Id",
              "x-beta": true,
              "operationId": "getApplicationVRPConfigurationByApplicationId",
              "parameters": [
                  {
                      "in": "path",
                      "name": "applicationId",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "format": "uuid"
                      },
                      "description": "The id of the application that vrp configuration being created for"
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/VrpConfiguration"
                              }
                          }
                      },
                      "description": "Application vrp configuration was successfully fetched"
                  },
                  "400": {
                      "content": {
                          "application/json;charset=UTF-8": {
                              "examples": {
                                  "Error Response": {
                                      "$ref": "#/components/examples/application-error-response-code-400"
                                  }
                              },
                              "schema": {
                                  "$ref": "#/components/schemas/ValidationErrorResponse"
                              }
                          }
                      },
                      "description": "There are validation errors"
                  },
                  "401": {
                      "description": "Either authentication credentials were not supplied, or they were invalid.",
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              },
                              "examples": {
                                  "401 Error Response": {
                                      "$ref": "#/components/examples/401-error-response"
                                  }
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "Forbidden from accessing the requested Application.",
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              },
                              "examples": {
                                  "403 Error Response": {
                                      "$ref": "#/components/examples/403-error-response"
                                  }
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "VRP Configuration with given application id not found.",
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              },
                              "examples": {
                                  "404 Error Response": {
                                      "$ref": "#/components/examples/404-error-response"
                                  }
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "An unexpected error occurred.",
                      "content": {
                          "application/json;charset=UTF-8": {
                              "schema": {
                                  "$ref": "#/components/schemas/ApiErrorResponse"
                              },
                              "examples": {
                                  "500 Error Response": {
                                      "$ref": "#/components/examples/500-error-response"
                                  }
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Application Management"
              ]
          }
      },
      "/webhook/events/categories": {
        "get": {
          "tags": [
            "Webhooks"
          ],
          "description": "Retrieve a comprehensive list of event categories that can be registered for webhook notifications in your application. These event categories can be used to subscribe a webhook to specific events, enabling your application to receive real-time notifications when these events occur.",
          "summary": "Get Webhook Categories",
          "operationId": "getWebhookEventsCategories",
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json;charset=UTF-8": {
                  "examples": {
                    "SuccessfulResponse": {
                      "value": {
                        "metadata": {
                          "tracingId": "f2425b79-974d-43f8-a5a2-ec771b2d9297\n"
                        },
                        "data": {
                          "categories": [
                            {
                              "name": "payment.state.success",
                              "description": "An event sent when payment reaches a terminal successful status"
                            },
                            {
                              "name": "payment.state.failed",
                              "description": "An event sent when payment reaches a terminal failed status"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "schema": {
                    "type": "object",
                    "properties": {
                      "metadata": {
                        "$ref": "#/components/schemas/Metadata"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "categories": {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/CategoryStructure"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Authentication Error",
              "content": {
                "application/json;charset=UTF-8": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiErrorResponseV2"
                  },
                  "examples": {
                    "Example-1": {
                      "$ref": "#/components/examples/401-error-response"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "There are validation errors",
              "content": {
                "application/json;charset=UTF-8": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiErrorResponseV2"
                  },
                  "examples": {
                    "Example-1": {
                      "$ref": "#/components/examples/400-error-response"
                    }
                  }
                }
              }
            },
            "500": {
              "description": "An unexpected error occurred.",
              "content": {
                "application/json;charset=UTF-8": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiErrorResponseV2"
                  },
                  "examples": {
                    "Example-1": {
                      "$ref": "#/components/examples/500-error-response"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/webhook/events": {
        "post": {
          "tags": [
            "Webhooks"
          ],
          "description": "Register a webhook to one or multiple event categories to receive real-time notifications when specific events occur in your application.",
          "summary": "Register Webhook Event",
          "operationId": "registerWebhook",
          "requestBody": {
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "object",
                  "required": [
                    "applicationId",
                    "categories",
                    "callbackUrl"
                  ],
                  "properties": {
                    "applicationId": {
                      "type": "string",
                      "description": "user application id",
                      "format": "uuid"
                    },
                    "categories": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "webhook event category name"
                      }
                    },
                    "callbackUrl": {
                      "type": "object",
                      "required": [
                        "main"
                      ],
                      "properties": {
                        "main": {
                          "type": "object",
                          "description": "primary webhook url used to send events to",
                          "required": [
                            "url"
                          ],
                          "properties": {
                            "url": {
                              "type": "string"
                            }
                          }
                        },
                        "backup": {
                          "type": "object",
                          "description": "backup webhook url used to send events to in case the main one is not responding",
                          "properties": {
                            "url": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/UserMetadata"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "$ref": "#/components/responses/WebhookDetailsWithSecret"
            },
            "401": {
              "description": "Authentication Error",
              "content": {
                "application/json;charset=UTF-8": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiErrorResponseV2"
                  },
                  "examples": {
                    "Example-1": {
                      "$ref": "#/components/examples/401-error-response"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "There are validation errors",
              "content": {
                "application/json;charset=UTF-8": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiErrorResponseV2"
                  },
                  "examples": {
                    "Example-1": {
                      "$ref": "#/components/examples/400-error-response"
                    }
                  }
                }
              }
            },
            "406": {
              "description": "Maximum number of registered webhooks has been reached",
              "content": {
                "application/json;charset=UTF-8": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiErrorResponseV2"
                  },
                  "examples": {
                    "Example-1": {
                      "$ref": "#/components/examples/406-error-response"
                    }
                  }
                }
              }
            },
            "500": {
              "description": "An unexpected error occurred.",
              "content": {
                "application/json;charset=UTF-8": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiErrorResponseV2"
                  },
                  "examples": {
                    "Example-1": {
                      "$ref": "#/components/examples/500-error-response"
                    }
                  }
                }
              }
            }
          },
          "parameters": [
            {
              "$ref": "#/components/parameters/SubAppHeader"
            }
          ]
        },
        "get": {
          "tags": [
            "Webhooks"
          ],
          "description": "Retrieve the list of registered webhooks for your application",
          "summary": "Retrieve All Webhook Events",
          "operationId": "getRegisteredWebhooks",
          "responses": {
            "200": {
              "description": "retrieve all registered webhook",
              "content": {
                "application/json;charset=UTF-8": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "metadata": {
                        "$ref": "#/components/schemas/Metadata"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "active": {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/RegisteredWebhookWithStatus"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Authentication Error",
              "content": {
                "application/json;charset=UTF-8": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiErrorResponseV2"
                  },
                  "examples": {
                    "Example-1": {
                      "$ref": "#/components/examples/401-error-response"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "There are validation errors",
              "content": {
                "application/json;charset=UTF-8": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiErrorResponseV2"
                  },
                  "examples": {
                    "Example-1": {
                      "$ref": "#/components/examples/400-error-response"
                    }
                  }
                }
              }
            },
            "500": {
              "description": "An unexpected error occurred.",
              "content": {
                "application/json;charset=UTF-8": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiErrorResponseV2"
                  },
                  "examples": {
                    "Example-1": {
                      "$ref": "#/components/examples/500-error-response"
                    }
                  }
                }
              }
            }
          },
          "parameters": [
            {
              "$ref": "#/components/parameters/SubAppHeader"
            }
          ]
        }
      },
      "/webhook/events/{webhook_id}": {
        "delete": {
          "tags": [
            "Webhooks"
          ],
          "description": "Delete a webhook event for a specified webhook ID, unregistering it from receiving any further notifications for the subscribed event categories in your application.",
          "summary": "Delete Webhook Event",
          "operationId": "deleteWebhook",
          "parameters": [
            {
              "$ref": "#/components/parameters/SubAppHeader"
            },
            {
              "$ref": "#/components/parameters/WebhookIdParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "delete webhook succeeded",
              "content": {
                "application/json;charset=UTF-8": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "metadata": {
                        "$ref": "#/components/schemas/Metadata"
                      },
                      "data": {
                        "$ref": "#/components/schemas/RegisteredWebhook"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Authentication Error",
              "content": {
                "application/json;charset=UTF-8": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiErrorResponseV2"
                  },
                  "examples": {
                    "Example-1": {
                      "$ref": "#/components/examples/401-error-response"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "There are validation errors",
              "content": {
                "application/json;charset=UTF-8": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiErrorResponseV2"
                  },
                  "examples": {
                    "Example-1": {
                      "$ref": "#/components/examples/400-error-response"
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Webhook id not found",
              "content": {
                "application/json;charset=UTF-8": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiErrorResponseV2"
                  },
                  "examples": {
                    "Example-1": {
                      "$ref": "#/components/examples/404-error-response"
                    }
                  }
                }
              }
            },
            "500": {
              "description": "An unexpected error occurred.",
              "content": {
                "application/json;charset=UTF-8": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiErrorResponseV2"
                  },
                  "examples": {
                    "Example-1": {
                      "$ref": "#/components/examples/500-error-response"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/webhook/secrets/{webhook_id}": {
        "post": {
          "tags": [
            "Webhooks"
          ],
          "description": "Reset webhook secret for a webhook that is already registered to your application",
          "summary": "Reset Webhook Secret",
          "operationId": "webhookSecretReset",
          "parameters": [
            {
              "$ref": "#/components/parameters/SubAppHeader"
            },
            {
              "$ref": "#/components/parameters/WebhookIdParameter"
            }
          ],
          "requestBody": {
            "content": {
              "application/json;charset=UTF-8":{
                "schema": {
                  "type": "object",
                  "required": ["delay"],
                  "properties": {
                    "delay": {
                      "type": "number",
                      "description": "delay in seconds",
                      "minimum": 0,
                      "maximum": 86400
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "$ref": "#/components/responses/WebhookDetailsWithSecret"
            },
            "401": {
              "description": "Authentication Error",
              "content": {
                "application/json;charset=UTF-8": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiErrorResponseV2"
                  },
                  "examples": {
                    "Example-1": {
                      "$ref": "#/components/examples/401-error-response"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "There are validation errors",
              "content": {
                "application/json;charset=UTF-8": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiErrorResponseV2"
                  },
                  "examples": {
                    "Example-1": {
                      "$ref": "#/components/examples/400-error-response"
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Webhook id not found",
              "content": {
                "application/json;charset=UTF-8": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiErrorResponseV2"
                  },
                  "examples": {
                    "Example-1": {
                      "$ref": "#/components/examples/404-error-response"
                    }
                  }
                }
              }
            },
            "500": {
              "description": "An unexpected error occurred.",
              "content": {
                "application/json;charset=UTF-8": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiErrorResponseV2"
                  },
                  "examples": {
                    "Example-1": {
                      "$ref": "#/components/examples/500-error-response"
                    }
                  }
                }
              }
            }
          }
        }
      }
  },
  "components": {
      "parameters": {
          "EventTypeId": {
              "name": "eventTypeId",
              "in": "path",
              "required": true,
              "description": "Unique identifier of the event type (for which notifications will be sent). ",
              "schema": {
                  "type": "string",
                  "description": "Valid event type Id"
              }
          },
          "SearchApplicationsParameters": {
              "in": "query",
              "name": "publicFilterValues",
              "style": "form",
              "explode": true,
              "schema": {
                  "type": "object",
                  "properties": {
                      "applicationIds": {
                          "type": "array",
                          "description": "Sub-application ids to filter the results for. If provided, the results will only include sub-applications with the given ids. Non-existent ids will be ignored.",
                          "maxItems": 15,
                          "items": {
                              "type": "string",
                              "format": "uuid"
                          }
                      },
                      "offset": {
                          "type": "integer",
                          "description": "The number of results to skip.",
                          "minimum": 0,
                          "default": 0
                      },
                      "limit": {
                          "type": "integer",
                          "description": "The maximum number of results to return.",
                          "minimum": 1,
                          "maximum": 1000,
                          "default": 1000
                      },
                      "sort": {
                          "type": "string",
                          "description": "The field to sort the results by.<br><br>Possible values:<ul><li>`last_updated` (ascending)</li><li>`-last_updated` (descending)</li><li>`name` (ascending)</li><li>`-name` (descending)</li><li>`uuid` (ascending)</li><li>`-uuid` (descending)</li></ul>",
                          "default": "name"
                      }
                  }
              }
          },
          "WebhookIdParameter": {
            "name": "webhook_id",
            "in": "path",
            "description": "Registered webhook id",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
        "SubAppHeader": {
          "description": "The sub-application ID to which event type is being subscribed to",
          "in": "header",
          "name": "sub-application",
          "required": false,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "schemas": {
          "Account": {
              "type": "object",
              "properties": {
                  "id": {
                      "description": "Unique identifier of the account.",
                      "type": "string"
                  },
                  "type": {
                      "type": "string",
                      "description": "Specifies the type of account e.g. (BUSINESS_CURRENT)."
                  },
                  "description": {
                      "description": "Product name as defined by the financial institution for this account",
                      "type": "string"
                  },
                  "balance": {
                      "type": "number",
                      "description": "Main / headline balance for the account. <br><br> Use of this field is recommended as fallback only. Instead, use of the typed balances (accountBalances) is recommended."
                  },
                  "currency": {
                      "description": "Currency the bank account balance is denoted in. <br><br> Specified as a 3-letter ISO 4217 currency code",
                      "type": "string"
                  },
                  "usageType": {
                      "$ref": "#/components/schemas/UsageType"
                  },
                  "accountType": {
                      "$ref": "#/components/schemas/AccountType"
                  },
                  "nickname": {
                      "description": "Nickname of the account that was provided by the account owner. <br><br> May be used to aid identification of the account.",
                      "type": "string"
                  },
                  "details": {
                      "description": "Supplementary specifications that might be provided by the Bank. These provide further characteristics about the account.",
                      "type": "string"
                  },
                  "accountNames": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/AccountName"
                      }
                  },
                  "accountIdentifications": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/AccountIdentification"
                      }
                  },
                  "accountBalances": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/AccountBalance"
                      }
                  },
                  "consolidatedAccountInformation": {
                      "$ref": "#/components/schemas/ConsolidatedAccountInformation"
                  }
              }
          },
          "AccountApiListResponse": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseListMeta"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/Account"
                      }
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "forwardedData": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ResponseForwardedData"
                      }
                  },
                  "raw": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RawResponse"
                      }
                  },
                  "paging": {
                      "$ref": "#/components/schemas/FilteredClientPayloadListAccount"
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  }
              }
          },
          "ApiResponseOfAccount": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "$ref": "#/components/schemas/Account"
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "forwardedData": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ResponseForwardedData"
                      }
                  },
                  "raw": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RawResponse"
                      }
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  }
              }
          },
          "AccountAuthorisationRequest": {
              "required": [
                  "institutionId"
              ],
              "type": "object",
              "properties": {
                  "userUuid": {
                      "type": "string",
                      "description": "`User` for which the authorisation request was created.",
                      "format": "uuid"
                  },
                  "applicationUserId": {
                      "type": "string",
                      "description": "__Conditional__. User-friendly identifier of the `User` that provides authorisation. If a `User` with the specified `applicationUserId` exists, it will be used otherwise, a new `User` with the specified `applicationUserId` will be created and used. Either the `userUuid` or `applicationUserId` must be provided.",
                      "example": "user-234562290"
                  },
                  "forwardParameters": {
                      "description": "Extra parameters the TPP may want to get forwarded in the callback request after the PSU redirect.",
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "institutionId": {
                      "type": "string",
                      "description": "__Mandatory__. The reference to the `Institution` which identifies which institution the authorisation request is sent to.",
                      "example": "yapily-mock"
                  },
                  "callback": {
                      "type": "string",
                      "description": "__Optional__. The server to redirect the user to after the user completes the authorisation at the `Institution`. <br><br>See [Using a callback (Optional)](https://docs.yapily.com/pages/knowledge/yapily-concepts/callback_url/#using-a-callback-optional) for more information.",
                      "example": "https://display-parameters.com"
                  },
                  "redirect": {
                      "$ref": "#/components/schemas/RedirectRequest"
                  },
                  "oneTimeToken": {
                      "type": "boolean",
                      "description": "__Conditional__. Used to receive a `oneTimeToken` rather than a `consentToken` at the `callback` for additional security. This can only be used when the `callback` is set. <br><br>See [Using a callback with an OTT (Optional)](https://docs.yapily.com/pages/knowledge/yapily-concepts/callback_url/#using-a-callback-with-an-ott-optional) for more information.",
                      "example": false
                  },
                  "accountRequest": {
                      "$ref": "#/components/schemas/AccountRequest"
                  }
              }
          },
          "AccountBalance": {
              "type": "object",
              "properties": {
                  "type": {
                      "$ref": "#/components/schemas/AccountBalanceType"
                  },
                  "dateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of the reported balance."
                  },
                  "balanceAmount": {
                      "$ref": "#/components/schemas/Amount"
                  },
                  "creditLineIncluded": {
                      "type": "boolean",
                      "description": "_Optional_. Indicates whether any credit lines are included in the balance."
                  },
                  "creditLines": {
                      "type": "array",
                      "description": "_Optional_. Specifies the type of balance.",
                      "items": {
                          "$ref": "#/components/schemas/CreditLine"
                      }
                  }
              }
          },
          "ExtendConsentRequest": {
              "required": [
                  "lastConfirmedAt"
              ],
              "type": "object",
              "properties": {
                  "lastConfirmedAt": {
                      "type": "string",
                      "description": "__Mandatory__. The time that the user confirmed access to their account information",
                      "format": "date-time",
                      "example": "2022-08-16T10:59:53.288Z"
                  }
              }
          },
          "EmbeddedAccountAuthorisationRequest": {
              "required": [
                  "institutionId"
              ],
              "type": "object",
              "properties": {
                  "userUuid": {
                      "type": "string",
                      "description": "`User` for which the authorisation request was created.",
                      "format": "uuid"
                  },
                  "applicationUserId": {
                      "type": "string",
                      "description": "__Conditional__. The user-friendly reference to the `User` that will authorise the authorisation request. If a `User` with the specified `applicationUserId` exists, it will be used otherwise, a new `User` with the specified `applicationUserId` will be created and used. Either the `userUuid` or `applicationUserId` must be provided.",
                      "example": "user-234562290"
                  },
                  "forwardParameters": {
                      "type": "array",
                      "description": "Extra parameters the TPP may want to get forwarded in the callback request after the PSU redirect.",
                      "items": {
                          "type": "string"
                      }
                  },
                  "institutionId": {
                      "type": "string",
                      "description": "__Mandatory__. The reference to the `Institution` which identifies which institution the authorisation request is sent to.",
                      "example": "yapily-mock"
                  },
                  "callback": {
                      "type": "string",
                      "description": "__Optional__. The server to redirect the user to after the user complete the authorisation at the `Institution`. <br><br>See [Using a callback (Optional)](https://docs.yapily.com/) for more information.",
                      "example": "https://display-parameters.com"
                  },
                  "redirect": {
                      "$ref": "#/components/schemas/RedirectRequest"
                  },
                  "oneTimeToken": {
                      "type": "boolean",
                      "description": "__Conditional__. Used to receive a `oneTimeToken` rather than a `consentToken` at the `callback` for additional security. This can only be used when the `callback` is set. <br><br>See [Using a callback with an OTT (Optional)](https://docs.yapily.com/pages/knowledge/yapily-concepts/callback_url/#using-a-callback-with-an-ott-optional) for more information.",
                      "example": false
                  },
                  "userCredentials": {
                      "$ref": "#/components/schemas/UserCredentials"
                  },
                  "selectedScaMethod": {
                      "$ref": "#/components/schemas/ScaMethod"
                  },
                  "scaCode": {
                      "type": "string",
                      "description": "__Conditional__. Used to update the authorisation with the sca code received by the user from the `Institution` using the embedded account authorisation flow.<br><br>This is the penultimate step required in the embedded account authorisation flow to authorise the `Consent`. After sending the sca code, to obtain an authorised consent, the last step is to poll [Get Consent](https://docs.yapily.com/api/reference/#operation/getConsentById) until the `Institution` authorises the request and the `Consent` `status` transitions to `AUTHORIZED`.",
                      "example": "325614"
                  },
                  "accountRequest": {
                      "$ref": "#/components/schemas/AccountRequest"
                  }
              }
          },
          "AccountIdentification": {
              "title": "Account Identifications",
              "required": [
                  "type",
                  "identification"
              ],
              "type": "object",
              "properties": {
                  "type": {
                      "$ref": "#/components/schemas/AccountIdentificationType"
                  },
                  "identification": {
                      "title": "Account Identification",
                      "type": "string",
                      "description": "__Mandatory__. The value associated with the account identification type.<br><br> See [Account Identification Combinations](https://docs.yapily.com/pages/key-concepts/payments/payment-execution/intro-to-payment-execution/#account-identifications-combinations) for more information on the format of the values.",
                      "example": "401016"
                  }
              }
          },
          "HostedVrpAccountIdentification": {
              "title": "Account Identifications",
              "required": [
                  "type",
                  "identification"
              ],
              "type": "object",
              "properties": {
                  "type": {
                      "$ref": "#/components/schemas/HostedVrpAccountIdentificationType"
                  },
                  "identification": {
                      "title": "Account Identification",
                      "type": "string",
                      "description": "__Mandatory__. The value associated with the account identification type.<br><br> See [Account Identification Combinations](https://docs.yapily.com/pages/key-concepts/payments/payment-execution/intro-to-payment-execution/#account-identifications-combinations) for more information on the format of the values.",
                      "example": "401016"
                  }
              }
          },
          "AccountIdentificationResponse": {
              "title": "Account Identifications",
              "type": "object",
              "properties": {
                  "type": {
                      "$ref": "#/components/schemas/AccountIdentificationTypeResponse"
                  },
                  "identification": {
                      "title": "Account Identification",
                      "type": "string",
                      "description": "The value associated with the account identification type.<br><br> See [Account Identification Combinations](https://docs.yapily.com/pages/payments/payments-resources/intro-to-payment-execution/#account-identifications-combinations) for more information on the format of the values.",
                      "example": "401016"
                  }
              }
          },
          "AccountInfo": {
              "required": [
                  "accountIdentification"
              ],
              "type": "object",
              "properties": {
                  "accountId": {
                      "type": "string",
                      "description": "__Conditional__. Unique identifier of the account.",
                      "example": "500000000000000000000001"
                  },
                  "accountIdentification": {
                      "$ref": "#/components/schemas/AccountIdentification"
                  }
              },
              "description": "__Conditional__. Used to create a request for the balance of the account specified. Once the user authorises the request, only the balance can be obtained by executing [GET Account Balances](./#get-account-balances).<br><br> This can be specified in conjunction with `accountIdentifiersForTransaction` to generate a `Consent` that can both access the accounts balance and transactions."
          },
          "AccountName": {
              "type": "object",
              "properties": {
                  "name": {
                      "description": "The bank account holder's name given by the account owner.",
                      "type": "string"
                  }
              }
          },
          "AccountRequest": {
              "type": "object",
              "properties": {
                  "transactionFrom": {
                      "type": "string",
                      "description": "__Optional__. Specifies the earliest date of the transaction records to be returned.<br><br> You must supply this field to retrieve transactions older than 90 days for banks accessed via the the [CBI Globe Gateway](https://docs.yapily.com/pages/data/financial-data-resources/data-restrictions/#cbi-globe-gateway).",
                      "format": "date-time",
                      "example": "2020-01-01T00:00:00Z"
                  },
                  "transactionTo": {
                      "type": "string",
                      "description": "__Optional__. Specifies the latest date of the transaction records to be returned.",
                      "format": "date-time",
                      "example": "2021-01-01T00:00:00Z"
                  },
                  "expiresAt": {
                      "type": "string",
                      "description": "__Optional__. Used to set a hard date for when the user's associated `Consent` will expire.<br><br>**Note**: If this supported by the bank, specifying this is property is opting out of having a long-lived consent that can be perpetually re-authorised by the user. This will add an `expiresAt` field on the `Consent` object which will render it unusable after this date.<br><br>**Note**: This is not supported by every `Institution`. In such case, the request will not fail but the property will be ignored and the created `Consent` will not have an expiry date.",
                      "format": "date-time",
                      "example": "2025-01-01T00:00:00Z"
                  },
                  "accountIdentifiers": {
                      "$ref": "#/components/schemas/AccountInfo"
                  },
                  "accountIdentifiersForTransaction": {
                      "type": "array",
                      "description": "__Conditional__. Used to create a request for the transactions of the account specified. Once the user authorises the request, only the transactions can be obtained by executing [GET Account Transactions](./#get-account-transactions). <br><br>This can be specified in conjunction with `accountIdentifiersForBalance` to generate a `Consent` that can both access the accounts balance and transactions.",
                      "items": {
                          "$ref": "#/components/schemas/AccountInfo"
                      }
                  },
                  "accountIdentifiersForBalance": {
                      "type": "array",
                      "description": "__Conditional__. Used to create a request for the balance of the account specified. Once the user authorises the request, only the balance can be obtained by executing [GET Account Balances](./#get-account-balances).<br><br> This can be specified in conjunction with `accountIdentifiersForTransaction` to generate a `Consent` that can both access the accounts balance and transactions.",
                      "items": {
                          "$ref": "#/components/schemas/AccountInfo"
                      }
                  },
                  "featureScope": {
                      "uniqueItems": true,
                      "type": "array",
                      "description": "__Optional__. Used to granularly specify the set of features that the user will give their consent for when requesting access to their account information. Depending on the `Institution`, this may also populate a consent screen which list these scopes before the user authorises.<br><br>This endpoint accepts allow all [Financial Data Features](/guides/financial-data/features/#feature-list) that the `Institution` supports.To find out which scopes an `Institution` supports, check [GET Institution](./#get-institution).",
                      "items": {
                          "$ref": "#/components/schemas/FeatureEnum"
                      }
                  }
              },
              "description": "__Conditional__. Used to further specify details of the `Consent` to request <br><br>Conditions:<ol><li>Mandatory to specify the individual scopes to request from the user at the `Institution` for an account authorisation</li><li>Mandatory to specify an expiry time on the created `Consent` at which time will render it unusable</li><li>Mandatory to specify the date range that the created `Consent` will be able to access transactions for (given the range is support for the `Institution`)</li></ol>"
          },
          "AccountStatement": {
              "type": "object",
              "description": "Statement information belonging to the account.",
              "properties": {
                  "id": {
                      "description": "Unique identifier for the statement.",
                      "type": "string"
                  },
                  "startDateTime": {
                      "type": "string",
                      "description": "Date and time of when the statement period starts.",
                      "format": "date-time"
                  },
                  "endDateTime": {
                      "type": "string",
                      "description": "Date and time of when the statement period ends.",
                      "format": "date-time"
                  },
                  "creationDateTime": {
                      "type": "string",
                      "description": "Date and time of when the statement was created.",
                      "format": "date-time"
                  }
              }
          },
          "AccountBalanceType": {
              "type": "string",
              "description": "Specifies the type of the stated account balance.",
              "enum": [
                  "CLOSING_AVAILABLE",
                  "CLOSING_BOOKED",
                  "CLOSING_CLEARED",
                  "EXPECTED",
                  "FORWARD_AVAILABLE",
                  "INFORMATION",
                  "INTERIM_AVAILABLE",
                  "INTERIM_BOOKED",
                  "INTERIM_CLEARED",
                  "OPENING_AVAILABLE",
                  "OPENING_BOOKED",
                  "OPENING_CLEARED",
                  "PREVIOUSLY_CLOSED_BOOKED",
                  "AUTHORISED",
                  "OTHER",
                  "UNKNOWN"
              ]
          },
          "AccountIdentificationType": {
              "title": "Account Identification Type",
              "type": "string",
              "description": "__Mandatory__. Used to describe the format of the account.<br><br> See [Account Identification Combinations](https://docs.yapily.com/pages/key-concepts/payments/payment-execution/intro-to-payment-execution/#account-identifications-combinations) for more information on when to specify each type.",
              "example": "SORT_CODE",
              "enum": [
                  "SORT_CODE",
                  "ACCOUNT_NUMBER",
                  "IBAN",
                  "BBAN",
                  "BIC",
                  "PAN",
                  "MASKED_PAN",
                  "MSISDN",
                  "BSB",
                  "NCC",
                  "ABA",
                  "ABA_WIRE",
                  "ABA_ACH",
                  "EMAIL",
                  "ROLL_NUMBER",
                  "BLZ",
                  "IFS",
                  "CLABE",
                  "CTN",
                  "BRANCH_CODE",
                  "VIRTUAL_ACCOUNT_ID"
              ]
          },
          "HostedAccountRequest": {
            "type": "object",
            "description": "__Conditional__. Used to further specify details of the `Consent` to request <br><br>Conditions:<ol><li>Mandatory to specify the individual scopes to request from the user at the `Institution` for an account authorisation</li><li>Mandatory to specify an expiry time on the created `Consent` at which time will render it unusable</li><li>Mandatory to specify the date range that the created `Consent` will be able to access transactions for (given the range is support for the `Institution`)</li></ol>",
            "properties": {
              "transactionFrom": {
                "type": "string",
                "description": "__Optional__. Specifies the earliest date of the transaction records to be returned.<br><br> You must supply this field to retrieve transactions older than 90 days for banks accessed via the the [CBI Globe Gateway](https://docs.yapily.com/pages/data/financial-data-resources/data-restrictions/#cbi-globe-gateway).",
                "format": "date-time",
                "example": "2020-01-01T00:00:00Z"
              },
              "transactionTo": {
                "type": "string",
                "description": "__Optional__. Specifies the latest date of the transaction records to be returned.",
                "format": "date-time",
                "example": "2021-01-01T00:00:00Z"
              },
              "expiresAt": {
                "type": "string",
                "description": "__Optional__. Used to set a hard date for when the user's associated `Consent` will expire.<br><br>**Note**: If this supported by the bank, specifying this is property is opting out of having a long-lived consent that can be perpetually re-authorised by the user. This will add an `expiresAt` field on the `Consent` object which will render it unusable after this date.<br><br>**Note**: This is not supported by every `Institution`. In such case, the request will not fail but the property will be ignored and the created `Consent` will not have an expiry date.",
                "format": "date-time",
                "example": "2025-01-01T00:00:00Z"
              },
              "featureScope": {
                "uniqueItems": true,
                "type": "array",
                "description": "__Optional__. Used to granularly specify the set of features that the user will give their consent for when requesting access to their account information. Depending on the `Institution`, this may also populate a consent screen which list these scopes before the user authorises.<br><br>This endpoint accepts allow all [Financial Data Features](/guides/financial-data/features/#feature-list) that the `Institution` supports.To find out which scopes an `Institution` supports, check [GET Institution](./#get-institution).",
                "items": {
                  "$ref": "#/components/schemas/FeatureEnum"
                }
              }
            }
          },
          "HostedVrpAccountIdentificationType": {
              "title": "Account Identification Type",
              "type": "string",
              "description": "Used to describe the format of the account.<br><br> Allowed values: <br>MASKED_ACCOUNT_NUMBER<br>SORT_CODE<br>ACCOUNT_NUMBER ",
              "example": "SORT_CODE"
          },
          "AccountIdentificationTypeResponse": {
              "title": "Account Identification Type",
              "type": "string",
              "description": "Used to describe the format of the account.<br><br> See [Account Identification Combinations](https://docs.yapily.com/pages/key-concepts/payments/payment-execution/intro-to-payment-execution/#account-identifications-combinations) for more information.",
              "example": "SORT_CODE",
              "enum": [
                  "SORT_CODE",
                  "ACCOUNT_NUMBER",
                  "IBAN",
                  "BBAN",
                  "BIC",
                  "PAN",
                  "MASKED_PAN",
                  "MSISDN",
                  "BSB",
                  "NCC",
                  "ABA",
                  "ABA_WIRE",
                  "ABA_ACH",
                  "EMAIL",
                  "ROLL_NUMBER",
                  "BLZ",
                  "IFS",
                  "CLABE",
                  "CTN",
                  "BRANCH_CODE",
                  "VIRTUAL_ACCOUNT_ID"
              ]
          },
          "ApiResponseOfAccountStatement": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "$ref": "#/components/schemas/AccountStatement"
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "forwardedData": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ResponseForwardedData"
                      }
                  },
                  "raw": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RawResponse"
                      }
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  }
              }
          },
          "ApiListResponseOfAccountStatement": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseListMeta"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/AccountStatement"
                      }
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "forwardedData": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ResponseForwardedData"
                      }
                  },
                  "raw": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RawResponse"
                      }
                  },
                  "paging": {
                      "$ref": "#/components/schemas/FilteredClientPayloadListAccountStatement"
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  }
              }
          },
          "AccountType": {
              "type": "string",
              "description": "The type of account e.g. (Credit Card, Savings).",
              "enum": [
                  "CASH_TRADING",
                  "CASH_INCOME",
                  "CASH_PAYMENT",
                  "CHARGE_CARD",
                  "CHARGES",
                  "COMMISSION",
                  "CREDIT_CARD",
                  "CURRENT",
                  "E_MONEY",
                  "LIMITED_LIQUIDITY_SAVINGS_ACCOUNT",
                  "LOAN",
                  "MARGINAL_LENDING",
                  "MONEY_MARKET",
                  "MORTGAGE",
                  "NON_RESIDENT_EXTERNAL",
                  "OTHER",
                  "OVERDRAFT",
                  "OVERNIGHT_DEPOSIT",
                  "PREPAID_CARD",
                  "SALARY",
                  "SAVINGS",
                  "SETTLEMENT",
                  "TAX",
                  "UNKNOWN"
              ]
          },
          "Address": {
              "title": "Address Details",
              "type": "object",
              "properties": {
                  "addressLines": {
                      "title": "Address Lines",
                      "type": "array",
                      "description": "__Optional__. The address line of the address",
                      "example": [
                          "Ardenham Court"
                      ],
                      "items": {
                          "type": "string"
                      }
                  },
                  "streetName": {
                      "title": "Street",
                      "type": "string",
                      "description": "__Optional__. The street name of the address",
                      "example": "Oxford Road"
                  },
                  "buildingNumber": {
                      "title": "Building Number",
                      "type": "string",
                      "description": "__Optional__. The building number of the address",
                      "example": "45"
                  },
                  "postCode": {
                      "title": "Post Code",
                      "type": "string",
                      "description": "__Optional__. The post code of the address",
                      "example": "HP19 3EQ"
                  },
                  "townName": {
                      "title": "Town",
                      "type": "string",
                      "description": "__Optional__. The town name of the address",
                      "example": "Aylesbury"
                  },
                  "county": {
                      "title": "County",
                      "type": "array",
                      "description": "__Optional__. The list of counties for the address",
                      "example": [
                          "Buckinghamshire"
                      ],
                      "items": {
                          "type": "string"
                      }
                  },
                  "country": {
                      "title": "Country",
                      "type": "string",
                      "description": "__Conditional__. The 2-letter country code for the address. <br><br>An `Institution` may require you to specify the `country` when used in the context of the `Payee` to be able to make a payment",
                      "example": "GB"
                  },
                  "department": {
                      "title": "Department",
                      "type": "string",
                      "description": "__Optional__. The department for the address",
                      "example": "Unit 2"
                  },
                  "subDepartment": {
                      "title": "Sub-Department",
                      "type": "string",
                      "description": "__Optional__. The sub-department for the address",
                      "example": "Floor 3"
                  },
                  "addressType": {
                      "$ref": "#/components/schemas/AddressTypeEnum"
                  }
              },
              "description": "__Conditional__. The address of the `Payee` or `Payer`.<ul><li>`payee.address` is mandatory when the `paymentType` is an `INTERNATIONAL` payment</li><li>An `Institution` may require you to specify the `country` when used in the context of the `Payee` to be able to make a payment.</li></ul>",
              "example": {
                  "country": "GB"
              }
          },
          "AddressResponse": {
              "title": "Address Details",
              "type": "object",
              "properties": {
                  "addressLines": {
                      "title": "Address Lines",
                      "type": "array",
                      "description": "The address line of the address",
                      "example": [
                          "Ardenham Court"
                      ],
                      "items": {
                          "type": "string"
                      }
                  },
                  "streetName": {
                      "title": "Street",
                      "type": "string",
                      "description": "The street name of the address",
                      "example": "Oxford Road"
                  },
                  "buildingNumber": {
                      "title": "Building Number",
                      "type": "string",
                      "description": "The building number of the address",
                      "example": "45"
                  },
                  "postCode": {
                      "title": "Post Code",
                      "type": "string",
                      "description": "The post code of the address",
                      "example": "HP19 3EQ"
                  },
                  "townName": {
                      "title": "Town",
                      "type": "string",
                      "description": "The town name of the address",
                      "example": "Aylesbury"
                  },
                  "county": {
                      "title": "County",
                      "type": "array",
                      "description": "The list of counties for the address",
                      "example": [
                          "Buckinghamshire"
                      ],
                      "items": {
                          "type": "string"
                      }
                  },
                  "country": {
                      "title": "Country",
                      "type": "string",
                      "description": "The 2-letter country code for the address.",
                      "example": "GB"
                  },
                  "department": {
                      "title": "Department",
                      "type": "string",
                      "description": "The department for the address",
                      "example": "Unit 2"
                  },
                  "subDepartment": {
                      "title": "Sub-Department",
                      "type": "string",
                      "description": "The sub-department for the address",
                      "example": "Floor 3"
                  },
                  "addressType": {
                      "$ref": "#/components/schemas/AddressTypeEnumResponse"
                  }
              },
              "description": "The address of the `Payee` or `Payer`.",
              "example": {
                  "country": "GB"
              }
          },
          "AddressDetails": {
              "type": "object",
              "properties": {
                  "addressLine": {
                      "type": "string",
                      "description": "Information, in free format text, that identifies a specific address."
                  }
              }
          },
          "AddressTypeEnum": {
              "title": "Address Type",
              "type": "string",
              "description": "__Optional__. The type of address",
              "enum": [
                  "BUSINESS",
                  "CORRESPONDENCE",
                  "DELIVERY_TO",
                  "MAIL_TO",
                  "PO_BOX",
                  "POSTAL",
                  "RESIDENTIAL",
                  "STATEMENT",
                  "UNKNOWN"
              ]
          },
          "AddressTypeEnumResponse": {
              "title": "Address Type",
              "type": "string",
              "description": "The type of address",
              "enum": [
                  "BUSINESS",
                  "CORRESPONDENCE",
                  "DELIVERY_TO",
                  "MAIL_TO",
                  "PO_BOX",
                  "POSTAL",
                  "RESIDENTIAL",
                  "STATEMENT",
                  "UNKNOWN"
              ]
          },
          "Amount": {
              "title": "Amount Details",
              "required": [
                  "amount",
                  "currency"
              ],
              "type": "object",
              "properties": {
                  "amount": {
                      "title": "Amount",
                      "type": "number",
                      "description": "__Mandatory__. The monetary value",
                      "example": 10
                  },
                  "currency": {
                      "title": "Currency",
                      "type": "string",
                      "description": "__Mandatory__. The [ISO 4217](https://www.xe.com/iso4217.php) currency code",
                      "example": "GBP"
                  }
              },
              "description": "__Mandatory__. Monetary Amount."
          },
          "AmountDetailsResponse": {
              "title": "Amount Details",
              "type": "object",
              "properties": {
                  "amount": {
                      "title": "Amount",
                      "type": "number",
                      "description": "The monetary value",
                      "example": 10
                  },
                  "currency": {
                      "title": "Currency",
                      "type": "string",
                      "description": "The [ISO 4217](https://www.xe.com/iso4217.php) currency code",
                      "example": "GBP"
                  }
              },
              "description": "Monetary Amount."
          },
          "ApiCall": {
              "type": "object"
          },
          "ApiError": {
              "type": "object",
              "description": "Provides details of the error that has occurred.",
              "properties": {
                  "code": {
                      "type": "integer",
                      "description": "_Mandatory_. Numeric `HTTP` status code associated with the error.",
                      "format": "int32"
                  },
                  "institutionError": {
                      "$ref": "#/components/schemas/InstitutionError"
                  },
                  "message": {
                      "type": "string",
                      "description": "__Mandatory__. Description of the exact error that has been experienced."
                  },
                  "source": {
                      "type": "string"
                  },
                  "status": {
                      "type": "string",
                      "description": "__Mandatory__. Textual description of the `HTTP` error status type."
                  },
                  "tracingId": {
                      "type": "string",
                      "description": "_Optional_.  A unique identifier assigned by Yapily for the request that can be used for support purposes."
                  }
              }
          },
          "ApiResponseError": {
              "type": "object",
              "properties": {
                  "error": {
                      "$ref": "#/components/schemas/ApiError"
                  },
                  "raw": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RawResponse"
                      }
                  }
              },
              "description": "Used to return errors from the bank from each request<ul><li>`400` - Returned by any `POST` endpoint when the body does not conform to the contract</li><li>`401` - Returned by any endpoint when an invalid `authToken` is used for authentication</li><li>`403` - Returned by any [Financial Data](https://docs.yapily.com/api/reference/#tag/Financial-Data) and any [Payments](https://docs.yapily.com/api/reference/#tag/Payments) endpoint when the `Consent` is no longer authorised to access financial data or to make a payment</li><li>`404` - Returned by any endpoint where there are path parameters and the path parameters supplied are unable to find the desired resource</li><li>`409` - Returned by any `POST` endpoint when creating a resource that conflicts with any other existing resource e.g. [Create User](https://docs.yapily.com/api/reference/#operation/addUser)</li><li>`424` - Returned by any [Financial Data](https://docs.yapily.com/api/reference/#tag/Financial-Data) and any [Payments](https://docs.yapily.com/api/reference/#tag/Payments) endpoint when the feature to be accessed is not supported by the `Institution`.</li><li>`500` - Returned by any endpoint when Yapily is down. If you encounter any false positives, please <a href=\"mailto:support@yapily.com\">notify us</a></li></ul>",
              "example": {
                  "error": {
                      "tracingId": "74b13ce8ed51419f92c5d609e04532de",
                      "code": 424,
                      "institutionError": {
                          "errorMessage": "{\"Code\":\"500 Internal Server Error\",\"Id\":\"5ff8d331-4282-41e0-b5ef-1ac9ac39f009\",\"Message\":\"Technical Error. Please try again later\",\"Errors\":[{\"ErrorCode\":\"UK.OBIE.UnexpectedError\",\"Message\":\"There was a problem processing your request. Please try again later\"}]}",
                          "httpStatusCode": 500
                      },
                      "source": "INSTITUTION",
                      "status": "FAILED_DEPENDENCY"
                  }
              }
          },
          "ApiErrorResponse": {
              "type": "object",
              "properties": {
                  "error": {
                      "$ref": "#/components/schemas/ErrorDetails"
                  }
              },
              "description": "Used to return errors from the bank from each request<ul><li>`400` - Returned by any `POST` endpoint when the body does not conform to the contract</li><li>`401` - Returned by any endpoint when an invalid `authToken` is used for authentication</li><li>`403` - Returned by any [Financial Data](https://docs.yapily.com/api/#yapily-api-financial-data) and any [Payments](https://docs.yapily.com/api/#yapily-api-payments) endpoint when the `Consent` is no longer authorised to access financial data or to make a payment</li><li>`404` - Returned by any endpoint where there are path parameters and the path parameters supplied are unable to find the desired resource</li><li>`409` - Returned by any `POST` endpoint when creating a resource that conflicts with any other existing resource e.g. [Create User](https://docs.yapily.com/api/#create-user)</li><li>`424` - Returned by any [Financial Data](https://docs.yapily.com/api/#yapily-api-financial-data) and any [Payments](https://docs.yapily.com/api/#yapily-api-payments) endpoint when the feature to be accessed is not supported by the `Institution`.</li><li>`500` - Returned by any endpoint when Yapily is down. If you encounter any false positives, please <a href=\"mailto:support@yapily.com\">notify us</a></li></ul>",
              "example": {
                  "error": {
                      "tracingId": "0c2d0973bdd24224a65e5d0f7d1b6154",
                      "code": 400,
                      "status": "BAD_REQUEST",
                      "supportUrl": "https://support.yapily.com/",
                      "source": "YAPILY",
                      "issues": [
                          {
                              "type": "INVALID_REQUEST",
                              "code": "INVALID_PROPERTY_UNEXPECTED_VALUE",
                              "parameter": "$.payer.accountidentifications.type",
                              "message": "Type Should be one of [PAN, SORT_CODE, ACCOUNT_NUMBER]",
                              "institutionError": {
                                  "errorMessage": "{\"Code\":\"400 BadRequest\",\"Id\":\"3517bfc2-c3ee-4f2f-b4f8-12f62478e0d1\",\"Message\":\"No Resource found\",\"Errors\":[{\"ErrorCode\":\"UK.OBIE.Resource.NotFound\",\"Message\":\"No resource found corresponding to the consent id\"}]}",
                                  "httpStatusCode": 400
                              }
                          }
                      ]
                  }
              }
          },
        "ApiErrorResponseV2": {
          "type": "object",
          "description": "API Error Response",
          "properties": {
            "error": {
              "required": [
                "tracingId",
                "code",
                "status",
                "issues"
              ],
              "type": "object",
              "properties": {
                "tracingId": {
                  "type": "string",
                  "description": "Unique identifier of the request, used by Yapily for support purposes"
                },
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Numeric HTTP status code associated with the error"
                },
                "status": {
                  "type": "string",
                  "description": "Textual description of the HTTP status"
                },
                "supportUrl": {
                  "type": "string",
                  "description": "Link to where further information regarding the error can be found"
                },
                "source": {
                  "type": "string",
                  "description": "Source of the error. This may be YAPILY, the INSTITUTION, or the USER"
                },
                "issues": {
                  "type": "array",
                  "description": "List of issues relating to the error",
                  "items": {
                    "required": [
                      "message",
                      "code"
                    ],
                    "type": "object",
                    "description": "Detailed information regarding the issue that was experienced during processing of the request",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Category of the issue"
                      },
                      "code": {
                        "type": "string",
                        "description": "5 digit Error Code that uniquely identifies the type of issue, for full list of error codes pelase check our documentation"
                      },
                      "message": {
                        "type": "string",
                        "description": "Human readable description of the issue that was experienced"
                      }
                    }
                  }
                }
              }
            }
          }
        },
          "Application": {
              "type": "object",
              "description": "Information about the application.",
              "properties": {
                  "uuid": {
                      "type": "string",
                      "description": "Unique identification for the `Application` as assigned by Yapily.",
                      "format": "uuid"
                  },
                  "name": {
                      "type": "string",
                      "description": "The individual name of the `Application`."
                  },
                  "active": {
                      "type": "boolean",
                      "description": "States whether an `Application` is active."
                  },
                  "authCallbacks": {
                      "type": "array",
                      "items": {
                          "type": "string",
                          "description": "URL'S used for redirecting the `User's` application after authentication has been completed."
                      }
                  },
                  "institutions": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/Institution"
                      }
                  },
                  "media": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/Media"
                      }
                  },
                  "created": {
                      "type": "string",
                      "description": "Date and time of when the application was created.",
                      "format": "date-time"
                  },
                  "updated": {
                      "type": "string",
                      "description": "Date and time of when the application was last updated.",
                      "format": "date-time"
                  }
              }
          },
          "ApplicationUser": {
              "type": "object",
              "description": "Information about a user of an application.",
              "properties": {
                  "uuid": {
                      "type": "string",
                      "description": "A unique identifier for the 'User' assigned by Yapily.",
                      "format": "uuid"
                  },
                  "applicationUuid": {
                      "type": "string",
                      "description": "Unique identifier of the application the user is associated with.",
                      "format": "uuid"
                  },
                  "applicationUserId": {
                      "type": "string",
                      "description": "__Conditional__. The user-friendly reference to the `User`."
                  },
                  "referenceId": {
                      "type": "string"
                  },
                  "createdAt": {
                      "type": "string",
                      "description": "Date and time of when the user was created.",
                      "format": "date-time"
                  },
                  "institutionConsents": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/InstitutionConsent"
                      }
                  }
              }
          },
          "BulkPaymentDetailsByIdResponse": {
            "type": "object",
            "properties": {
              "meta": {
                "type": "object",
                "properties": {
                  "tracingId": {
                    "type": "string"
                  }
                }
              },
              "data": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "consentId": {
                    "type": "string"
                  },
                  "createdAt": {
                    "type": "string"
                  },
                  "payments": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "reference": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "EmbeddedAccountAuthorisationResponse": {
              "type": "object",
              "properties": {
                  "id": {
                      "type": "string",
                      "description": "Unique identifier for the embedded account authorisation request.",
                      "format": "uuid"
                  },
                  "userUuid": {
                      "type": "string",
                      "description": "The `User` that the authorisation request was created for.",
                      "format": "uuid"
                  },
                  "applicationUserId": {
                      "type": "string",
                      "description": "The user-friendly reference to the `User` that the authorisation request was created for."
                  },
                  "referenceId": {
                      "type": "string"
                  },
                  "institutionId": {
                      "type": "string",
                      "description": "The `Institution` the authorisation request was sent to."
                  },
                  "status": {
                      "$ref": "#/components/schemas/AuthorisationStatus"
                  },
                  "createdAt": {
                      "type": "string",
                      "description": "Date and time the embedded authorisation was created by the application user.",
                      "format": "date-time"
                  },
                  "transactionFrom": {
                      "type": "string",
                      "description": "When performing a transaction query using the consent, this is the earliest date of transaction records that can be retrieved.",
                      "format": "date-time"
                  },
                  "transactionTo": {
                      "type": "string",
                      "description": "When performing a transaction query using the consent, this is the latest date of transaction records that can be retrieved.",
                      "format": "date-time"
                  },
                  "expiresAt": {
                      "type": "string",
                      "description": "Date and time the embedded authorisation expires. Re-authorisation is needed to retain access.",
                      "format": "date-time"
                  },
                  "timeToExpireInMillis": {
                      "type": "integer",
                      "format": "int64",
                      "deprecated": true
                  },
                  "timeToExpire": {
                      "type": "string",
                      "format": "iso8601"
                  },
                  "featureScope": {
                      "uniqueItems": true,
                      "description": "The set of features the consent provides access to.",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/FeatureEnum"
                      }
                  },
                  "consentToken": {
                      "type": "string",
                      "description": "Represents the authorisation to gain access to the requested features. Required to access account information."
                  },
                  "state": {
                      "type": "string",
                      "description": "Correlation ID used when handshaking with a new institution via OAuth2 registration."
                  },
                  "authorizedAt": {
                      "type": "string",
                      "description": "Date and time the request was authorised by the `Institution`.",
                      "format": "date-time"
                  },
                  "institutionConsentId": {
                      "type": "string",
                      "description": "Identification of the consent at the `Institution`."
                  },
                  "authorisationUrl": {
                      "type": "string"
                  },
                  "qrCodeUrl": {
                      "type": "string",
                      "description": "The URL link for the QR code that may be scanned via a mobile device to make an authorisation redirect to the bank (authURL encoded)."
                  },
                  "scaMethods": {
                      "type": "array",
                      "description": "List of `SCA methods` that the `Institution` supports and are available for selection.",
                      "items": {
                          "$ref": "#/components/schemas/ScaMethod"
                      }
                  },
                  "selectedScaMethod": {
                      "$ref": "#/components/schemas/ScaMethod"
                  }
              }
          },
          "ApiResponseOfEmbeddedAccountAuthorisationResponse": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "$ref": "#/components/schemas/EmbeddedAccountAuthorisationResponse"
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "forwardedData": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ResponseForwardedData"
                      }
                  },
                  "raw": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RawResponse"
                      }
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  }
              }
          },
          "AccountAuthorisationResponse": {
              "type": "object",
              "properties": {
                  "id": {
                      "type": "string",
                      "description": "Unique identifier for the account authorisation request.<br><br>The `consentID` used to [retrieve a consent](/api/reference/#operation/getConsentById).",
                      "format": "uuid"
                  },
                  "userUuid": {
                      "type": "string",
                      "description": "The `User` that the authorisation request was created for.",
                      "format": "uuid"
                  },
                  "applicationUserId": {
                      "type": "string",
                      "description": "The user-friendly reference to the `User` that the authorisation request was created for."
                  },
                  "referenceId": {
                      "type": "string"
                  },
                  "institutionId": {
                      "type": "string",
                      "description": "The `Institution` the authorisation request was sent to."
                  },
                  "status": {
                      "$ref": "#/components/schemas/AuthorisationStatus"
                  },
                  "createdAt": {
                      "type": "string",
                      "description": "Date and time the consent was created.",
                      "format": "date-time"
                  },
                  "transactionFrom": {
                      "type": "string",
                      "description": "When performing a transaction query using the consent, this is the earliest date of transaction records that can be retrieved.",
                      "format": "date-time"
                  },
                  "transactionTo": {
                      "type": "string",
                      "description": "When performing a transaction query using the consent, this is the latest date of transaction records that can be retrieved.",
                      "format": "date-time"
                  },
                  "expiresAt": {
                      "type": "string",
                      "description": "Date and time the authorisation expires. Re-authorisation is needed to retain access.",
                      "format": "date-time"
                  },
                  "timeToExpireInMillis": {
                      "type": "integer",
                      "format": "int64",
                      "deprecated": true
                  },
                  "timeToExpire": {
                      "type": "string",
                      "format": "iso8601"
                  },
                  "featureScope": {
                      "uniqueItems": true,
                      "description": "The set of features the consent provides access to.",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/FeatureEnum"
                      }
                  },
                  "consentToken": {
                      "type": "string",
                      "description": "Represents the authorisation to gain access to the requested features. Required to access account information."
                  },
                  "state": {
                      "type": "string",
                      "description": "Correlation ID used with the `Institution` during the authorisation process."
                  },
                  "authorizedAt": {
                      "type": "string",
                      "description": "Date and time the request was authorised by the `Institution`.",
                      "format": "date-time"
                  },
                  "lastConfirmedAt": {
                      "type": "string",
                      "description": "The time the PSU last confirmed access to their account information, either through full authentication with the institution, or through reconfirmation with the TPP.",
                      "format": "date-time"
                  },
                  "reconfirmBy": {
                      "type": "string",
                      "description": "The date and time the consent must be reconfirmed by to ensure continued access to the account information.",
                      "format": "date-time"
                  },
                  "institutionConsentId": {
                      "type": "string",
                      "description": "Unique identifier of the consent assigned by the `Institution`."
                  },
                  "authorisationUrl": {
                      "type": "string"
                  },
                  "qrCodeUrl": {
                      "type": "string",
                      "description": "The URL link for the QR code that may be scanned via a mobile device to make an authorisation redirect to the bank (authURL encoded)."
                  }
              }
          },
          "AuthorisationStatus": {
              "description": "Current status of the embedded authorisation request in code form.",
              "type": "string",
              "enum": [
                  "AWAITING_AUTHORIZATION",
                  "AWAITING_FURTHER_AUTHORIZATION",
                  "AWAITING_RE_AUTHORIZATION",
                  "AUTHORIZED",
                  "CONSUMED",
                  "REJECTED",
                  "REVOKED",
                  "FAILED",
                  "EXPIRED",
                  "UNKNOWN",
                  "INVALID",
                  "AWAITING_DECOUPLED_PRE_AUTHORIZATION",
                  "AWAITING_PRE_AUTHORIZATION",
                  "PRE_AUTHORIZED",
                  "AWAITING_DECOUPLED_AUTHORIZATION",
                  "AWAITING_SCA_METHOD",
                  "AWAITING_SCA_CODE"
              ]
          },
          "ApiResponseOfAccountAuthorisationResponse": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "$ref": "#/components/schemas/AccountAuthorisationResponse"
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "forwardedData": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ResponseForwardedData"
                      }
                  },
                  "raw": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RawResponse"
                      }
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  }
              }
          },
          "TransactionBalance": {
              "type": "object",
              "properties": {
                  "type": {
                      "$ref": "#/components/schemas/AccountBalanceType"
                  },
                  "balanceAmount": {
                      "$ref": "#/components/schemas/Amount"
                  }
              }
          },
          "Balances": {
              "type": "object",
              "properties": {
                  "mainBalanceAmount": {
                      "$ref": "#/components/schemas/Amount"
                  },
                  "balances": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/AccountBalance"
                      }
                  }
              }
          },
          "ApiResponseOfBalances": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "$ref": "#/components/schemas/Balances"
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "forwardedData": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ResponseForwardedData"
                      }
                  },
                  "raw": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RawResponse"
                      }
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  }
              }
          },
          "Beneficiary": {
              "type": "object",
              "description": "Account information belonging to the target beneficiary (person/ business).",
              "properties": {
                  "id": {
                      "type": "string",
                      "description": "Unique identifier of the `beneficiary`."
                  },
                  "reference": {
                      "type": "string",
                      "description": "A creditor reference that is requested to be used for all payment instructions to this beneficiary."
                  },
                  "payee": {
                      "$ref": "#/components/schemas/BeneficiaryPayee"
                  },
                  "trusted": {
                      "type": "boolean",
                      "description": "Indicates whether the account owner has stated that this beneficiary should be trusted. This often results in reduced authentication and authorisation requirements on payments to the beneficiary."
                  }
              }
          },
          "BeneficiaryPayee": {
              "description": "__Mandatory__. Account details belonging to the `Beneficiary Payee` (person/ business). You must define this in your payment request along with all of the nested mandatory properties.",
              "required": [
                  "accountIdentifications"
              ],
              "type": "object",
              "properties": {
                  "name": {
                      "type": "string",
                      "description": "The account holder name of the beneficiary.",
                      "example": "Jane Doe"
                  },
                  "accountIdentifications": {
                      "type": "array",
                      "description": "__Mandatory__. The account identifications that identify the `BeneficiaryPayee` bank account.",
                      "example": [
                          {
                              "identification": "401016",
                              "type": "SORT_CODE"
                          },
                          {
                              "identification": "71518920",
                              "type": "ACCOUNT_NUMBER"
                          }
                      ],
                      "items": {
                          "$ref": "#/components/schemas/AccountIdentification"
                      },
                      "uniqueItems": true
                  },
                  "address": {
                      "$ref": "#/components/schemas/Address"
                  }
              }
          },
          "ApiListResponseOfBeneficiary": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseListMeta"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/Beneficiary"
                      }
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "forwardedData": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ResponseForwardedData"
                      }
                  },
                  "raw": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RawResponse"
                      }
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  }
              }
          },
          "BulkPaymentAuthorisationRequest": {
              "required": [
                  "institutionId"
              ],
              "type": "object",
              "properties": {
                  "userUuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "__Conditional__. The reference to the `User` that will authorise the authorisation request using the Yapily generated UUID. Either the `userUuid` or `applicationUserId` must be provided.",
                      "example": "e006a012-c306-4355-a6a1-99bf69ae5171"
                  },
                  "applicationUserId": {
                      "type": "string",
                      "description": "__Conditional__. The user-friendly reference to the `User` that will authorise the authorisation request. If a `User` with the specified `applicationUserId` exists, it will be used otherwise, a new `User` with the specified `applicationUserId` will be created and used. Either the `userUuid` or `applicationUserId` must be provided.",
                      "example": "user-234562290"
                  },
                  "forwardParameters": {
                      "type": "array",
                      "description": "Extra parameters the TPP may want to get forwarded in the callback request after the PSU redirect.",
                      "items": {
                          "type": "string"
                      }
                  },
                  "institutionId": {
                      "type": "string",
                      "description": "__Mandatory__. The reference to the `Institution` which identifies which institution the authorisation request is sent to.",
                      "example": "yapily-mock"
                  },
                  "callback": {
                      "type": "string",
                      "description": "__Optional__. The server to redirect the user to after the user complete the authorisation at the `Institution`. <br><br>See [Using a callback (Optional)](https://docs.yapily.com/pages/knowledge/yapily-concepts/callback_url/#using-a-callback-optional) for more information.",
                      "example": "https://display-parameters.com"
                  },
                  "redirect": {
                      "$ref": "#/components/schemas/RedirectRequest"
                  },
                  "oneTimeToken": {
                      "type": "boolean",
                      "description": "__Conditional__. Used to receive a `oneTimeToken` rather than a `consentToken` at the `callback` for additional security. This can only be used when the `callback` is set. <br><br>See [Using a callback with an OTT (Optional)](https://docs.yapily.com/pages/knowledge/yapily-concepts/callback_url/#using-a-callback-with-an-ott-optional) for more information.",
                      "example": false
                  },
                  "paymentRequest": {
                      "$ref": "#/components/schemas/BulkPaymentRequest"
                  }
              }
          },
          "BulkPaymentEmbeddedAuthorisationRequest": {
              "required": [
                  "institutionId"
              ],
              "type": "object",
              "properties": {
                  "userUuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "__Conditional__. The reference to the `User` that will authorise the authorisation request using the Yapily generated UUID. Either the `userUuid` or `applicationUserId` must be provided.",
                      "example": "e006a012-c306-4355-a6a1-99bf69ae5171"
                  },
                  "applicationUserId": {
                      "type": "string",
                      "description": "__Conditional__. The user-friendly reference to the `User` that will authorise the authorisation request. If a `User` with the specified `applicationUserId` exists, it will be used otherwise, a new `User` with the specified `applicationUserId` will be created and used. Either the `userUuid` or `applicationUserId` must be provided.",
                      "example": "user-234562290"
                  },
                  "institutionId": {
                      "type": "string",
                      "description": "__Mandatory__. The reference to the `Institution` which identifies which institution the authorisation request is sent to.",
                      "example": "yapily-mock"
                  },
                  "callback": {
                      "type": "string",
                      "description": "__Optional__. The server to redirect the user to after the user complete the authorisation at the `Institution`. <br><br>See [Using a callback (Optional)](https://docs.yapily.com/pages/knowledge/yapily-concepts/callback_url/#using-a-callback-optional) for more information.",
                      "example": "https://display-parameters.com"
                  },
                  "redirect": {
                      "$ref": "#/components/schemas/RedirectRequest"
                  },
                  "oneTimeToken": {
                      "type": "boolean",
                      "description": "__Conditional__. Used to receive a `oneTimeToken` rather than a `consentToken` at the `callback` for additional security. This can only be used when the `callback` is set. <br><br>See [Using a callback with an OTT (Optional)](https://docs.yapily.com/pages/knowledge/yapily-concepts/callback_url/#using-a-callback-with-an-ott-optional) for more information.",
                      "example": false
                  },
                  "paymentRequest": {
                      "$ref": "#/components/schemas/BulkPaymentRequest"
                  },
                  "userCredentials": {
                      "$ref": "#/components/schemas/UserCredentials"
                  },
                  "selectedScaMethod": {
                      "$ref": "#/components/schemas/ScaMethod"
                  },
                  "scaCode": {
                      "type": "string",
                      "description": "__Conditional__. Used to update the authorisation with the sca code received by the user from the `Institution` using the embedded payment authorisation flow.<br><br>This is the penultimate step required in the embedded payment authorisation flow to authorise the `Consent`. After sending the sca code, to obtain an authorised consent, the last step is to poll [Get Consent](https://docs.yapily.com/api/reference/#operation/getConsentById) until the `Institution` authorises the request and the `Consent` `status` transitions to `AUTHORIZED`.",
                      "example": "325614"
                  }
              },
              "description": "The request body containing a `BulkPaymentEmbeddedAuthorisationRequest` json payload"
          },
          "BulkPaymentRequest": {
              "required": [
                  "payments"
              ],
              "type": "object",
              "properties": {
                  "payments": {
                      "type": "array",
                      "description": "__Mandatory__. The array of `PaymentRequest` objects to initiate in the bulk payment.",
                      "items": {
                          "$ref": "#/components/schemas/PaymentRequest"
                      }
                  },
                  "originatorIdentificationNumber": {
                      "type": "string",
                      "description": "__Conditional__. The identification number of the originator.<ul><li>Mandatory for AIB bulk payments</li></ul>"
                  },
                  "executionDateTime": {
                      "type": "string",
                      "description": "__Optional__. Used to schedule the bulk payment to be executed at a future date if supported by the `Institution`.",
                      "format": "date-time"
                  }
              },
              "description": "The payment request object defining the details of the bulk payment"
          },
          "SubmitBulkPaymentRequest": {
          "required": [
            "payments"
          ],
          "type": "object",
          "properties": {
            "idempotencyId": {
              "type": "string",
              "minLength": 1,
              "maxLength": 40,
              "pattern": "^\\S{1,40}$",
              "description": "__Optional__. An alphanumeric string (1-40 chars) used for idempotency. Unique per consent ID for 24 hours. Prevents duplicate bulk file payment submissions.",
              "example": "1cc3e60d-5500-42be-aaeb-3c5e2f5ed048"
            },
            "payments": {
              "type": "array",
              "description": "__Mandatory__. The array of `PaymentRequest` objects to initiate in the bulk payment.",
              "items": {
                "$ref": "#/components/schemas/PaymentRequest"
              }
            },
            "originatorIdentificationNumber": {
              "type": "string",
              "description": "__Conditional__. The identification number of the originator.<ul><li>Mandatory for AIB bulk payments</li></ul>"
            },
            "executionDateTime": {
              "type": "string",
              "description": "__Optional__. Used to schedule the bulk payment to be executed at a future date if supported by the `Institution`.",
              "format": "date-time"
            }
          },
          "description": "The payment request object defining the details of the bulk payment"
        },
          "Categorisation": {
              "type": "object",
              "description": "Income and Expense categorisation that the Yapily categorisation engine has determined for the transaction.",
              "properties": {
                  "categories": {
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "source": {
                      "type": "string"
                  }
              }
          },
          "Category": {
              "type": "object",
              "description": "Income and Expense `Category` in which the transaction resides.",
              "properties": {
                  "id": {
                      "type": "string",
                      "description": "Unique identifier of the category",
                      "format": "uuid"
                  },
                  "label": {
                      "type": "string",
                      "description": "Descriptive identifier of the category."
                  },
                  "country": {
                      "type": "string",
                      "description": "The country code of where the category transaction took place, denoted as a 3-digit character code - ISO 3166."
                  },
                  "subcategories": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/Subcategory"
                      }
                  }
              }
          },
          "ApiListResponseOfCategory": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseListMeta"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/Category"
                      }
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "forwardedData": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ResponseForwardedData"
                      }
                  },
                  "raw": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RawResponse"
                      }
                  },
                  "paging": {
                      "$ref": "#/components/schemas/FilteredClientPayloadListCategory"
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  }
              }
          },
          "GetCategoriesResponse": {
            "type": "object",
            "properties": {
              "labels": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "ChargeBearerType": {
              "type": "string",
              "description": "__Optional__. Specifies which party/parties will bear the charges associated with the processing of the payment transaction. Valid values are:<ul><li>`DEBT` - All transaction charges are to be borne by the debtor.</li><li>`CRED` - All transaction charges are to be borne by the creditor.</li><li>`SHAR` - In a credit transfer context, means that transaction charges on the sender side are to be borne by the debtor, transaction charges on the receiver side are to be borne by the creditor</li><li>`SLEV` - Charges are to be applied following the rules agreed in the service level and/or scheme.</li></ul>",
              "enum": [
                  "DEBT",
                  "CRED",
                  "SHAR",
                  "SLEV"
              ]
          },
          "PaymentChargeDetails": {
              "type": "object",
              "description": "Details the charges that will apply to the payment.",
              "properties": {
                  "chargeAmount": {
                      "$ref": "#/components/schemas/Amount"
                  },
                  "chargeType": {
                      "description": "__Mandatory__. Specifies the nature of the transaction charge e.g. (Bank transfer fees).",
                      "type": "string"
                  },
                  "chargeTo": {
                      "description": "__Mandatory__. States which party of the payment bears the charges.",
                      "type": "string"
                  }
              }
          },
          "Consent": {
              "type": "object",
              "description": "Consent detailing the requested authorisation from a user to a specific `Institution`.",
              "properties": {
                  "id": {
                      "type": "string",
                      "description": "Unique identifier of the consent.",
                      "format": "uuid"
                  },
                  "userUuid": {
                      "type": "string",
                      "format": "uuid"
                  },
                  "applicationUserId": {
                      "type": "string",
                      "description": "__Conditional__. The user-friendly reference to the `User` that will authorise the authorisation request. If a `User` with the specified `applicationUserId` exists, it will be used otherwise, a new `User` with the specified `applicationUserId` will be created and used. Either the `userUuid` or `applicationUserId` must be provided."
                  },
                  "referenceId": {
                      "type": "string"
                  },
                  "institutionId": {
                      "type": "string",
                      "description": "__Mandatory__. The `Institution` the authorisation request is sent to."
                  },
                  "status": {
                      "$ref": "#/components/schemas/AuthorisationStatus"
                  },
                  "createdAt": {
                      "type": "string",
                      "description": "Date and time of when the consent was created.",
                      "format": "date-time"
                  },
                  "transactionFrom": {
                      "type": "string",
                      "description": "When performing a transaction query using the consent, this is the earliest date of transaction records that can be retrieved.",
                      "format": "date-time"
                  },
                  "transactionTo": {
                      "type": "string",
                      "description": "When performing a transaction query using the consent, this is the latest date of transaction records that can be retrieved.",
                      "format": "date-time"
                  },
                  "expiresAt": {
                      "type": "string",
                      "description": "Date and time of when the authorisation will expire by. Reauthorisation will be needed to retain access.",
                      "format": "date-time"
                  },
                  "timeToExpireInMillis": {
                      "type": "integer",
                      "format": "int64",
                      "deprecated": true
                  },
                  "timeToExpire": {
                      "type": "string",
                      "format": "iso8601"
                  },
                  "featureScope": {
                      "uniqueItems": true,
                      "description": "The set of features that the consent will provide access to.",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/FeatureEnum"
                      }
                  },
                  "consentToken": {
                      "type": "string",
                      "description": "Represents the authorisation to gain access to the requested features. Required to access account information or make a payment request."
                  },
                  "state": {
                      "type": "string",
                      "description": "Correlation ID used with the `Institution` during the authorisation process."
                  },
                  "authorizedAt": {
                      "type": "string",
                      "description": "Date and time of when the request was authorised by the Institution.",
                      "format": "date-time"
                  },
                  "lastConfirmedAt": {
                      "type": "string",
                      "description": "The time that the PSU last confirmed access to their account information, either through full authentication with the institution, or through reconfirmation with the TPP.",
                      "format": "date-time"
                  },
                  "reconfirmBy": {
                      "type": "string",
                      "description": "The time by which the consent should be reconfirmed to ensure continued access to the account information.",
                      "format": "date-time"
                  },
                  "institutionConsentId": {
                      "type": "string",
                      "description": "Identification of the consent at the Institution."
                  },
                  "isDeletedByInstitution": {
                      "type": "boolean",
                      "description": "Denotes whether the consent has been deleted on the institution side or not when a DELETE method is executed on a Yapily consent if that functionality is provided by the institution",
                      "example": false
                  }
              }
          },
          "ApiListResponseOfConsent": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseListMeta"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/Consent"
                      }
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "forwardedData": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ResponseForwardedData"
                      }
                  },
                  "raw": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RawResponse"
                      }
                  },
                  "paging": {
                      "$ref": "#/components/schemas/FilteredClientPayloadListConsent"
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  }
              }
          },
          "ApiResponseOfConsent": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "$ref": "#/components/schemas/Consent"
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "forwardedData": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ResponseForwardedData"
                      }
                  },
                  "raw": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RawResponse"
                      }
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  }
              }
          },
          "ConsentAuthCodeRequest": {
              "required": [
                  "authCode",
                  "authState"
              ],
              "type": "object",
              "properties": {
                  "authCode": {
                      "type": "string",
                      "description": "__Mandatory__. The authorisation code",
                      "example": "6b965fbb-ff09-4afa-b897-90c34797cb8f"
                  },
                  "authState": {
                      "type": "string",
                      "description": "__Mandatory__. The authorisation state",
                      "example": "1270cb2ffc4842b78953afa2228e0a87"
                  }
              },
              "description": "The request body containing the `ConsentAuthCodeRequest` json payload"
          },
          "ConsentDeleteResponse": {
              "type": "object",
              "properties": {
                  "id": {
                      "type": "string",
                      "description": "__Conditional__. User-friendly identifier of the `User` that provides authorisation. If a `User` with the specified `applicationUserId` exists, it will be used otherwise, a new `User` with the specified `applicationUserId` will be created and used. Either the `userUuid` or `applicationUserId` must be provided.",
                      "format": "uuid"
                  },
                  "deleteStatus": {
                      "$ref": "#/components/schemas/DeleteStatusEnum"
                  },
                  "institutionId": {
                      "type": "string",
                      "description": "__Mandatory__. The `Institution` the authorisation request is sent to."
                  },
                  "institutionConsentId": {
                      "type": "string",
                      "description": "Identification of the consent at the Institution."
                  },
                  "creationDate": {
                      "type": "string",
                      "description": "Date and time of when the consent was authorised.",
                      "format": "date-time"
                  }
              }
          },
          "ConsolidatedAccountInformation": {
              "type": "object",
              "properties": {
                  "id": {
                      "type": "string",
                      "description": "Identifier of the consolidated account. When used in Get Account Transactions calls, the transactions between the sub-accounts will not be reported"
                  },
                  "accountBalances": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/AccountBalance"
                      }
                  }
              },
              "description": "Summary information regarding account balances of the overall account provided by the bank"
          },
          "ApiResponseOfConsentDeleteResponse": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "$ref": "#/components/schemas/ConsentDeleteResponse"
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "forwardedData": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ResponseForwardedData"
                      }
                  },
                  "raw": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RawResponse"
                      }
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  }
              }
          },
          "Country": {
              "type": "object",
              "properties": {
                  "displayName": {
                      "type": "string",
                      "description": "Country name."
                  },
                  "countryCode2": {
                      "type": "string",
                      "description": "Two character ISO 3166 country code."
                  }
              },
              "description": "An array of `Country` denoting which regions the `Institution` provides coverage for"
          },
          "CredentialsType": {
              "type": "string",
              "description": "The type of credentials required to register the `Institution`",
              "enum": [
                  "OAUTH1",
                  "OAUTH2",
                  "OAUTH2_NOSECRET",
                  "OAUTH2_SIGNATURE",
                  "OPEN_BANKING_UK_MANUAL",
                  "OPEN_BANKING_UK_AUTO",
                  "OPEN_BANKING_IBM",
                  "OPEN_BANKING_AUTO",
                  "OPEN_BANKING_AUTO_EMAIL",
                  "OPEN_BANKING_MANUAL",
                  "OPEN_BANKING_WITH_TPP_ID_AND_SECRET",
                  "API_KEY",
                  "OPEN_BANKING_NO_KEY",
                  "OPEN_BANKING_NO_TRANSPORT",
                  "TOKEN_IO"
              ]
          },
          "CreditLine": {
              "type": "object",
              "description": "__Mandatory__. Details whether the account has access to a credit line from an `Institution`.",
              "properties": {
                  "type": {
                      "$ref": "#/components/schemas/CreditLineType"
                  },
                  "creditLineAmount": {
                      "$ref": "#/components/schemas/Amount"
                  }
              }
          },
          "CreditLineType": {
              "type": "string",
              "description": "__Mandatory__. The type of credit that has been provided.",
              "enum": [
                  "AVAILABLE",
                  "CREDIT",
                  "EMERGENCY",
                  "PRE_AGREED",
                  "TEMPORARY",
                  "OTHER",
                  "UNKNOWN"
              ]
          },
          "CurrencyExchange": {
              "type": "object",
              "description": "Provides details on the currrency exchange.",
              "properties": {
                  "sourceCurrency": {
                      "type": "string",
                      "description": "Currency from which an amount is to be converted."
                  },
                  "targetCurrency": {
                      "type": "string",
                      "description": "Currency to which an amount is to be converted."
                  },
                  "unitCurrency": {
                      "type": "string",
                      "description": "The currency in which the rate of exchange is expressed in a currency exchange. In the example 1GBP = xxxCUR, the unit currency is GBP."
                  },
                  "exchangeRate": {
                      "type": "number",
                      "description": "The factor used for conversion of an amount from one currency to another. This reflects the price at which one currency was bought with another currency."
                  }
              }
          },
          "DeleteStatusEnum": {
              "type": "string",
              "description": "Indicates the outcome of the delete request.",
              "enum": [
                  "SUCCESS",
                  "FAILED"
              ]
          },
          "DirectDebitResponse": {
              "type": "object",
              "properties": {
                  "id": {
                      "type": "string"
                  },
                  "statusDetails": {
                      "$ref": "#/components/schemas/PaymentStatusDetails"
                  },
                  "payeeDetails": {
                      "$ref": "#/components/schemas/DirectDebitPayee"
                  },
                  "reference": {
                      "type": "string"
                  },
                  "previousPaymentAmount": {
                      "$ref": "#/components/schemas/Amount"
                  },
                  "previousPaymentDateTime": {
                      "type": "string",
                      "format": "date-time"
                  }
              }
          },
          "DirectDebitPayee": {
              "type": "object",
              "properties": {
                  "name": {
                      "type": "string",
                      "description": "__Mandatory__. The account holder name.",
                      "example": "Tempus Risus Company"
                  }
              }
          },
          "EnrichedTransaction": {
              "description": "Details of the transaction, identified by Yapily data services.",
              "properties": {
                  "transactionId": {
                      "type": "string",
                      "description": "Unique identifier of the transaction",
                      "example": "c51e3bee-36fb-4c0a-8441-d6ba2056fe87"
                  },
                  "transactionInformation": {
                      "type": "string",
                      "description": "Information for the transaction",
                      "example": "Amazon Marketplace"
                  },
                  "amount": {
                      "example": 21.99,
                      "type": "number",
                      "description": "Monetary amount."
                  },
                  "institution": {
                      "type": "string",
                      "description": "The `Institution` that the transaction is sent to.",
                      "example": "starling"
                  },
                  "bookingDateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of when a transaction entry occured and was posted to the account servicer's books.",
                      "example": "2020-04-24T00:30:19.951Z"
                  }
              }
          },
          "EnrichedWrapper": {
              "description": "Details of income and expenditure streams, identified by Yapily data services.",
              "required": [
                  "incomeStreams",
                  "expenditureStreams",
                  "recentlyTerminatedIncomeStreams",
                  "recentlyTerminatedExpenditureStreams"
              ],
              "properties": {
                  "incomeStreams": {
                      "type": "array",
                      "description": "Lists all possible income streams identified for the `Application User`.",
                      "items": {
                          "$ref": "#/components/schemas/TransactionStream"
                      }
                  },
                  "expenditureStreams": {
                      "type": "array",
                      "description": "Lists all possible expenditure streams identified for the `Application User`.",
                      "items": {
                          "$ref": "#/components/schemas/TransactionStream"
                      }
                  },
                  "recentlyTerminatedIncomeStreams": {
                      "type": "array",
                      "description": "A list of terminated transaction income streams",
                      "items": {
                          "$ref": "#/components/schemas/TerminatedTransactionStream"
                      }
                  },
                  "recentlyTerminatedExpenditureStreams": {
                      "type": "array",
                      "description": "A list of terminated transaction expenditure streams",
                      "items": {
                          "$ref": "#/components/schemas/TerminatedTransactionStream"
                      }
                  }
              },
              "type": "object"
          },
          "Enrichment": {
              "type": "object",
              "description": "Enriched data that has been derived by Yapily using it's data processing and machine learning techniques.",
              "properties": {
                  "categorisation": {
                      "$ref": "#/components/schemas/Categorisation"
                  },
                  "transactionHash": {
                      "$ref": "#/components/schemas/TransactionHash"
                  },
                  "cleansedDescription": {
                      "type": "string",
                      "description": "Cleaned version of the `Transaction Description` that removes miscellaneous, generic and unhelpful text."
                  },
                  "merchant": {
                      "$ref": "#/components/schemas/EnrichmentMerchant"
                  },
                  "location": {
                      "type": "string",
                      "description": "The location of where the transaction took place."
                  },
                  "paymentProcessor": {
                      "type": "string",
                      "description": "A payment provider that manages (credit/debit) transactions between the `Institution` and the merchant."
                  },
                  "correctedDate": {
                      "type": "string",
                      "description": "The likely date and time on which the transaction took place. This is distinct from `Booking Date Time` which usually refers to the post-clearing value.",
                      "format": "date-time"
                  }
              }
          },
          "EnrichmentMerchant": {
              "type": "object",
              "description": "Details of the merchant, identified by Yapily data services.",
              "properties": {
                  "merchantName": {
                      "type": "string",
                      "description": "The name of the indivdual merchant involved in the transaction e.g. (TESCO Petrol)."
                  },
                  "parentGroup": {
                      "type": "string",
                      "description": "The parent organisation that the merchant belongs to e.g. (TESCO)."
                  }
              }
          },
          "EnvironmentType": {
              "type": "string",
              "description": "The environment type. <br><br>See [Institution Configuration](https://docs.yapily.com/pages/key-concepts/institutions/#configuration) for more information",
              "enum": [
                  "SANDBOX",
                  "MOCK",
                  "LIVE"
              ]
          },
          "ExchangeRateInformation": {
              "required": [
                  "rateType",
                  "unitCurrency"
              ],
              "type": "object",
              "properties": {
                  "unitCurrency": {
                      "type": "string",
                      "description": "__Mandatory__. The currency in which the rate of exchange is expressed in a currency exchange. In the example 1GBP = xxxCUR, the unit currency is `GBP`."
                  },
                  "rate": {
                      "type": "number",
                      "description": "__Optional__. The factor used for conversion of an amount from one currency to another. This reflects the price at which one currency was bought with another currency."
                  },
                  "rateType": {
                      "$ref": "#/components/schemas/RateTypeEnum"
                  },
                  "foreignExchangeContractReference": {
                      "type": "string",
                      "description": "__Optional__. The unique and unambiguous reference to the foreign exchange contract agreed between the initiating party/creditor and the debtor agent."
                  }
              },
              "description": "__Optional__. Used to provide details on the currency exchange rate and contract."
          },
          "ExchangeRateInformationResponse": {
              "required": [
                  "rateType",
                  "unitCurrency"
              ],
              "type": "object",
              "properties": {
                  "unitCurrency": {
                      "type": "string",
                      "description": "__Mandatory__. The currency in which the rate of exchange is expressed in a currency exchange. In the example 1GBP = xxxCUR, the unit currency is `GBP`."
                  },
                  "rate": {
                      "type": "number",
                      "description": "__Optional__. The factor used for conversion of an amount from one currency to another. This reflects the price at which one currency was bought with another currency."
                  },
                  "rateType": {
                      "$ref": "#/components/schemas/RateTypeEnum"
                  },
                  "foreignExchangeContractReference": {
                      "type": "string",
                      "description": "__Optional__. The unique and unambiguous reference to the foreign exchange contract agreed between the initiating party/creditor and the debtor agent."
                  },
                  "exchangeRateExpiryDate": {
                      "type": "string",
                      "format": "date-time"
                  }
              }
          },
          "FeatureDetails": {
              "type": "object",
              "description": "Features that an individual `Institution` may support. ",
              "properties": {
                  "feature": {
                      "$ref": "#/components/schemas/FeatureEnum"
                  },
                  "endpoint": {
                      "type": "string",
                      "description": "Endpoints that are associated with the feature e.g. (available for use if an Institution supports a feature)."
                  },
                  "documentationUrl": {
                      "type": "string",
                      "description": "The link to further documentation regarding the feature."
                  }
              }
          },
          "ApiListResponseOfDirectDebitResponse": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseListMeta"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/DirectDebitResponse"
                      }
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "forwardedData": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ResponseForwardedData"
                      }
                  },
                  "raw": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RawResponse"
                      }
                  },
                  "paging": {
                      "$ref": "#/components/schemas/FilteredClientPayloadListDirectDebitResponse"
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  }
              }
          },
          "ApiListResponseOfFeatureDetails": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseListMeta"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/FeatureDetails"
                      }
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "forwardedData": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ResponseForwardedData"
                      }
                  },
                  "raw": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RawResponse"
                      }
                  },
                  "paging": {
                      "$ref": "#/components/schemas/FilteredClientPayloadListFeatureDetails"
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  }
              }
          },
          "FeatureEnum": {
              "type": "string",
              "description": "Used to describe what functions are supported by the associated `Institution`.        <br><br>For more information on each feature, see the following links:        <ul>          <li>[Financial Data Features](https://docs.yapily.com/pages/key-concepts/account-data/account-features/)</li>          <li>[Payments Features](https://docs.yapily.com/pages/key-concepts/payments/payment-features/)</li>        </ul>",
              "enum": [
                  "INITIATE_PRE_AUTHORISATION",
                  "INITIATE_PRE_AUTHORISATION_ACCOUNTS",
                  "INITIATE_PRE_AUTHORISATION_PAYMENTS",
                  "INITIATE_ACCOUNT_REQUEST",
                  "INITIATE_EMBEDDED_ACCOUNT_REQUEST",
                  "ACCOUNT_REQUEST_DETAILS",
                  "ACCOUNTS",
                  "ACCOUNT",
                  "ACCOUNT_TRANSACTIONS",
                  "ACCOUNT_STATEMENTS",
                  "ACCOUNT_STATEMENT",
                  "ACCOUNT_STATEMENT_FILE",
                  "ACCOUNT_SCHEDULED_PAYMENTS",
                  "ACCOUNT_DIRECT_DEBITS",
                  "ACCOUNT_PERIODIC_PAYMENTS",
                  "ACCOUNT_TRANSACTIONS_WITH_MERCHANT",
                  "IDENTITY",
                  "ACCOUNTS_WITHOUT_BALANCE",
                  "ACCOUNT_WITHOUT_BALANCE",
                  "ACCOUNT_BALANCES",
                  "INITIATE_SINGLE_PAYMENT_SORTCODE",
                  "EXISTING_PAYMENT_INITIATION_DETAILS",
                  "CREATE_SINGLE_PAYMENT_SORTCODE",
                  "EXISTING_PAYMENTS_DETAILS",
                  "INITIATE_DOMESTIC_SINGLE_PAYMENT",
                  "INITIATE_EMBEDDED_DOMESTIC_SINGLE_PAYMENT",
                  "CREATE_DOMESTIC_SINGLE_PAYMENT",
                  "INITIATE_EMBEDDED_BULK_PAYMENT",
                  "INITIATE_DOMESTIC_SINGLE_INSTANT_PAYMENT",
                  "CREATE_DOMESTIC_SINGLE_INSTANT_PAYMENT",
                  "INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT",
                  "CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT",
                  "INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_SWEEPING",
                  "INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_NONSWEEPING",
                  "CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_SWEEPING",
                  "CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_NONSWEEPING",
                  "INITIATE_DOMESTIC_SCHEDULED_PAYMENT",
                  "CREATE_DOMESTIC_SCHEDULED_PAYMENT",
                  "INITIATE_DOMESTIC_PERIODIC_PAYMENT",
                  "CREATE_DOMESTIC_PERIODIC_PAYMENT",
                  "PERIODIC_PAYMENT_FREQUENCY_EXTENDED",
                  "INITIATE_INTERNATIONAL_SCHEDULED_PAYMENT",
                  "CREATE_INTERNATIONAL_SCHEDULED_PAYMENT",
                  "INITIATE_INTERNATIONAL_PERIODIC_PAYMENT",
                  "CREATE_INTERNATIONAL_PERIODIC_PAYMENT",
                  "INITIATE_INTERNATIONAL_SINGLE_PAYMENT",
                  "CREATE_INTERNATIONAL_SINGLE_PAYMENT",
                  "INITIATE_BULK_PAYMENT",
                  "CREATE_BULK_PAYMENT",
                  "TRANSFER",
                  "OPEN_DATA_PERSONAL_CURRENT_ACCOUNTS",
                  "OPEN_DATA_ATMS",
                  "READ_DOMESTIC_SINGLE_REFUND",
                  "READ_DOMESTIC_SCHEDULED_REFUND",
                  "READ_DOMESTIC_PERIODIC_PAYMENT_REFUND",
                  "READ_INTERNATIONAL_SINGLE_REFUND",
                  "READ_INTERNATIONAL_SCHEDULED_REFUND",
                  "ACCOUNT_BENEFICIARIES",
                  "INITIATE_ONETIME_PRE_AUTHORISATION_PAYMENTS",
                  "INITIATE_ONETIME_PRE_AUTHORISATION_ACCOUNTS",
                  "INITIATE_ONETIME_PRE_AUTHORISATION",
                  "VARIABLE_RECURRING_PAYMENT_FUNDS_CONFIRMATION"
              ]
          },
          "FilterAndSort": {
              "type": "object",
              "properties": {
                  "from": {
                      "type": "string",
                      "description": "__Optional__. The earliest date and time of resources / records that should be returned.",
                      "format": "date-time"
                  },
                  "before": {
                      "type": "string",
                      "description": "__Optional__. The latest date and time of resources / records that should be returned.",
                      "format": "date-time"
                  },
                  "limit": {
                      "type": "integer",
                      "description": "__Optional__. The maximum number of resources / records that should be returned.",
                      "format": "int32"
                  },
                  "sort": {
                      "$ref": "#/components/schemas/SortEnum"
                  },
                  "offset": {
                      "type": "integer",
                      "format": "int32"
                  },
                  "cursor": {
                      "type": "string"
                  }
              }
          },
          "FilteredClientPayloadListAccount": {
              "type": "object",
              "properties": {
                  "apiCall": {
                      "$ref": "#/components/schemas/ApiCall"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/Account"
                      }
                  },
                  "nextCursorHash": {
                      "type": "string"
                  },
                  "nextLink": {
                      "type": "string"
                  },
                  "pagingMap": {
                      "type": "object",
                      "additionalProperties": {
                          "$ref": "#/components/schemas/FilterAndSort"
                      }
                  },
                  "totalCount": {
                      "type": "integer",
                      "format": "int64"
                  }
              }
          },
          "FilteredClientPayloadListAccountStatement": {
              "type": "object",
              "properties": {
                  "apiCall": {
                      "$ref": "#/components/schemas/ApiCall"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/AccountStatement"
                      }
                  },
                  "nextCursorHash": {
                      "type": "string"
                  },
                  "nextLink": {
                      "type": "string"
                  },
                  "pagingMap": {
                      "type": "object",
                      "additionalProperties": {
                          "$ref": "#/components/schemas/FilterAndSort"
                      }
                  },
                  "totalCount": {
                      "type": "integer",
                      "format": "int64"
                  }
              }
          },
          "FilteredClientPayloadListCategory": {
              "type": "object",
              "properties": {
                  "apiCall": {
                      "$ref": "#/components/schemas/ApiCall"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/Category"
                      }
                  },
                  "nextCursorHash": {
                      "type": "string"
                  },
                  "nextLink": {
                      "type": "string"
                  },
                  "pagingMap": {
                      "type": "object",
                      "additionalProperties": {
                          "$ref": "#/components/schemas/FilterAndSort"
                      }
                  },
                  "totalCount": {
                      "type": "integer",
                      "format": "int64"
                  }
              }
          },
          "FilteredClientPayloadListConsent": {
              "type": "object",
              "properties": {
                  "apiCall": {
                      "$ref": "#/components/schemas/ApiCall"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/Consent"
                      }
                  },
                  "nextCursorHash": {
                      "type": "string"
                  },
                  "nextLink": {
                      "type": "string"
                  },
                  "pagingMap": {
                      "type": "object",
                      "additionalProperties": {
                          "$ref": "#/components/schemas/FilterAndSort"
                      }
                  },
                  "totalCount": {
                      "type": "integer",
                      "format": "int64"
                  }
              }
          },
          "FilteredClientPayloadListDirectDebitResponse": {
              "type": "object",
              "properties": {
                  "apiCall": {
                      "$ref": "#/components/schemas/ApiCall"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/DirectDebitResponse"
                      }
                  },
                  "nextCursorHash": {
                      "type": "string"
                  },
                  "nextLink": {
                      "type": "string"
                  },
                  "pagingMap": {
                      "type": "object",
                      "additionalProperties": {
                          "$ref": "#/components/schemas/FilterAndSort"
                      }
                  },
                  "totalCount": {
                      "type": "integer",
                      "format": "int64"
                  }
              }
          },
          "FilteredClientPayloadListFeatureDetails": {
              "type": "object",
              "properties": {
                  "apiCall": {
                      "$ref": "#/components/schemas/ApiCall"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/FeatureDetails"
                      }
                  },
                  "nextCursorHash": {
                      "type": "string"
                  },
                  "nextLink": {
                      "type": "string"
                  },
                  "pagingMap": {
                      "type": "object",
                      "additionalProperties": {
                          "$ref": "#/components/schemas/FilterAndSort"
                      }
                  },
                  "totalCount": {
                      "type": "integer",
                      "format": "int64"
                  }
              }
          },
          "FilteredClientPayloadListInstitution": {
              "type": "object",
              "properties": {
                  "apiCall": {
                      "$ref": "#/components/schemas/ApiCall"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/Institution"
                      }
                  },
                  "nextCursorHash": {
                      "type": "string"
                  },
                  "nextLink": {
                      "type": "string"
                  },
                  "pagingMap": {
                      "type": "object",
                      "additionalProperties": {
                          "$ref": "#/components/schemas/FilterAndSort"
                      }
                  },
                  "totalCount": {
                      "type": "integer",
                      "format": "int64"
                  }
              }
          },
          "FilteredClientPayloadListPaymentResponse": {
              "type": "object",
              "properties": {
                  "apiCall": {
                      "$ref": "#/components/schemas/ApiCall"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PaymentResponse"
                      }
                  },
                  "nextCursorHash": {
                      "type": "string"
                  },
                  "nextLink": {
                      "type": "string"
                  },
                  "pagingMap": {
                      "type": "object",
                      "additionalProperties": {
                          "$ref": "#/components/schemas/FilterAndSort"
                      }
                  },
                  "totalCount": {
                      "type": "integer",
                      "format": "int64"
                  }
              }
          },
          "FilteredClientPayloadListTransaction": {
              "type": "object",
              "properties": {
                  "apiCall": {
                      "$ref": "#/components/schemas/ApiCall"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/Transaction"
                      }
                  },
                  "nextCursorHash": {
                      "type": "string"
                  },
                  "nextLink": {
                      "type": "string"
                  },
                  "pagingMap": {
                      "type": "object",
                      "additionalProperties": {
                          "$ref": "#/components/schemas/FilterAndSort"
                      }
                  },
                  "totalCount": {
                      "type": "integer",
                      "format": "int64"
                  }
              }
          },
          "FinancialProfile": {
              "description": "A financial profile for a User.",
              "properties": {
                  "status": {
                      "example": "COMPLETED",
                      "type": "string",
                      "description": "The status, can be EMPTY, PARTIAL, PENDING, COMPLETED or ERROR."
                  },
                  "profileConsents": {
                      "type": "array",
                      "description": "A list of ProfileConsent used in the financial profile.",
                      "items": {
                          "$ref": "#/components/schemas/ProfileConsent"
                      }
                  },
                  "enrichment": {
                      "$ref": "#/components/schemas/EnrichedWrapper"
                  }
              },
              "type": "object"
          },
          "FrequencyEnumExtended": {
              "type": "string",
              "description": "__Mandatory__. See [payment frequency](/guides/payments/payment-execution/periodic-payments/#payment-frequency) for more information",
              "enum": [
                  "DAILY",
                  "EVERY_WORKING_DAY",
                  "CALENDAR_DAY",
                  "WEEKLY",
                  "EVERY_TWO_WEEKS",
                  "MONTHLY",
                  "EVERY_TWO_MONTHS",
                  "QUARTERLY",
                  "SEMIANNUAL",
                  "ANNUAL"
              ]
          },
          "FrequencyRequest": {
              "required": [
                  "type"
              ],
              "type": "object",
              "properties": {
                  "type": {
                      "$ref": "#/components/schemas/FrequencyEnumExtended"
                  },
                  "intervalWeek": {
                      "type": "integer",
                      "description": "__Conditional__. See [payment frequency](/guides/payments/payment-execution/periodic-payments/#payment-frequency) for more information",
                      "format": "int32",
                      "example": 1
                  },
                  "intervalMonth": {
                      "type": "integer",
                      "description": "__Conditional__. See [payment frequency](/guides/payments/payment-execution/periodic-payments/#payment-frequency) for more information",
                      "format": "int32",
                      "example": 1
                  },
                  "executionDay": {
                      "type": "integer",
                      "description": "__Conditional__. See [payment frequency](/guides/payments/payment-execution/periodic-payments/#payment-frequency) for more information",
                      "format": "int32",
                      "example": 1
                  }
              },
              "description": "__Mandatory__. Defines the intervals at which payment should be made."
          },
          "FrequencyResponse": {
              "type": "object",
              "description": "__Mandatory__. Defines the intervals at which payment should be made.",
              "properties": {
                  "frequencyType": {
                      "$ref": "#/components/schemas/FrequencyEnumExtended"
                  },
                  "intervalWeek": {
                      "type": "integer",
                      "description": "The weekly intervals at which a payment will be made. e.g. 1 = Every months, 2 = Every 2 months.",
                      "format": "int32"
                  },
                  "intervalMonth": {
                      "type": "integer",
                      "description": "The monthly intervals at which a payment will be made. e.g. 1 = Every month, 2 = Every 2 months",
                      "format": "int32"
                  },
                  "executionDay": {
                      "type": "integer",
                      "description": "The day on which a payment will be made, according to the weekly or monthly interval.",
                      "format": "int32"
                  }
              }
          },
          "Identity": {
              "type": "object",
              "description": "Identification details of a party associated with an account e.g. (account owner or operator).",
              "properties": {
                  "id": {
                      "type": "string"
                  },
                  "firstName": {
                      "type": "string"
                  },
                  "lastName": {
                      "type": "string"
                  },
                  "fullName": {
                      "type": "string"
                  },
                  "gender": {
                      "type": "string"
                  },
                  "birthdate": {
                      "type": "string"
                  },
                  "email": {
                      "type": "string"
                  },
                  "phone": {
                      "type": "string"
                  },
                  "addresses": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/IdentityAddress"
                      }
                  }
              }
          },
          "IdentityAddress": {
              "type": "object",
              "properties": {
                  "addressLines": {
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "city": {
                      "type": "string"
                  },
                  "postalCode": {
                      "type": "string"
                  },
                  "country": {
                      "type": "string"
                  },
                  "streetName": {
                      "type": "string"
                  },
                  "buildingNumber": {
                      "type": "string"
                  },
                  "type": {
                      "$ref": "#/components/schemas/AddressTypeEnum"
                  },
                  "county": {
                      "type": "string"
                  }
              }
          },
          "ApiResponseOfIdentity": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "$ref": "#/components/schemas/Identity"
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "forwardedData": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ResponseForwardedData"
                      }
                  },
                  "raw": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RawResponse"
                      }
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  }
              }
          },
          "Institution": {
              "type": "object",
              "description": "Typically, a bank or business unit within a bank e.g. (AIB Business, AIB Ireland, AIB UK).",
              "properties": {
                  "id": {
                      "type": "string",
                      "description": "Unique identifier for the `Institution`."
                  },
                  "name": {
                      "type": "string",
                      "description": "The friendly name of the `Institution`."
                  },
                  "fullName": {
                      "type": "string",
                      "description": "The full name of the `Institution`."
                  },
                  "countries": {
                      "uniqueItems": true,
                      "type": "array",
                      "description": "An array of `Country` denoting which regions the `Institution` provides coverage for",
                      "items": {
                          "$ref": "#/components/schemas/Country"
                      }
                  },
                  "environmentType": {
                      "$ref": "#/components/schemas/EnvironmentType"
                  },
                  "credentialsType": {
                      "$ref": "#/components/schemas/CredentialsType"
                  },
                  "media": {
                      "uniqueItems": true,
                      "type": "array",
                      "description": "Contains links to the logo and the icons for the `Institution`",
                      "items": {
                          "$ref": "#/components/schemas/Media"
                      }
                  },
                  "features": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/FeatureEnum"
                      }
                  }
              }
          },
          "ApiListResponseOfInstitution": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseListMeta"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/Institution"
                      }
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "forwardedData": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ResponseForwardedData"
                      }
                  },
                  "raw": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RawResponse"
                      }
                  },
                  "paging": {
                      "$ref": "#/components/schemas/FilteredClientPayloadListInstitution"
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  }
              }
          },
          "InstitutionConsent": {
              "type": "object",
              "description": "`Institution` authorised consents which are currently in place for the `Application User`.",
              "properties": {
                  "institutionId": {
                      "type": "string",
                      "description": "__Mandatory__. The `Institution` the authorisation request is sent to."
                  }
              }
          },
          "InstitutionError": {
              "type": "object",
              "description": "Raw error details provided by the `Institution`, when it was the error source.",
              "properties": {
                  "errorMessage": {
                      "type": "string",
                      "description": "Textual description of the `Institution` error."
                  },
                  "httpStatusCode": {
                      "type": "integer",
                      "description": "Numeric HTTP status code associated with the `Institution` error.",
                      "format": "int32"
                  }
              }
          },
          "InternationalPaymentRequest": {
              "required": [
                  "currencyOfTransfer"
              ],
              "type": "object",
              "properties": {
                  "currencyOfTransfer": {
                      "type": "string",
                      "description": "__Mandatory__. The currency to be transferred to the payee. This may differ from the currency the payment is denoted in and the currency of the payer's account. Specified as a 3-letter code (ISO 4217)."
                  },
                  "exchangeRateInformation": {
                      "$ref": "#/components/schemas/ExchangeRateInformation"
                  },
                  "purpose": {
                      "type": "string",
                      "description": "__Optional__. Used to indicate the external purpose as a [ISO20022 purpose code](https://www.rba.hr/documents/20182/183267/External+purpose+codes+list/8a28f888-1f83-5e29-d6ed-fce05f428689?version=1.1) value."
                  },
                  "priority": {
                      "$ref": "#/components/schemas/PriorityCodeEnum"
                  },
                  "chargeBearer": {
                      "$ref": "#/components/schemas/ChargeBearerType"
                  }
              },
              "description": "__Conditional__. Used to specify properties to define an international payment. <br><br>Must be specified when the payment `type` is one of the following:<ul>     <li><code>INTERNATIONAL_SINGLE_PAYMENT</code></li>     <li><code>INTERNATIONAL_SCHEDULED_PAYMENT</code></li>     <li><code>INTERNATIONAL_PERIODIC_PAYMENT</code></li></ul>"
          },
          "IsoBankTransactionCode": {
              "type": "object",
              "description": "Defines the underlying transaction type (e.g. Card or Debit Transactions, Loans or Mortages). <br><br> Conforms to `ISO` standards - ISO 20022.",
              "properties": {
                  "domainCode": {
                      "$ref": "#/components/schemas/IsoCodeDetails"
                  },
                  "familyCode": {
                      "$ref": "#/components/schemas/IsoCodeDetails"
                  },
                  "subFamilyCode": {
                      "$ref": "#/components/schemas/IsoCodeDetails"
                  }
              }
          },
          "IsoCodeDetails": {
              "type": "object",
              "description": "__Mandatory__. Details the identification of the ISO code.",
              "properties": {
                  "code": {
                      "default": "UNKNOWN",
                      "description": "__Mandatory__. Unique identifier of the ISO code.",
                      "type": "string"
                  },
                  "name": {
                      "default": "UNKNOWN",
                      "description": "__Mandatory__. Name of the ISO Code.",
                      "type": "string"
                  }
              }
          },
          "Media": {
              "type": "object",
              "properties": {
                  "source": {
                      "type": "string",
                      "description": "__Mandatory__. URL from where the media can be retrieved."
                  },
                  "type": {
                      "type": "string",
                      "description": "__Mandatory__. The type of media e.g. (logo, icon)."
                  }
              },
              "description": "Details of the media held for the `Institution`"
          },
          "Merchant": {
              "type": "object",
              "description": "Details of the merchant involved in the transaction.",
              "properties": {
                  "merchantName": {
                      "type": "string",
                      "description": "The name of the merchant involved in the transaction."
                  },
                  "merchantCategoryCode": {
                      "type": "string",
                      "description": "Defines the underlying services and goods that the merchant provides. Specified as a 3-letter ISO 18245 code "
                  }
              }
          },
          "MultiAuthorisation": {
              "type": "object",
              "description": "Details the additional levels of authorisation which are required from, and being managed by, the `Institution`.",
              "properties": {
                  "status": {
                      "type": "string",
                      "description": "_Mandatory_. Specifies the current status of the multi-authorisation flow."
                  },
                  "numberOfAuthorisationRequired": {
                      "type": "integer",
                      "description": "__Mandatory__. Total number of authorisations required.",
                      "format": "int32"
                  },
                  "numberOfAuthorisationReceived": {
                      "type": "integer",
                      "description": "__Mandatory__. The total number of authorisations that have been recieved.",
                      "format": "int32"
                  },
                  "lastUpdatedDateTime": {
                      "type": "string",
                      "description": "__Mandatory__. Date and time of when the authorisation was last updated.",
                      "format": "date-time"
                  },
                  "expirationDateTime": {
                      "type": "string",
                      "description": "__Mandatory__. Date and time by when the authorisation flow must be completed before it expires and the authorisation request is terminated.",
                      "format": "date-time"
                  }
              }
          },
          "NewApplicationUser": {
              "type": "object",
              "description": "Details of a new user to be created for the application.",
              "properties": {
                  "applicationUserId": {
                      "type": "string",
                      "description": "__Optional__. The unique identifier of the `Application User` assigned by the Application Owner.",
                      "example": "user-234562290"
                  },
                  "referenceId": {
                      "type": "string",
                      "description": "__Deprecated__. A non-unique reference Id for the `Application User`."
                  }
              }
          },
          "Next": {
              "type": "object",
              "properties": {
                  "from": {
                      "type": "string",
                      "format": "date-time"
                  },
                  "before": {
                      "type": "string",
                      "format": "date-time"
                  },
                  "limit": {
                      "type": "integer",
                      "format": "int32"
                  },
                  "cursor": {
                      "type": "string"
                  }
              }
          },
          "OneTimeTokenRequest": {
              "required": [
                  "oneTimeToken"
              ],
              "type": "object",
              "properties": {
                  "oneTimeToken": {
                      "type": "string",
                      "description": "__Mandatory__. The one time token to exchange for a consent token.",
                      "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJJTlNUSVRVVElPTiI6ImJidmEtc2FuZGJveCIsIlVVSUQiOiJmMzNmNGU4ZC1jMDQ0LTQ2YTktOTlkMC0wYmRlMzIyYTJjOTIifQ.4Qv3NJI6av2nKi1U3aNmm71cIwJ3TvRsIlYDafQUVv_Khy_e-8oEpV_BoP4V1CII12oT-Yq4cPveHILz8BOwjg"
                  }
              },
              "description": "The request body containing the `OneTimeTokenRequest` json payload"
          },
          "Pagination": {
              "type": "object",
              "properties": {
                  "totalCount": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "self": {
                      "$ref": "#/components/schemas/FilterAndSort"
                  },
                  "next": {
                      "$ref": "#/components/schemas/Next"
                  }
              }
          },
          "Payee": {
              "title": "Payee Details",
              "type": "object",
              "description": "__Mandatory__. Details of the beneficiary [person or business].",
              "required": [
                  "accountIdentifications",
                  "name"
              ],
              "properties": {
                  "name": {
                      "title": "Payee Name",
                      "type": "string",
                      "description": "__Mandatory__. The account holder name of the beneficiary.",
                      "example": "Jane Doe"
                  },
                  "accountIdentifications": {
                      "uniqueItems": true,
                      "type": "array",
                      "description": "__Mandatory__. The account identifications that identify the `Payee` bank account.",
                      "example": [
                          {
                              "identification": "401016",
                              "type": "SORT_CODE"
                          },
                          {
                              "identification": "71518920",
                              "type": "ACCOUNT_NUMBER"
                          }
                      ],
                      "items": {
                          "$ref": "#/components/schemas/AccountIdentification"
                      }
                  },
                  "accountType": {
                      "$ref": "#/components/schemas/PayeeAccountType"
                  },
                  "address": {
                      "$ref": "#/components/schemas/Address"
                  },
                  "merchantId": {
                      "title": "Merchant Id",
                      "type": "string",
                      "description": "__Optional__. The merchant ID is a unique code provided by the payment processor to the merchant.",
                      "example": "24589303"
                  },
                  "merchantCategoryCode": {
                      "title": "Merchant Category",
                      "type": "string",
                      "description": "__Optional__. The category code of the merchant in case the `Payee` is a business. Specified as a 3-letter ISO 18245 code.",
                      "example": "5551"
                  }
              }
          },
          "PayeeDetailsResponse": {
              "title": "Payee Details",
              "type": "object",
              "description": " Details of the beneficiary [person or business].",
              "properties": {
                  "name": {
                      "title": "Payee Name",
                      "type": "string",
                      "description": "The account holder name of the beneficiary.",
                      "example": "Jane Doe"
                  },
                  "accountIdentifications": {
                      "uniqueItems": true,
                      "type": "array",
                      "description": "The account identifications that identify the `Payee` bank account.",
                      "example": [
                          {
                              "identification": "401016",
                              "type": "SORT_CODE"
                          },
                          {
                              "identification": "71518920",
                              "type": "ACCOUNT_NUMBER"
                          }
                      ],
                      "items": {
                          "$ref": "#/components/schemas/AccountIdentificationResponse"
                      }
                  },
                  "address": {
                      "$ref": "#/components/schemas/AddressResponse"
                  },
                  "merchantId": {
                      "title": "Merchant Id",
                      "type": "string",
                      "description": "The merchant ID is a unique code provided by the payment processor to the merchant.",
                      "example": "24589303"
                  },
                  "merchantCategoryCode": {
                      "title": "Merchant Category",
                      "type": "string",
                      "description": "The category code of the merchant in case the `Payee` is a business. Specified as a 3-letter ISO 18245 code.",
                      "example": "5551"
                  }
              }
          },
          "PayeeDetails": {
              "type": "object",
              "required": [
                  "accountIdentifications",
                  "name",
                  "country"
              ],
              "properties": {
                  "name": {
                      "type": "string",
                      "description": "__Mandatory__. The account holder name of the beneficiary.",
                      "example": "Jane Doe"
                  },
                  "accountIdentifications": {
                      "uniqueItems": true,
                      "type": "array",
                      "description": "__Mandatory__. The account identifications that identify the `Payee` bank account.",
                      "example": [
                          {
                              "identification": "IBUK123456789",
                              "type": "IBAN"
                          }
                      ],
                      "items": {
                          "$ref": "#/components/schemas/AccountIdentification"
                      }
                  },
                  "country": {
                      "type": "string",
                      "description": "__Conditional__. The 2-letter ISO 3166 country code for the address. <br><br>An `Institution` may require you to specify the `country` when used in the context of the `Payee` to be able to make a payment",
                      "example": "GB"
                  }
              },
              "description": "__Mandatory__. Details of the beneficiary [person or business]."
          },
          "Payer": {
              "title": "Payer Details",
              "required": [
                  "accountIdentifications"
              ],
              "type": "object",
              "properties": {
                  "name": {
                      "title": "Payer Name",
                      "type": "string",
                      "description": "The account holder name of the Payer.",
                      "example": "John Doe"
                  },
                  "accountIdentifications": {
                      "uniqueItems": true,
                      "type": "array",
                      "description": "__Mandatory__. The account identifications that identify the `Payer` bank account.",
                      "items": {
                          "$ref": "#/components/schemas/AccountIdentification"
                      }
                  },
                  "address": {
                      "$ref": "#/components/schemas/Address"
                  }
              },
              "description": "__Conditional__. Details of the benefactor [person or business]."
          },
          "HostedVrpPayerResponse": {
              "title": "Payer Details",
              "required": [
                  "accountIdentifications"
              ],
              "type": "object",
              "properties": {
                  "name": {
                      "title": "Payer Name",
                      "type": "string",
                      "description": "The account holder name of the Payer.",
                      "example": "John Doe"
                  },
                  "accountIdentifications": {
                      "uniqueItems": true,
                      "type": "array",
                      "description": "__Mandatory__. The account identifications that identify the `Payer` bank account.",
                      "items": {
                          "$ref": "#/components/schemas/HostedVrpAccountIdentification"
                      }
                  },
                  "address": {
                      "$ref": "#/components/schemas/Address"
                  }
              },
              "description": "__Conditional__. Details of the benefactor [person or business]."
          },
          "PayerDetailsResponse": {
              "title": "Payer Details",
              "type": "object",
              "properties": {
                  "name": {
                      "title": "Payer Name",
                      "type": "string",
                      "description": "The account holder name of the Payer.",
                      "example": "John Doe"
                  },
                  "accountIdentifications": {
                      "uniqueItems": true,
                      "type": "array",
                      "description": "The account identifications that identify the `Payer` bank account.",
                      "items": {
                          "$ref": "#/components/schemas/AccountIdentificationResponse"
                      }
                  },
                  "address": {
                      "$ref": "#/components/schemas/AddressResponse"
                  }
              },
              "description": "Details of the benefactor [person or business]."
          },
          "PayerDetails": {
              "required": [
                  "accountIdentifications"
              ],
              "type": "object",
              "properties": {
                  "accountIdentifications": {
                      "uniqueItems": true,
                      "type": "array",
                      "description": "__Mandatory__. The account identifications that identify the `Payer` bank account.",
                      "items": {
                          "$ref": "#/components/schemas/AccountIdentification"
                      }
                  }
              },
              "description": "__Conditional__. Details of the benefactor [person or business]."
          },
          "PaymentAuthorisationRequest": {
              "required": [
                  "institutionId",
                  "paymentRequest"
              ],
              "type": "object",
              "properties": {
                  "userUuid": {
                      "type": "string",
                      "format": "uuid"
                  },
                  "applicationUserId": {
                      "type": "string",
                      "description": "__Conditional__. The user-friendly reference to the `User` that will authorise the authorisation request. If a `User` with the specified `applicationUserId` exists, it will be used otherwise, a new `User` with the specified `applicationUserId` will be created and used. Either the `userUuid` or `applicationUserId` must be provided.",
                      "example": "user-234562290"
                  },
                  "forwardParameters": {
                      "type": "array",
                      "description": "Extra parameters the TPP may want to get forwarded in the callback request after the PSU redirect.",
                      "items": {
                          "type": "string"
                      }
                  },
                  "institutionId": {
                      "type": "string",
                      "description": "__Mandatory__. The reference to the `Institution` which identifies which institution the authorisation request is sent to.",
                      "example": "yapily-mock"
                  },
                  "callback": {
                      "type": "string",
                      "description": "__Optional__. The URL to redirect the user to after the user complete the authorisation at the `Institution`.",
                      "example": "https://display-parameters.com"
                  },
                  "redirect": {
                      "$ref": "#/components/schemas/RedirectRequest"
                  },
                  "oneTimeToken": {
                      "type": "boolean",
                      "description": "__Conditional__. Used to receive a `oneTimeToken` rather than a `consentToken` at the `callback` for additional security. This can only be used when the `callback` is set. <br><br>See [Using a callback with an OTT (Optional)](https://docs.yapily.com/pages/knowledge/yapily-concepts/callback_url/#using-a-callback-with-an-ott-optional) for more information.",
                      "example": false
                  },
                  "paymentRequest": {
                      "$ref": "#/components/schemas/PaymentRequest"
                  }
              },
              "description": "The request body containing an `PaymentAuthorisationRequest` json payload"
          },
          "PaymentAuthorisationRequestResponse": {
              "type": "object",
              "properties": {
                  "id": {
                      "type": "string",
                      "description": "Unique identifier for the payment authorisation request. <br><br>The `consentID` used to [retrieve a consent](/api/reference/#operation/getConsentById).",
                      "format": "uuid"
                  },
                  "userUuid": {
                      "type": "string",
                      "description": "The `User` that the authorisation request was created for.",
                      "format": "uuid"
                  },
                  "applicationUserId": {
                      "type": "string",
                      "description": "The user-friendly reference to the `User` that the authorisation request was created for."
                  },
                  "referenceId": {
                      "type": "string"
                  },
                  "institutionId": {
                      "type": "string",
                      "description": "The `Institution` the authorisation request was sent to."
                  },
                  "status": {
                      "$ref": "#/components/schemas/AuthorisationStatus"
                  },
                  "createdAt": {
                      "type": "string",
                      "description": "Date and time the consent was created.",
                      "format": "date-time"
                  },
                  "transactionFrom": {
                      "type": "string",
                      "description": "When performing a transaction query using the consent, this is the earliest date of transaction records that can be retrieved.",
                      "format": "date-time"
                  },
                  "transactionTo": {
                      "type": "string",
                      "description": "When performing a transaction query using the consent, this is the latest date of transaction records that can be retrieved.",
                      "format": "date-time"
                  },
                  "expiresAt": {
                      "type": "string",
                      "description": "Date and time the authorisation expires. Re-authorisation is needed to retain access.",
                      "format": "date-time"
                  },
                  "timeToExpireInMillis": {
                      "type": "integer",
                      "format": "int64",
                      "deprecated": true
                  },
                  "timeToExpire": {
                      "type": "string",
                      "format": "iso8601"
                  },
                  "featureScope": {
                      "uniqueItems": true,
                      "description": "The set of features the consent provides access to.",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/FeatureEnum"
                      }
                  },
                  "consentToken": {
                      "type": "string",
                      "description": "Represents the authorisation to gain access to the requested features. Required to make a payment request."
                  },
                  "state": {
                      "type": "string",
                      "description": "Correlation ID used with the `Institution` during the authorisation process."
                  },
                  "authorizedAt": {
                      "type": "string",
                      "description": "Date and time the request was authorised by the `Institution`.",
                      "format": "date-time"
                  },
                  "institutionConsentId": {
                      "type": "string",
                      "description": "Unique identifier of the consent assigned by the `Institution`."
                  },
                  "charges": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PaymentChargeDetails"
                      }
                  },
                  "exchangeRateInformation": {
                      "$ref": "#/components/schemas/ExchangeRateInformationResponse"
                  },
                  "authorisationUrl": {
                      "type": "string"
                  },
                  "qrCodeUrl": {
                      "type": "string",
                      "description": "The URL for a QR code that may be scanned via a mobile device to make a authorisation redirect to the bank (authURL encoded)."
                  },
                  "explanation": {
                      "type": "string",
                      "description": "Message from the `Institution` received by Yapily, detailing the next action the user is required to take. This is used only for Decoupled flows."
                  }
              }
          },
          "ApiResponseOfPaymentAuthorisationRequestResponse": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "$ref": "#/components/schemas/PaymentAuthorisationRequestResponse"
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "forwardedData": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ResponseForwardedData"
                      }
                  },
                  "raw": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RawResponse"
                      }
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  }
              }
          },
          "PaymentContextType": {
              "title": "Payment Code",
              "type": "string",
              "default": "OTHER",
              "description": "__Optional__. The payment context code. This defaults to `OTHER` if not specified.",
              "enum": [
                  "BILL",
                  "GOODS",
                  "SERVICES",
                  "OTHER",
                  "PERSON_TO_PERSON",
                  "BILL_IN_ADVANCE",
                  "BILL_IN_ARREARS",
                  "ECOMMERCE_MERCHANT",
                  "FACE_TO_FACE_POS",
                  "TRANSFER_TO_SELF",
                  "TRANSFER_TO_THIRD_PARTY",
                  "PISP_PAYEE"
              ]
          },
          "PaymentPurposeCode": {
              "title": "Payment Purpose Code",
              "type": "string",
              "description": "__Optional__. The payment purpose code. <br><br>Allowed values: INTP, DEPT, BEXP, LICF, SERV, SUPP, TRAD, SUBS, GDSV, ROYA, COMT, CHAR, ECPR, CLPR, INTE, LOAN, LOAR, INPC, INPR, INSC, INSU, LIFI, PPTI, HLRP, HLST, PDEP, IVPT, REBT, REFU, CDBL, CPKC, EDUC, FEES, GAMB, LOTT, GIFT, INSM, REOD, GOVT, TCSC, BLDM, RENT, DIVD, INVS, SAVG, HLTI, DNTS, LTCF, MDCS, VIEW, BECH, BENE, SSBE, PEFC, PENS, ADCS, BONU, COMM, SALA, ESTX, HSTX, INTX, PTXP, RDTX, TAXS, VATX, WHLD, TAXR, CBTV, ELEC, GASB, PHON, UBIL, WTER . <br><br>See [Payment Purpose code](https://docs.yapily.com/pages/payments/payments-resources/tri-pilot/) to see the definition of each code"
          },
          "PayeeAccountType": {
              "title": "Payee Account Type",
              "type": "string",
              "description": "__Optional__. The payee account type. <br><br>Allowed values: BUSINESS, BUSINESS_SAVING, CHARITY, COLLECTION, CORPORATE, E_WALLET, GOVERNMENT, INVESTMENT, INVESTMENT_ISA, JOINT_PERSONAL, PENSION, PERSONAL, PERSONAL_SAVING, PREMIER, WEALTH ."
          },
          "PaymentContextTypeV2": {
              "title": "Payment Code",
              "type": "string",
              "description": "__Optional__. The payment context code. Allowed values are [BILL_IN_ADVANCE, BILL_IN_ARREARS, ECOMMERCE_MERCHANT, FACE_TO_FACE_POS, TRANSFER_TO_SELF,TRANSFER_TO_THIRD_PARTY, PISP_PAYEE ]."
          },
          "PaymentContextTypeV2Response": {
              "title": "Payment Code",
              "type": "string",
              "default": "OTHER",
              "description": "The payment context code. Allowed values are [BILL_IN_ADVANCE, BILL_IN_ARREARS, ECOMMERCE_MERCHANT, FACE_TO_FACE_POS, TRANSFER_TO_SELF,TRANSFER_TO_THIRD_PARTY, PISP_PAYEE ]."
          },
          "PaymentContextTypeResponse": {
              "title": "Payment Code",
              "type": "string",
              "description": "The payment context code.",
              "enum": [
                  "BILL",
                  "GOODS",
                  "SERVICES",
                  "OTHER",
                  "PERSON_TO_PERSON"
              ]
          },
          "PaymentEmbeddedAuthorisationRequest": {
              "required": [
                  "institutionId",
                  "paymentRequest"
              ],
              "type": "object",
              "properties": {
                  "userUuid": {
                      "type": "string",
                      "format": "uuid"
                  },
                  "applicationUserId": {
                      "type": "string",
                      "description": "__Conditional__. The user-friendly reference to the `User` that will authorise the authorisation request. If a `User` with the specified `applicationUserId` exists, it will be used otherwise, a new `User` with the specified `applicationUserId` will be created and used. Either the `userUuid` or `applicationUserId` must be provided.",
                      "example": "user-234562290"
                  },
                  "institutionId": {
                      "type": "string",
                      "description": "__Mandatory__. The reference to the `Institution` which identifies which institution the authorisation request is sent to.",
                      "example": "yapily-mock"
                  },
                  "callback": {
                      "type": "string",
                      "description": "__Optional__. The server to redirect the user to after the user complete the authorisation at the `Institution`. <br><br>See [Using a callback (Optional)](https://docs.yapily.com/pages/knowledge/yapily-concepts/callback_url/#using-a-callback-optional) for more information.",
                      "example": "https://display-parameters.com"
                  },
                  "redirect": {
                      "$ref": "#/components/schemas/RedirectRequest"
                  },
                  "oneTimeToken": {
                      "type": "boolean",
                      "description": "__Conditional__. Used to receive a `oneTimeToken` rather than a `consentToken` at the `callback` for additional security. This can only be used when the `callback` is set. <br><br>See [Using a callback with an OTT (Optional)](https://docs.yapily.com/pages/knowledge/yapily-concepts/callback_url/#using-a-callback-with-an-ott-optional) for more information.",
                      "example": false
                  },
                  "paymentRequest": {
                      "$ref": "#/components/schemas/PaymentRequest"
                  },
                  "userCredentials": {
                      "$ref": "#/components/schemas/UserCredentials"
                  },
                  "selectedScaMethod": {
                      "$ref": "#/components/schemas/ScaMethod"
                  },
                  "scaCode": {
                      "type": "string",
                      "description": "__Conditional__. Used to update the authorisation with the sca code received by the user from the `Institution` using the embedded payment authorisation flow.<br><br>This is the penultimate step required in the embedded payment authorisation flow to authorise the `Consent`. After sending the sca code, to obtain an authorised consent, the last step is to poll [Get Consent](https://docs.yapily.com/api/reference/#operation/getConsentById) until the `Institution` authorises the request and the `Consent` `status` transitions to `AUTHORIZED`.",
                      "example": "325614"
                  }
              },
              "description": "The request body containing an `PaymentEmbeddedAuthorisationRequest` json payload"
          },
          "PaymentEmbeddedAuthorisationRequestResponse": {
              "type": "object",
              "properties": {
                  "id": {
                      "type": "string",
                      "description": "Unique identifier for the embedded payment authorisation request.",
                      "format": "uuid"
                  },
                  "userUuid": {
                      "type": "string",
                      "description": "The `User` that the authorisation request was created for.",
                      "format": "uuid"
                  },
                  "applicationUserId": {
                      "type": "string",
                      "description": "The user-friendly reference to the `User` that the authorisation request was created for."
                  },
                  "referenceId": {
                      "type": "string"
                  },
                  "institutionId": {
                      "type": "string",
                      "description": "The  `Institution` the authorisation request was sent to."
                  },
                  "status": {
                      "$ref": "#/components/schemas/AuthorisationStatus"
                  },
                  "createdAt": {
                      "type": "string",
                      "description": "Date and time the embedded payment authorisation was created.",
                      "format": "date-time"
                  },
                  "transactionFrom": {
                      "type": "string",
                      "description": "When performing a transaction query using the consent, this is the earliest date of transaction records that can be retrieved.",
                      "format": "date-time"
                  },
                  "transactionTo": {
                      "type": "string",
                      "description": "When performing a transaction query using the consent, this is the latest date of transaction records that can be retrieved.",
                      "format": "date-time"
                  },
                  "expiresAt": {
                      "type": "string",
                      "description": "Date and time the authorisation expires. Re-authorisation is needed to retain access.",
                      "format": "date-time"
                  },
                  "timeToExpireInMillis": {
                      "type": "integer",
                      "format": "int64",
                      "deprecated": true
                  },
                  "timeToExpire": {
                      "type": "string",
                      "format": "iso8601"
                  },
                  "featureScope": {
                      "uniqueItems": true,
                      "description": "The set of features the consent provides access to.",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/FeatureEnum"
                      }
                  },
                  "consentToken": {
                      "type": "string",
                      "description": "Represents the authorisation to gain access to the requested features. Required to make a payment request."
                  },
                  "state": {
                      "type": "string",
                      "description": "Correlation ID used with the `Institution` during the authorisation process."
                  },
                  "authorizedAt": {
                      "type": "string",
                      "description": "Date and time the request was authorised by the `Institution`.",
                      "format": "date-time"
                  },
                  "institutionConsentId": {
                      "type": "string",
                      "description": "Identification of the consent at the `Institution`."
                  },
                  "charges": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PaymentChargeDetails"
                      }
                  },
                  "exchangeRateInformation": {
                      "$ref": "#/components/schemas/ExchangeRateInformationResponse"
                  },
                  "authorisationUrl": {
                      "type": "string"
                  },
                  "qrCodeUrl": {
                      "type": "string",
                      "description": "The URL link for the QR code that may be scanned via a mobile device to make an authorisation redirect to the bank (authURL encoded)."
                  },
                  "explanation": {
                      "type": "string"
                  },
                  "scaMethods": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ScaMethod"
                      }
                  },
                  "selectedScaMethod": {
                      "$ref": "#/components/schemas/ScaMethod"
                  }
              }
          },
          "ApiResponseOfPaymentEmbeddedAuthorisationRequestResponse": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "$ref": "#/components/schemas/PaymentEmbeddedAuthorisationRequestResponse"
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "forwardedData": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ResponseForwardedData"
                      }
                  },
                  "raw": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RawResponse"
                      }
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  }
              }
          },
          "PaymentIsoStatus": {
              "type": "object",
              "description": "The payment status code, as denoted by a 3-letter ISO 20022 code.",
              "properties": {
                  "code": {
                      "$ref": "#/components/schemas/PaymentIsoStatusCodeEnum"
                  },
                  "name": {
                      "type": "string",
                      "description": "The full name of the ISO 20022 `PaymentStatusCode`.",
                      "example": "AcceptedCreditSettlementCompleted"
                  }
              }
          },
          "PaymentIsoStatusCodeEnum": {
              "type": "string",
              "description": "The ISO 20022 `PaymentStatusCode`.",
              "example": "ACCC",
              "enum": [
                  "ACCC",
                  "ACCP",
                  "ACSC",
                  "ACSP",
                  "ACTC",
                  "ACWC",
                  "ACWP",
                  "RCVD",
                  "PDNG",
                  "RJCT",
                  "CANC",
                  "ACFC",
                  "PATC",
                  "PART",
                  "ACCO"
              ]
          },
          "PaymentPreAuthorisationRequest": {
              "required": [
                  "institutionId",
                  "scope",
                  "payee",
                  "payer",
                  "amount",
                  "reference"
              ],
              "type": "object",
              "properties": {
                  "userUuid": {
                      "type": "string",
                      "format": "uuid"
                  },
                  "applicationUserId": {
                      "type": "string",
                      "description": "__Conditional__. The user-friendly reference to the `User` that will authorise the authorisation request. If a `User` with the specified `applicationUserId` exists, it will be used otherwise, a new `User` with the specified `applicationUserId` will be created and used. Either the `userUuid` or `applicationUserId` must be provided.",
                      "example": "user-234562290"
                  },
                  "forwardParameters": {
                      "type": "array",
                      "description": "Extra parameters to be forwarded in the redirect back to the client after the user authorisation flow has been completed.",
                      "items": {
                          "type": "string"
                      }
                  },
                  "institutionId": {
                      "type": "string",
                      "description": "__Mandatory__. The reference to the `Institution` which identifies which institution the authorisation request is sent to.",
                      "example": "yapily-mock"
                  },
                  "callback": {
                      "type": "string",
                      "description": "__Optional__. The server to redirect the user to after the user complete the authorisation at the `Institution`. <br><br>See [Using a callback (Optional)](https://docs.yapily.com/pages/knowledge/yapily-concepts/callback_url/#using-a-callback-optional) for more information.",
                      "example": "https://display-parameters.com"
                  },
                  "redirect": {
                      "$ref": "#/components/schemas/RedirectRequest"
                  },
                  "oneTimeToken": {
                      "type": "boolean",
                      "description": "__Conditional__. Used to receive a `oneTimeToken` rather than a `consentToken` at the `callback` for additional security. This can only be used when the `callback` is set. <br><br>See [Using a callback with an OTT (Optional)](https://docs.yapily.com/pages/knowledge/yapily-concepts/callback_url/#using-a-callback-with-an-ott-optional) for more information.",
                      "example": false
                  },
                  "scope": {
                      "type": "string",
                      "description": "__Mandatory__. Defines the scope of the pre-authorisation request.",
                      "example": "AIS"
                  },
                  "payee": {
                      "$ref": "#/components/schemas/PayeeDetails"
                  },
                  "payer": {
                      "$ref": "#/components/schemas/PayerDetails"
                  },
                  "amount": {
                      "$ref": "#/components/schemas/Amount"
                  },
                  "reference": {
                      "type": "string",
                      "description": "__Mandatory__. The payment reference or description. Limited to a maximum of 18 characters long.",
                      "example": "Bill payment"
                  }
              },
              "description": "__Mandatory__. The payment pre authorisation request object defining the details of the payment and pre auth."
          },
          "PaymentRequest": {
              "required": [
                  "amount",
                  "payee",
                  "paymentIdempotencyId",
                  "type"
              ],
              "type": "object",
              "properties": {
                  "paymentIdempotencyId": {
                      "title": "Idempotency Id",
                      "type": "string",
                      "description": "__Mandatory__. A unique identifier that you must provide to identify the payment. This can be any alpha-numeric string but is limited to a maximum of 35 characters.",
                      "example": "04ab4536gaerfc0e1f93c4f4"
                  },
                  "payer": {
                      "$ref": "#/components/schemas/Payer"
                  },
                  "reference": {
                      "title": "Payment Reference",
                      "type": "string",
                      "description": "__Optional__. The payment reference or description. Limited to a maximum of 18 characters long.",
                      "example": "Bill payment"
                  },
                  "contextType": {
                      "$ref": "#/components/schemas/PaymentContextType"
                  },
                  "purposeCode": {
                      "$ref": "#/components/schemas/PaymentPurposeCode"
                  },
                  "type": {
                      "$ref": "#/components/schemas/PaymentType"
                  },
                  "payee": {
                      "$ref": "#/components/schemas/Payee"
                  },
                  "periodicPayment": {
                      "$ref": "#/components/schemas/PeriodicPaymentRequest"
                  },
                  "internationalPayment": {
                      "$ref": "#/components/schemas/InternationalPaymentRequest"
                  },
                  "amount": {
                      "$ref": "#/components/schemas/Amount"
                  },
                  "paymentDateTime": {
                      "title": "Payment Date",
                      "type": "string",
                      "description": "__Conditional__. Used to specify the date of the payment when the payment type is one of the following:<ul>    <li><code>DOMESTIC_SCHEDULED_PAYMENT</code></li>    <li><code>DOMESTIC_PERIODIC_PAYMENT</code></li>    <li><code>INTERNATIONAL_SCHEDULED_PAYMENT</code></li>    <li><code>INTERNATIONAL_PERIODIC_PAYMENT</code></li></ul>",
                      "format": "date-time",
                      "example": "2021-07-21T17:32:28Z"
                  },
                  "readRefundAccount": {
                      "title": "Read Refund Account",
                      "type": "boolean",
                      "description": "__Optional__. Used to request the payer details in the payment response when the `Institution` provides the feature `READ_DOMESTIC_SINGLE_REFUND`.<br><br>See [Reverse Payments](https://docs.yapily.com/pages/knowledge/open-banking/reverse_payments/) for more information.",
                      "example": false
                  }
              },
              "description": "__Mandatory__. The payment request object defining the details of the payment."
          },
          "PaymentResponse": {
              "type": "object",
              "properties": {
                  "id": {
                      "type": "string",
                      "description": "Unique identifier of the payment."
                  },
                  "institutionConsentId": {
                      "type": "string",
                      "description": "Identification of the consent at the Institution."
                  },
                  "paymentIdempotencyId": {
                      "type": "string",
                      "description": "__Mandatory__. A unique identifier that you must provide to identify the payment. This can be any alpha-numeric string but is limited to a maximum of 35 characters."
                  },
                  "paymentLifecycleId": {
                      "type": "string"
                  },
                  "status": {
                      "$ref": "#/components/schemas/PaymentStatus"
                  },
                  "statusDetails": {
                      "$ref": "#/components/schemas/PaymentStatusDetails"
                  },
                  "payer": {
                      "$ref": "#/components/schemas/Payer"
                  },
                  "payeeDetails": {
                      "$ref": "#/components/schemas/Payee"
                  },
                  "reference": {
                      "type": "string",
                      "description": "__Optional__. The payment reference or description. Limited to a maximum of 18 characters long."
                  },
                  "amount": {
                      "type": "number",
                      "description": "Monetary amount."
                  },
                  "currency": {
                      "type": "string",
                      "description": "Currency the payment amount is denoted in. Specified as a 3-letter ISO 4217 code."
                  },
                  "amountDetails": {
                      "$ref": "#/components/schemas/Amount"
                  },
                  "createdAt": {
                      "type": "string",
                      "description": "Date and time of when the payment request was created.",
                      "format": "date-time"
                  },
                  "firstPaymentAmount": {
                      "$ref": "#/components/schemas/Amount"
                  },
                  "firstPaymentDateTime": {
                      "type": "string",
                      "description": "Date and time of when the first payment request is to be made.",
                      "format": "date-time"
                  },
                  "nextPaymentAmount": {
                      "$ref": "#/components/schemas/Amount"
                  },
                  "nextPaymentDateTime": {
                      "type": "string",
                      "description": "__Conditional__. Defines when the recurring payment is to be made.",
                      "format": "date-time"
                  },
                  "finalPaymentAmount": {
                      "$ref": "#/components/schemas/Amount"
                  },
                  "finalPaymentDateTime": {
                      "type": "string",
                      "description": "Date and time of when the final payment is to be made.",
                      "format": "date-time"
                  },
                  "numberOfPayments": {
                      "type": "integer",
                      "description": "Number of recurring payment requests to be made as part of the instructed payment schedule.",
                      "format": "int32"
                  },
                  "previousPaymentAmount": {
                      "$ref": "#/components/schemas/Amount"
                  },
                  "previousPaymentDateTime": {
                      "type": "string",
                      "description": "Date and time of when the previous payment request was posted.",
                      "format": "date-time"
                  },
                  "chargeDetails": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PaymentChargeDetails"
                      }
                  },
                  "scheduledPaymentType": {
                      "type": "string",
                      "description": "Details the execution type and the payment date between the payer and the payee."
                  },
                  "scheduledPaymentDateTime": {
                      "type": "string",
                      "description": "Date and time of when the scheduled payment request will be made.",
                      "format": "date-time"
                  },
                  "frequency": {
                      "$ref": "#/components/schemas/FrequencyResponse"
                  },
                  "currencyOfTransfer": {
                      "type": "string",
                      "description": "__Mandatory__. The currency to be transferred to the payee. This may differ from the currency the payment is denoted in and the currency of the payer's account. Specified as a 3-letter code (ISO 4217)."
                  },
                  "purpose": {
                      "type": "string",
                      "description": "Specifies the external purpose code for the `Institution` - IS0 20022."
                  },
                  "priority": {
                      "$ref": "#/components/schemas/PriorityCodeEnum"
                  },
                  "exchangeRate": {
                      "$ref": "#/components/schemas/ExchangeRateInformationResponse"
                  },
                  "refundAccount": {
                      "$ref": "#/components/schemas/RefundAccount"
                  },
                  "bulkAmountSum": {
                      "type": "number"
                  }
              }
          },
          "ApiListResponseOfPaymentResponse": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseListMeta"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PaymentResponse"
                      }
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "forwardedData": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ResponseForwardedData"
                      }
                  },
                  "raw": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RawResponse"
                      }
                  },
                  "paging": {
                      "$ref": "#/components/schemas/FilteredClientPayloadListPaymentResponse"
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  }
              }
          },
          "ApiResponseOfPaymentResponse": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "$ref": "#/components/schemas/PaymentResponse"
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "forwardedData": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ResponseForwardedData"
                      }
                  },
                  "raw": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RawResponse"
                      }
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  }
              }
          },
          "PaymentResponses": {
              "type": "object",
              "properties": {
                  "payments": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PaymentResponse"
                      }
                  }
              }
          },
          "ApiResponseOfPaymentResponses": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "$ref": "#/components/schemas/PaymentResponses"
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "forwardedData": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ResponseForwardedData"
                      }
                  },
                  "raw": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RawResponse"
                      }
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  }
              }
          },
          "PaymentStatus": {
              "type": "string",
              "description": "The status of the Payment. <br><br>For more information, see [Payment Status](/guides/payments/payment-status/)",
              "enum": [
                  "PENDING",
                  "FAILED",
                  "DECLINED",
                  "COMPLETED",
                  "COMPLETED_SETTLEMENT_IN_PROCESS",
                  "EXPIRED",
                  "UNKNOWN",
                  "ACTIVE",
                  "INACTIVE"
              ]
          },
          "PaymentStatusDetails": {
              "type": "object",
              "properties": {
                  "status": {
                      "$ref": "#/components/schemas/PaymentStatus"
                  },
                  "statusReason": {
                      "type": "string"
                  },
                  "statusReasonDescription": {
                      "type": "string"
                  },
                  "statusUpdateDate": {
                      "type": "string",
                      "format": "date-time"
                  },
                  "multiAuthorisationStatus": {
                      "$ref": "#/components/schemas/MultiAuthorisation"
                  },
                  "isoStatus": {
                      "$ref": "#/components/schemas/PaymentIsoStatus"
                  }
              }
          },
          "PaymentType": {
              "title": "Payment Type",
              "type": "string",
              "description": "__Mandatory__. Used to specify which of the [payment types](https://docs.yapily.com/pages/key-concepts/payments/payment-execution/intro-to-payment-execution/#payment-types) to execute.<br><br>See [European Payments](https://docs.yapily.com/pages/knowledge/open-banking/european_payments/) to verify whether the `type` should be `DOMESTIC` or `INTERNATIONAL`.",
              "enum": [
                  "DOMESTIC_PAYMENT",
                  "DOMESTIC_INSTANT_PAYMENT",
                  "DOMESTIC_VARIABLE_RECURRING_PAYMENT",
                  "DOMESTIC_SCHEDULED_PAYMENT",
                  "DOMESTIC_PERIODIC_PAYMENT",
                  "INTERNATIONAL_PAYMENT",
                  "INTERNATIONAL_SCHEDULED_PAYMENT",
                  "INTERNATIONAL_PERIODIC_PAYMENT"
              ]
          },
          "PaymentTypeResponse": {
              "title": "Payment Type",
              "type": "string",
              "description": "Specifies which of the [payment types](https://docs.yapily.com/pages/key-concepts/payments/payment-execution/intro-to-payment-execution/#payment-types) to execute.<br>",
              "enum": [
                  "DOMESTIC_PAYMENT",
                  "DOMESTIC_INSTANT_PAYMENT",
                  "DOMESTIC_VARIABLE_RECURRING_PAYMENT",
                  "DOMESTIC_SCHEDULED_PAYMENT",
                  "DOMESTIC_PERIODIC_PAYMENT",
                  "INTERNATIONAL_PAYMENT",
                  "INTERNATIONAL_SCHEDULED_PAYMENT",
                  "INTERNATIONAL_PERIODIC_PAYMENT"
              ]
          },
          "PaymentTypeOfConstraints": {
              "title": "Payment Type",
              "type": "string",
              "description": "Payment type associated with constraints.",
              "enum": [
                  "DOMESTIC_PAYMENT",
                  "DOMESTIC_INSTANT_PAYMENT",
                  "DOMESTIC_VARIABLE_RECURRING_PAYMENT",
                  "DOMESTIC_SCHEDULED_PAYMENT",
                  "DOMESTIC_PERIODIC_PAYMENT",
                  "INTERNATIONAL_PAYMENT",
                  "INTERNATIONAL_SCHEDULED_PAYMENT",
                  "INTERNATIONAL_PERIODIC_PAYMENT"
              ]
          },
          "PeriodicPaymentRequest": {
              "required": [
                  "frequency"
              ],
              "type": "object",
              "properties": {
                  "frequency": {
                      "$ref": "#/components/schemas/FrequencyRequest"
                  },
                  "numberOfPayments": {
                      "type": "integer",
                      "description": "__Conditional__. Defines the total number of payments to be made.<br><br>This is required if `finalPaymentDateTime` is not specified and it is intended for the periodic payment have a fixed amount of payments.",
                      "format": "int32",
                      "example": 5
                  },
                  "nextPaymentDateTime": {
                      "type": "string",
                      "description": "__Conditional__. Defines when to start the recurring payment date and time. Specify this if you want the first payment to start on a different day than what the frequency object defines.",
                      "format": "date-time",
                      "example": "2018-01-10T00:00:00Z"
                  },
                  "nextPaymentAmount": {
                      "$ref": "#/components/schemas/Amount"
                  },
                  "finalPaymentDateTime": {
                      "type": "string",
                      "description": "__Conditional__. Defines the final payment date and time. To create an open-ended periodic payment, do not specify this property.",
                      "format": "date-time",
                      "example": "2030-01-10T00:00:00Z"
                  },
                  "finalPaymentAmount": {
                      "$ref": "#/components/schemas/Amount"
                  }
              },
              "description": "__Conditional__. Used to specify properties to define a periodic payment. <br><br>Must be specified when the payment `type` is one of the following:<ul>     <li><code>DOMESTIC_PERIODIC_PAYMENT</code></li>     <li><code>INTERNATIONAL_PERIODIC_PAYMENT</code></li></ul>"
          },
          "PreAuthorisationRequest": {
              "required": [
                  "institutionId",
                  "scope"
              ],
              "type": "object",
              "properties": {
                  "userUuid": {
                      "type": "string",
                      "format": "uuid"
                  },
                  "applicationUserId": {
                      "type": "string",
                      "description": "__Conditional__. The user-friendly reference to the `User` that will authorise the authorisation request. If a `User` with the specified `applicationUserId` exists, it will be used otherwise, a new `User` with the specified `applicationUserId` will be created and used. Either the `userUuid` or `applicationUserId` must be provided.",
                      "example": "user-234562290"
                  },
                  "forwardParameters": {
                      "type": "array",
                      "description": "Extra parameters to be forwarded in the redirect back to the client after the user authorisation flow has been completed.",
                      "items": {
                          "type": "string"
                      }
                  },
                  "institutionId": {
                      "type": "string",
                      "description": "__Mandatory__. The reference to the `Institution` which identifies which institution the authorisation request is sent to.",
                      "example": "yapily-mock"
                  },
                  "callback": {
                      "type": "string",
                      "description": "__Optional__. The server to redirect the user to after the user complete the authorisation at the `Institution`. <br><br>See [Using a callback (Optional)](https://docs.yapily.com/pages/knowledge/yapily-concepts/callback_url/#using-a-callback-optional) for more information.",
                      "example": "https://display-parameters.com"
                  },
                  "redirect": {
                      "$ref": "#/components/schemas/RedirectRequest"
                  },
                  "oneTimeToken": {
                      "type": "boolean",
                      "description": "__Conditional__. Used to receive a `oneTimeToken` rather than a `consentToken` at the `callback` for additional security. This can only be used when the `callback` is set. <br><br>See [Using a callback with an OTT (Optional)](https://docs.yapily.com/pages/knowledge/yapily-concepts/callback_url/#using-a-callback-with-an-ott-optional) for more information.",
                      "example": false
                  },
                  "scope": {
                      "type": "string",
                      "description": "__Mandatory__. Defines the scope of the pre-authorisation request.",
                      "example": "AIS"
                  }
              }
          },
          "PreAuthorisationResponse": {
              "type": "object",
              "properties": {
                  "id": {
                      "type": "string",
                      "description": "Unique identifier for the pre-authorisation request.",
                      "format": "uuid"
                  },
                  "userUuid": {
                      "type": "string",
                      "description": "The `User` that the authorisation request was created for.",
                      "format": "uuid"
                  },
                  "applicationUserId": {
                      "type": "string",
                      "description": "The user-friendly reference to the `User` that the authorisation request was created for."
                  },
                  "referenceId": {
                      "type": "string"
                  },
                  "institutionId": {
                      "type": "string",
                      "description": "The `Institution` the authorisation request was sent to."
                  },
                  "status": {
                      "$ref": "#/components/schemas/AuthorisationStatus"
                  },
                  "createdAt": {
                      "type": "string",
                      "description": "Date and time the consent was created.",
                      "format": "date-time"
                  },
                  "transactionFrom": {
                      "type": "string",
                      "description": "When performing a transaction query using the consent, this is the earliest date of transaction records that can be retrieved.",
                      "format": "date-time"
                  },
                  "transactionTo": {
                      "type": "string",
                      "description": "When performing a transaction query using the consent, this is the latest date of transaction records that can be retrieved.",
                      "format": "date-time"
                  },
                  "expiresAt": {
                      "type": "string",
                      "description": "Date and time the authorisation expires. Re-authorisation is needed to retain access.",
                      "format": "date-time"
                  },
                  "timeToExpireInMillis": {
                      "type": "integer",
                      "format": "int64",
                      "deprecated": true
                  },
                  "timeToExpire": {
                      "type": "string",
                      "format": "iso8601"
                  },
                  "featureScope": {
                      "uniqueItems": true,
                      "description": "The set of features the consent provides access to.",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/FeatureEnum"
                      }
                  },
                  "consentToken": {
                      "type": "string",
                      "description": "Represents the authorisation to gain access to the requested features. Required to access account information or make a payment request."
                  },
                  "state": {
                      "type": "string",
                      "description": "Corellation ID used with the `Institution` during the authorisation process."
                  },
                  "authorizedAt": {
                      "type": "string",
                      "description": "Date and time the request was authorised by the `Institution`.",
                      "format": "date-time"
                  },
                  "institutionConsentId": {
                      "type": "string",
                      "description": "Unique identifier of the consent assigned by the `Institution`."
                  },
                  "authorisationUrl": {
                      "type": "string"
                  },
                  "qrCodeUrl": {
                      "type": "string",
                      "description": "The URL link for the QR code that may be scanned via a mobile device to make a authorisation redirect to the bank (authURL encoded)."
                  }
              }
          },
          "ApiResponseOfPreAuthorisationResponse": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "$ref": "#/components/schemas/PreAuthorisationResponse"
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "forwardedData": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ResponseForwardedData"
                      }
                  },
                  "raw": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RawResponse"
                      }
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  }
              }
          },
          "PriorityCodeEnum": {
              "type": "string",
              "enum": [
                  "NORMAL",
                  "URGENT"
              ]
          },
          "ApiResponseOfFinancialProfileAuthorisationResponse": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ProfileConsent"
                      }
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  }
              }
          },
          "ApiResponseOfFinancialProfileConsent": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "$ref": "#/components/schemas/ProfileConsent"
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  }
              }
          },
          "ApiResponseOfFinancialProfileConsentRemoveResponse": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  }
              }
          },
          "ApiResponseOfFinancialProfile": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "$ref": "#/components/schemas/FinancialProfile"
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  }
              }
          },
          "ProfileConsent": {
              "description": "Details of a consent linked to a `User Profile`.",
              "properties": {
                  "id": {
                      "example": "eb2ad083-a111-4143-8756-a3a3cef4031c",
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique identifier of the `consent` in context of a user's profile."
                  },
                  "status": {
                      "example": "PENDING",
                      "type": "string",
                      "description": "The status, can be PENDING, COMPLETED or ERROR."
                  },
                  "userId": {
                      "example": "3ddf5dd0-aa48-4d0f-baa7-fa057e9e911d",
                      "type": "string",
                      "format": "uuid",
                      "description": "The userUuid."
                  },
                  "referenceConsentId": {
                      "example": "1e2e5167-8519-4c19-b016-8f2f0c6e38b6",
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique identifier of the consent."
                  },
                  "institutionId": {
                      "example": "mock-sandbox",
                      "type": "string",
                      "description": "__Mandatory__. The  `Institution` the authorisation request is sent to."
                  },
                  "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When a profile consent is created.",
                      "example": "28-07-2022 21:00:00"
                  },
                  "expiresAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When a profile consent is expired after created + X.",
                      "example": "28-07-2022 21:05:00"
                  },
                  "dataInsertedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "After data retrieval from aggregated profile consent is completed.",
                      "example": "28-07-2022 21:00:30"
                  }
              },
              "type": "object"
          },
          "BalancePredictionProfile": {
              "description": "A Balance Prediction profile for a User.",
              "properties": {
                  "status": {
                      "example": "COMPLETED",
                      "type": "string",
                      "description": "The status, will be COMPLETED which represents successful retreival of profile."
                  },
                  "profileConsents": {
                      "type": "array",
                      "description": "A list of ProfileConsents used in the Balance Prediction profile.",
                      "items": {
                          "$ref": "#/components/schemas/ProfileConsent"
                      }
                  },
                  "enrichedBalances": {
                      "type": "array",
                      "description": "A list of Balances returned by Balance Prediction profile.",
                      "items": {
                          "$ref": "#/components/schemas/EnrichedBalances"
                      }
                  }
              },
              "type": "object"
          },
          "ApiResponseOfFinancialProfileBalancePrediction": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "$ref": "#/components/schemas/BalancePredictionProfile"
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  }
              }
          },
          "EnrichedBalances": {
              "type": "object",
              "description": "Enriched Balance information generated which include historic aggregated balances and predicted balances",
              "properties": {
                  "accountIds": {
                      "type": "array",
                      "items": {
                          "type": "string"
                      },
                      "description": "A list of Account Ids used to generate Balance Prediction Profile."
                  },
                  "institutions": {
                      "type": "array",
                      "items": {
                          "type": "string"
                      },
                      "description": "A list of Institution Ids associated with the accounts used to generate Balance Prediction Profile."
                  },
                  "historic": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/EnrichedHistoricBalance"
                      },
                      "description": "A list of historic balances. Each balance in the list is an aggregation (sum) of the reported balance for each account within the profile at a point in time."
                  },
                  "predicted": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/EnrichedPredictedBalance"
                      },
                      "description": "A list of predicted balances. Each balance in the list is a projected balance of the profile at a future point in time."
                  }
              }
          },
          "EnrichedHistoricBalance": {
              "type": "object",
              "description": "A list of Aggregated Account Balances for historic date range.",
              "properties": {
                  "date": {
                      "type": "string",
                      "format": "date",
                      "description": "The date for which Aggregated Balance amount across Bank accounts is calculated.",
                      "example": "2021-10-01"
                  },
                  "balance": {
                      "type": "number",
                      "description": "The Aggregated Balance amount for a specific date.",
                      "example": 20
                  }
              }
          },
          "EnrichedPredictedBalance": {
              "type": "object",
              "description": "A list of Predicted Account Balances for future date range.",
              "properties": {
                  "date": {
                      "type": "string",
                      "format": "date",
                      "description": "The date for which Balance amount is predicted.",
                      "example": "2021-11-01"
                  },
                  "medianBalance": {
                      "type": "number",
                      "description": "The median Balance amount for a future date.",
                      "example": 49.26
                  },
                  "90percentileBalance": {
                      "type": "number",
                      "description": "The 90th percentile Balance amount for a future date.",
                      "example": 49.26
                  },
                  "10percentileBalance": {
                      "type": "number",
                      "description": "The 10th percentile Balance amount for a future date.",
                      "example": 5.96
                  }
              }
          },
          "ProprietaryBankTransactionCode": {
              "type": "object",
              "description": "Transaction code that is proprietary to the `Institution`.",
              "properties": {
                  "code": {
                      "type": "string",
                      "description": "__Mandatory__. Properietary code used to identify the underlying transaction."
                  },
                  "issuer": {
                      "type": "string",
                      "description": "__Mandatory__. Issuer of the properitary code."
                  }
              }
          },
          "RateTypeEnum": {
              "type": "string",
              "description": "__Mandatory__. The type used to complete the currency exchange.",
              "enum": [
                  "ACTUAL",
                  "AGREED",
                  "INDICATIVE"
              ]
          },
          "RawRequest": {
              "type": "object",
              "properties": {
                  "method": {
                      "type": "string"
                  },
                  "url": {
                      "type": "string"
                  },
                  "requestInstant": {
                      "type": "string",
                      "format": "date-time"
                  },
                  "headers": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "body": {
                      "type": "object"
                  },
                  "bodyParameters": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "startTime": {
                      "type": "string",
                      "format": "date-time"
                  },
                  "startedAt": {
                      "type": "string",
                      "format": "date-time",
                      "deprecated": true
                  }
              }
          },
          "RawResponse": {
              "type": "object",
              "description": "Interaction (raw request and response) that occured with the `Institution` in order to fulfil a request.",
              "properties": {
                  "request": {
                      "$ref": "#/components/schemas/RawRequest"
                  },
                  "duration": {
                      "type": "string",
                      "format": "iso8601"
                  },
                  "headers": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "resultCode": {
                      "type": "integer",
                      "format": "int32"
                  },
                  "result": {
                      "type": "object"
                  }
              }
          },
          "RedirectRequest": {
              "required": [
                  "url"
              ],
              "type": "object",
              "properties": {
                  "url": {
                      "type": "string",
                      "description": "__Mandatory__.Successful redirect after the user complete the authorisation at the `Institution`."
                  }
              },
              "description": "__Optional__. The server to redirect the user to after the user complete the authorisation at the `Institution`."
          },
          "RefundAccount": {
              "type": "object",
              "description": "The account to which funds should be returned if the payment is to be later refunded.",
              "properties": {
                  "name": {
                      "type": "string"
                  },
                  "accountIdentifications": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/AccountIdentification"
                      }
                  }
              }
          },
          "HostedVrpRefundAccount": {
              "type": "object",
              "description": "The account to which funds should be returned if the payment is to be later refunded.",
              "properties": {
                  "name": {
                      "type": "string"
                  },
                  "accountIdentifications": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/HostedVrpAccountIdentification"
                      }
                  }
              }
          },
          "ResponseForwardedData": {
              "type": "object",
              "properties": {
                  "headers": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "url": {
                      "type": "string"
                  }
              }
          },
          "ResponseListMeta": {
              "type": "object",
              "properties": {
                  "tracingId": {
                      "type": "string"
                  },
                  "count": {
                      "type": "integer",
                      "format": "int32"
                  },
                  "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                  }
              }
          },
          "ApplicationResponseListMeta": {
              "type": "object",
              "properties": {
                  "tracingId": {
                      "type": "string"
                  },
                  "count": {
                      "type": "integer",
                      "format": "int32",
                      "minimum": 0,
                      "description": "The number of applications in the current page."
                  },
                  "pagination": {
                      "type": "object",
                      "properties": {
                          "self": {
                              "type": "object",
                              "properties": {
                                  "offset": {
                                      "type": "integer",
                                      "format": "int32",
                                      "minimum": 0,
                                      "description": "The number of skipped applications."
                                  },
                                  "limit": {
                                      "type": "integer",
                                      "format": "int32",
                                      "minimum": 0,
                                      "description": "The maximum number of applications for the current page."
                                  },
                                  "sort": {
                                      "type": "string",
                                      "description": "The field by which results are sorted by. Default direction is ascending, descending is identified by a \"-\" prefix."
                                  }
                              }
                          },
                          "totalCount": {
                              "type": "integer",
                              "format": "int32",
                              "minimum": 0,
                              "description": "The total number of applications that match the given filter."
                          }
                      }
                  }
              }
          },
          "ResponseMeta": {
              "type": "object",
              "properties": {
                  "tracingId": {
                      "type": "string"
                  }
              }
          },
          "ResponseMetaWithCount": {
              "type": "object",
              "properties": {
                  "tracingId": {
                      "type": "string"
                  },
                  "count": {
                      "type": "integer",
                      "format": "int32"
                  }
              }
          },
          "ScaMethod": {
              "required": [
                  "id"
              ],
              "type": "object",
              "description": "__Conditional__. Used to update the authorisation with the sca method of the user's choice for the `Institution` that uses the embedded authorisation flow. If the user has multiple sca methods configured, the `Institution` will allow the user to select from each of these options. <br><br>When the user has multiple sca methods for the `Institution`, this is the second step required in the embedded authorisation flow to authorise the `Consent`.",
              "example": {
                  "id": "944",
                  "type": "PUSH_OTP",
                  "description": "SecureSIGN"
              },
              "properties": {
                  "id": {
                      "type": "string",
                      "description": "__Mandatory__. The id of the sca method provided by the `Institution`",
                      "example": "258211#OPTICAL"
                  },
                  "type": {
                      "$ref": "#/components/schemas/Type"
                  },
                  "description": {
                      "type": "string",
                      "description": "__Optional__. A description of the sca method if provided by the `Institution`",
                      "example": "Testkarte Hr. Haubach_1, optisch"
                  },
                  "information": {
                      "type": "string",
                      "description": "Additional information from the institution to provide to the PSU to help with the selected SCA method. The language is determined by the institution and may vary.",
                      "example": "Bitte bestÃ¤tigen Sie den Vorgang in Ihrer SecureGo plus App"
                  },
                  "data": {
                      "description": "Data from the institution to provide to the PSU to complete authorisation. The language is determined by the institution and may vary.",
                      "type": "array",
                      "items": {
                          "type": "string"
                      },
                      "example": [
                          "0488701109982928CY439040000100000010000520,00"
                      ]
                  }
              }
          },
          "SortEnum": {
              "type": "string",
              "description": "The attribute on which resources / records returned should be sorted. Valid options for the sort parameter.",
              "enum": [
                  "date",
                  "-date"
              ]
          },
          "StatementReference": {
              "type": "object",
              "description": "Unique reference for a statement period. This may be optionally populated if available.",
              "properties": {
                  "value": {
                      "type": "string"
                  }
              }
          },
          "Subcategory": {
              "type": "object",
              "properties": {
                  "id": {
                      "type": "string",
                      "format": "uuid"
                  },
                  "label": {
                      "type": "string"
                  }
              }
          },
          "Transaction": {
              "type": "object",
              "description": "Details of a transaction (credit or debit) that has occurred on the account.",
              "properties": {
                  "id": {
                      "type": "string",
                      "description": "Unique identifier of the transaction."
                  },
                  "date": {
                      "type": "string",
                      "format": "date-time"
                  },
                  "bookingDateTime": {
                      "type": "string",
                      "description": "Date and time in UTC format of when a transaction was booked.",
                      "format": "date-time"
                  },
                  "valueDateTime": {
                      "type": "string",
                      "description": "Date and time in UTC format when the funds either cease to be available (for debit transactions) or become available (for credit transactions) to the account owner.",
                      "format": "date-time"
                  },
                  "status": {
                      "$ref": "#/components/schemas/TransactionStatusEnum"
                  },
                  "amount": {
                      "type": "number",
                      "description": "The transaction amount."
                  },
                  "currency": {
                      "type": "string",
                      "description": "Currency the transaction amount is denoted in. Specified as a 3-letter ISO 4217 code."
                  },
                  "transactionAmount": {
                      "$ref": "#/components/schemas/Amount"
                  },
                  "grossAmount": {
                      "$ref": "#/components/schemas/Amount"
                  },
                  "currencyExchange": {
                      "$ref": "#/components/schemas/CurrencyExchange"
                  },
                  "chargeDetails": {
                      "$ref": "#/components/schemas/TransactionChargeDetails"
                  },
                  "reference": {
                      "type": "string"
                  },
                  "statementReferences": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/StatementReference"
                      }
                  },
                  "description": {
                      "type": "string"
                  },
                  "transactionInformation": {
                      "type": "array",
                      "description": "Further details on the transaction. This is narrative data, caught as unstructured text.",
                      "items": {
                          "type": "string"
                      }
                  },
                  "addressDetails": {
                      "$ref": "#/components/schemas/AddressDetails"
                  },
                  "isoBankTransactionCode": {
                      "$ref": "#/components/schemas/IsoBankTransactionCode"
                  },
                  "proprietaryBankTransactionCode": {
                      "$ref": "#/components/schemas/ProprietaryBankTransactionCode"
                  },
                  "balance": {
                      "$ref": "#/components/schemas/TransactionBalance"
                  },
                  "payeeDetails": {
                      "type": "object",
                      "description": "Details of the beneficiary [person or business].",
                      "properties": {
                          "name": {
                              "type": "string",
                              "description": "The account holder name of the Payee."
                          },
                          "accountIdentifications": {
                              "type": "array",
                              "description": "The account identifications that identify the Payee's bank account.",
                              "items": {
                                  "type": "object",
                                  "properties": {
                                      "type": {
                                          "allOf": [
                                              {
                                                  "$ref": "#/components/schemas/AccountIdentificationType"
                                              }
                                          ],
                                          "description": "Describes the format of the account."
                                      },
                                      "identification": {
                                          "type": "string",
                                          "description": "The value associated with the account identification type."
                                      }
                                  }
                              }
                          }
                      }
                  },
                  "payerDetails": {
                      "type": "object",
                      "description": "Details of the benefactor [person or business].",
                      "properties": {
                          "name": {
                              "type": "string",
                              "description": "The account holder name of the Payer."
                          },
                          "accountIdentifications": {
                              "type": "array",
                              "description": "The account identifications that identify the Payer's bank account.",
                              "items": {
                                  "type": "object",
                                  "properties": {
                                      "type": {
                                          "allOf": [
                                              {
                                                  "$ref": "#/components/schemas/AccountIdentificationType"
                                              }
                                          ],
                                          "description": "Describes the format of the account."
                                      },
                                      "identification": {
                                          "type": "string",
                                          "description": "The value associated with the account identification type."
                                      }
                                  }
                              }
                          }
                      }
                  },
                  "merchant": {
                      "$ref": "#/components/schemas/Merchant"
                  },
                  "enrichment": {
                      "$ref": "#/components/schemas/Enrichment"
                  },
                  "supplementaryData": {
                      "type": "object",
                      "description": "Additional information that cannot be captured in a structured field or block."
                  },
                  "transactionMutability": {
                      "type": "string",
                      "description": "__Optional__. Specifies the Mutability of the Transaction record.<ul><li>A transaction with a `Status` of `Pending` is mutable.</li><li>A transaction with a `Status` of `Booked` where the `TransactionMutability` flag is not specified is not guaranteed to be immutable (although in most instances it will be).</li><li>A transaction with a `Status` of `Booked` with the `TransactionMutability` flag set to `Immutable` is immutable.</li><li>A transaction with a `Status` of `Booked` with the `TransactionMutability` flag set to `Mutable` is mutable.</li></ul>",
                      "example": "Mutable"
                  }
              }
          },
          "ApiListResponseOfTransaction": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseListMeta"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/Transaction"
                      }
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "forwardedData": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ResponseForwardedData"
                      }
                  },
                  "raw": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RawResponse"
                      }
                  },
                  "paging": {
                      "$ref": "#/components/schemas/FilteredClientPayloadListTransaction"
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  }
              }
          },
          "TransactionChargeDetails": {
              "type": "object",
              "description": "Details the charges that will apply to the transaction.",
              "properties": {
                  "chargeAmount": {
                      "$ref": "#/components/schemas/Amount"
                  }
              }
          },
          "TransactionHash": {
              "type": "object",
              "description": "An unique identifier for the transaction that was generated by Yapily. This is a hash of transaction attributes and may be useful an id is not present (and therefore hasn't been provided by an Institution).",
              "properties": {
                  "hash": {
                      "type": "string"
                  }
              }
          },
          "TransactionSchedule": {
              "description": "The frequency at which transactions occurred.",
              "properties": {
                  "frequency": {
                      "type": "string",
                      "description": "How often the transaction happens.  Can be 'Monthly', 'Twice monthly', 'Every two weeks', 'Every four weeks', 'Daily', 'Weekly', 'Every weekday', 'Twice daily', 'Twice every weekday'",
                      "example": "Daily"
                  },
                  "detailedFrequency": {
                      "type": "string",
                      "description": "When in the cycle the transaction occurs.  Can be 'Daily', 'Twice daily', 'Twice every weekday', 'Every weekday', 'Weekly on day n', 'Every two weeks on day n', 'Monthly on working day before day n of month', 'Monthly on last working day of month', 'Twice a month on 15th and last working day of month', 'Every four weeks on day n'",
                      "example": "Daily"
                  },
                  "detailedFrequencyParameter": {
                      "type": "number",
                      "description": "The n in detailedFrequency where there is one - for week-based frequencies, an integer from 0 to 6 where 0 is Monday or for month-based frequencies, an integer from 0 to 27 where 0 is the first day of the month",
                      "example": 1
                  }
              }
          },
          "TransactionStatusEnum": {
              "type": "string",
              "enum": [
                  "BOOKED",
                  "PENDING"
              ]
          },
          "TransactionStream": {
              "description": "Lists all possible transaction streams identified for the `Application User`.",
              "properties": {
                  "name": {
                      "example": "Amazon Marketplace",
                      "type": "string",
                      "description": "The name of the Transaction Stream."
                  },
                  "transactions": {
                      "type": "array",
                      "description": "A list of transaction details, identified by Yapily data services.",
                      "items": {
                          "$ref": "#/components/schemas/EnrichedTransaction"
                      }
                  },
                  "transactionSchedule": {
                      "$ref": "#/components/schemas/TransactionSchedule"
                  },
                  "scheduleConsistencyScore": {
                      "type": "number",
                      "description": "The consistency of the transaction.  This is a number between 0 and 1 with 1 being the most consistent schedule.",
                      "example": 0.44
                  },
                  "nextExpectedTransactionDate": {
                      "type": "string",
                      "format": "date",
                      "description": "When is the transaction expected to occur next.",
                      "example": "2019-10-04"
                  },
                  "earliestTransactionDate": {
                      "type": "string",
                      "format": "date",
                      "description": "When is the first recorded transaction date",
                      "example": "2020-04-24"
                  },
                  "mostRecentTransactionDate": {
                      "type": "string",
                      "format": "date",
                      "description": "When is the most recent transaction date",
                      "example": "2019-10-03"
                  },
                  "amountConsistencyScore": {
                      "type": "number",
                      "description": "The consistency of the amount of the transaction.  This is a number between 0 and 1 with 1 being the most consistent amount.",
                      "example": 0.74
                  },
                  "averageAmount": {
                      "type": "number",
                      "description": "The average amount of the transaction stream",
                      "example": 19.708
                  }
              }
          },
          "TerminatedTransactionStream": {
              "description": "Terminated transaction stream generated as part of the financial profile for a User.",
              "properties": {
                  "name": {
                      "example": "Amazon Marketplace",
                      "type": "string",
                      "description": "The name of the TransactionStream"
                  },
                  "transactions": {
                      "type": "array",
                      "description": "A list of Transactions from the transaction stream.",
                      "items": {
                          "$ref": "#/components/schemas/EnrichedTransaction"
                      }
                  },
                  "transactionSchedule": {
                      "$ref": "#/components/schemas/TransactionSchedule"
                  },
                  "scheduleConsistencyScore": {
                      "type": "number",
                      "description": "The consistency of the transaction.  This is a number between 0 and 1 with 1 being the most consistent schedule.",
                      "example": 0.44
                  },
                  "nextExpectedTransactionDate": {
                      "type": "string",
                      "format": "date",
                      "description": "When is the transaction expected to occur next.",
                      "example": "2019-10-04"
                  },
                  "earliestTransactionDate": {
                      "type": "string",
                      "format": "date",
                      "description": "When is the first recorded transaction date",
                      "example": "2020-04-24"
                  },
                  "mostRecentTransactionDate": {
                      "type": "string",
                      "format": "date",
                      "description": "When is the most recent transaction date",
                      "example": "2019-10-03"
                  },
                  "amountConsistencyScore": {
                      "type": "number",
                      "description": "The consistency of the amount of the transaction.  This is a number between 0 and 1 with 1 being the most consistent amount.",
                      "example": 0.74
                  },
                  "averageAmount": {
                      "type": "number",
                      "description": "The average amount of the transaction stream",
                      "example": 19.708
                  },
                  "missedTransactions": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Missed transactions of transaction stream",
                      "example": 3
                  }
              }
          },
          "Type": {
              "type": "string",
              "description": "The `SCA` method type available for the user",
              "enum": [
                  "SMS_OTP",
                  "CHIP_OTP",
                  "PHOTO_OTP",
                  "PUSH_OTP"
              ]
          },
          "UsageType": {
              "type": "string",
              "description": "The customer segment of the account.",
              "enum": [
                  "PERSONAL",
                  "BUSINESS",
                  "OTHER",
                  "UNKNOWN"
              ]
          },
          "UserCredentials": {
              "required": [
                  "id",
                  "password"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "type": "string",
                      "description": "__Mandatory__. The login id for the user for a particular `Institution`.",
                      "example": "6154057725"
                  },
                  "corporateId": {
                      "type": "string",
                      "description": "__Conditional__. The corporate login for the user for a particular corporate `Institution`.",
                      "example": "6345898763"
                  },
                  "password": {
                      "type": "string",
                      "description": "__Mandatory__. The password of the user to login to a particular `Institution`.",
                      "example": "PISPWD12"
                  }
              },
              "description": "__Conditional__. Used to capture the user's credentials to allow them to login to an `Institution` that uses the embedded account authorisation flow. <br><br>This is the first step required in the embedded account authorisation flow to authorise the `Consent`."
          },
          "UserDeleteResponse": {
              "type": "object",
              "description": "Deletion of the user. Includes the user profile and all associate consents.",
              "properties": {
                  "id": {
                      "type": "string",
                      "description": "Unique identifier of the user."
                  },
                  "deleteStatus": {
                      "$ref": "#/components/schemas/DeleteStatusEnum"
                  },
                  "creationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time that the user was created."
                  },
                  "userConsents": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ConsentDeleteResponse"
                      }
                  }
              }
          },
          "ApiResponseOfUserDeleteResponse": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "$ref": "#/components/schemas/UserDeleteResponse"
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "forwardedData": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ResponseForwardedData"
                      }
                  },
                  "raw": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RawResponse"
                      }
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  }
              }
          },
          "EventSubscriptionRequest": {
              "title": "Request to create a subscription for notifications",
              "type": "object",
              "required": [
                  "eventTypeId",
                  "notification"
              ],
              "properties": {
                  "eventTypeId": {
                      "type": "string",
                      "description": "Unique identifier of the event type (for which notifications will be sent).<br><br>Allowed values: payment.status, payment.status.completed, payment.isoStatus ",
                      "example": "payment.status.completed"
                  },
                  "notification": {
                      "$ref": "#/components/schemas/Notification"
                  }
              }
          },
          "EventSubscriptionResponse": {
              "title": "Response on successful creation of event subscription",
              "type": "object",
              "required": [
                  "eventTypeId",
                  "applicationId",
                  "created",
                  "notification"
              ],
              "properties": {
                  "eventTypeId": {
                      "type": "string",
                      "description": "Unique identifier of the event type (for which notifications will be sent)",
                      "example": "payment.status.completed"
                  },
                  "applicationId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Application related to event subscription.",
                      "example": "2698db90-6635-4f76-b673-5ce8e2aeda0e"
                  },
                  "created": {
                      "type": "string",
                      "description": "Creation date of event subscription.",
                      "example": "28-07-2021 15:47:03"
                  },
                  "notification": {
                      "$ref": "#/components/schemas/Notification"
                  }
              }
          },
          "EventSubscriptionDeleteResponse": {
              "title": "Response upon successful unsubscribe on subscription",
              "type": "object",
              "required": [
                  "eventTypeId",
                  "applicationId",
                  "created",
                  "deleteStatus"
              ],
              "properties": {
                  "eventTypeId": {
                      "type": "string",
                      "description": "Unique identifier of the event type (for which notifications will be sent)",
                      "example": "payment.status.completed"
                  },
                  "applicationId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Application related to event subscription.",
                      "example": "2698db90-6635-4f76-b673-5ce8e2aeda0e"
                  },
                  "created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Creation datetime of event subscription.",
                      "example": "28-07-2021 15:47:03"
                  },
                  "deleteStatus": {
                      "$ref": "#/components/schemas/DeleteStatusEnum"
                  }
              }
          },
          "Notification": {
              "description": "Subscription details for how and where to receive notifications.",
              "type": "object",
              "required": [
                  "type",
                  "url"
              ],
              "properties": {
                  "type": {
                      "type": "string",
                      "description": "How the notification will be delivered. This is currently only via WEBHOOK.",
                      "example": "WEBHOOK"
                  },
                  "url": {
                      "type": "string",
                      "description": "URL to which the notification will be sent.",
                      "example": "https://httpbin.com/new_endpoint"
                  }
              }
          },
          "ApiResponseOfEventSubscriptionResponse": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "$ref": "#/components/schemas/EventSubscriptionResponse"
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "forwardedData": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ResponseForwardedData"
                      }
                  },
                  "raw": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RawResponse"
                      }
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  }
              }
          },
          "ApiListResponseOfEventSubscriptionResponse": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseListMeta"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/EventSubscriptionResponse"
                      }
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "forwardedData": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ResponseForwardedData"
                      }
                  },
                  "raw": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RawResponse"
                      }
                  },
                  "paging": {
                      "$ref": "#/components/schemas/FilteredClientPayloadListTransaction"
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  }
              }
          },
          "ApiResponseOfEventSubscriptionDeleteResponse": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "$ref": "#/components/schemas/EventSubscriptionDeleteResponse"
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "forwardedData": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ResponseForwardedData"
                      }
                  },
                  "raw": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RawResponse"
                      }
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  }
              }
          },
          "ErrorIssue": {
              "required": [
                  "type",
                  "code"
              ],
              "type": "object",
              "description": "Detailed information regarding the issue that was experienced during processing of the request",
              "properties": {
                  "type": {
                      "type": "string",
                      "description": "Category of the issue"
                  },
                  "code": {
                      "type": "string",
                      "description": "Code that uniquely identifies the type of issue"
                  },
                  "parameter": {
                      "type": "string",
                      "description": "Identfies the parameter / property within the request (headers, query parameters or body) that the issue relates to. For headers and query parameters, it refers to the parameter name. For the body, it refers to the JSONPath of the property"
                  },
                  "message": {
                      "type": "string",
                      "description": "Human readable description of the issue that was experienced"
                  },
                  "institutionError": {
                      "$ref": "#/components/schemas/InstitutionError"
                  }
              }
          },
          "ErrorDetails": {
              "required": [
                  "tracingId",
                  "code",
                  "status"
              ],
              "type": "object",
              "properties": {
                  "tracingId": {
                      "type": "string",
                      "description": "Unique identifier of the request, used by Yapily for support purposes"
                  },
                  "code": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Numeric HTTP status code associated with the error"
                  },
                  "status": {
                      "type": "string",
                      "description": "Textual description of the HTTP status"
                  },
                  "supportUrl": {
                      "type": "string",
                      "description": "Link to where further information regarding the error can be found"
                  },
                  "source": {
                      "type": "string",
                      "description": "Source of the error. This may be YAPILY, the INSTITUTION, or the USER"
                  },
                  "issues": {
                      "type": "array",
                      "description": "List of issues relating to the error",
                      "items": {
                          "$ref": "#/components/schemas/ErrorIssue"
                      }
                  }
              }
          },
          "Links": {
              "type": "object",
              "properties": {
                  "self": {
                      "type": "string"
                  },
                  "first": {
                      "type": "string"
                  },
                  "last": {
                      "type": "string"
                  },
                  "next": {
                      "type": "string"
                  },
                  "previous": {
                      "type": "string"
                  }
              }
          },
          "SweepingAuthorisationRequest": {
              "required": [
                  "institutionId",
                  "controlParameters",
                  "initiationDetails"
              ],
              "type": "object",
              "properties": {
                  "userId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "This is the Yapily user identifier for the user returned by the create user step POST ../users"
                  },
                  "applicationUserId": {
                      "type": "string",
                      "description": "A client's own user reference. If the client wants to work with their own unique references for individual PSUs then they can use the applicationUserId property to provide that value. Where Yapily does not already have a Yapily userId that matches the supplied applicationUserId, then a new Yapily userId is created automatically and linked to the applicationUserId value.  Clients can then use either their own applicationUserId or the Yapily userId to reference the same user in future calls."
                  },
                  "forwardParameters": {
                      "type": "array",
                      "description": "Extra parameters the TPP may want to get forwarded in the callback request after the PSU redirect.",
                      "items": {
                          "type": "string"
                      }
                  },
                  "contextType": {
                      "$ref": "#/components/schemas/PaymentContextType"
                  },
                  "institutionId": {
                      "type": "string",
                      "description": "__Mandatory__. The reference to the `Institution` which identifies which institution the authorisation request is sent to.",
                      "example": "yapily-mock"
                  },
                  "callback": {
                      "type": "string",
                      "description": "__Optional__. The server to redirect the user to after the user complete the authorisation at the `Institution`. <br><br>See [Using a callback (Optional)](https://docs.yapily.com/knowledge/callback_url/#using-a-callback-optional) for more information.",
                      "example": "https://display-parameters.com"
                  },
                  "redirect": {
                      "$ref": "#/components/schemas/RedirectRequest"
                  },
                  "oneTimeToken": {
                      "type": "boolean",
                      "description": "__Conditional__. Used to receive a `oneTimeToken` rather than a `consentToken` at the `callback` for additional security. This can only be used when the `callback` is set. <br><br>See [Using a callback with an OTT (Optional)](https://docs.yapily.com/knowledge/callback_url/#using-a-callback-with-an-ott-optional) for more information.",
                      "example": false
                  },
                  "controlParameters": {
                      "$ref": "#/components/schemas/SweepingControlParameters"
                  },
                  "initiationDetails": {
                      "$ref": "#/components/schemas/InitiationDetails"
                  },
                  "complianceData": {
                      "$ref": "#/components/schemas/ComplianceData"
                  }
              }
          },
          "NonSweepingAuthorisationRequest": {
              "required": [
                  "institutionId",
                  "controlParameters",
                  "initiationDetails"
              ],
              "type": "object",
              "properties": {
                  "userId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "This is the Yapily user identifier for the user returned by the create user step POST ../users"
                  },
                  "applicationUserId": {
                      "type": "string",
                      "description": "A client's own user reference. If the client wants to work with their own unique references for individual PSUs then they can use the applicationUserId property to provide that value. Where Yapily does not already have a Yapily userId that matches the supplied applicationUserId, then a new Yapily userId is created automatically and linked to the applicationUserId value.  Clients can then use either their own applicationUserId or the Yapily userId to reference the same user in future calls."
                  },
                  "forwardParameters": {
                      "type": "array",
                      "description": "Extra parameters the TPP may want to get forwarded in the callback request after the PSU redirect.",
                      "items": {
                          "type": "string"
                      }
                  },
                  "contextType": {
                      "$ref": "#/components/schemas/PaymentContextTypeV2"
                  },
                  "institutionId": {
                      "type": "string",
                      "description": "__Mandatory__. The reference to the `Institution` which identifies which institution the authorisation request is sent to.",
                      "example": "yapily-mock"
                  },
                  "callback": {
                      "type": "string",
                      "description": "__Optional__. The server to redirect the user to after the user complete the authorisation at the `Institution`. <br><br>See [Using a callback (Optional)](https://docs.yapily.com/knowledge/callback_url/#using-a-callback-optional) for more information.",
                      "example": "https://display-parameters.com"
                  },
                  "redirect": {
                      "$ref": "#/components/schemas/RedirectRequest"
                  },
                  "oneTimeToken": {
                      "type": "boolean",
                      "description": "__Conditional__. Used to receive a `oneTimeToken` rather than a `consentToken` at the `callback` for additional security. This can only be used when the `callback` is set. <br><br>See [Using a callback with an OTT (Optional)](https://docs.yapily.com/knowledge/callback_url/#using-a-callback-with-an-ott-optional) for more information.",
                      "example": false
                  },
                  "controlParameters": {
                      "$ref": "#/components/schemas/NonSweepingControlParameters"
                  },
                  "initiationDetails": {
                      "$ref": "#/components/schemas/InitiationDetails"
                  },
                  "complianceData": {
                      "$ref": "#/components/schemas/ComplianceData"
                  }
              }
          },
          "SweepingAuthorisationResponse": {
              "type": "object",
              "properties": {
                  "id": {
                      "type": "string",
                      "format": "uuid"
                  },
                  "userId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "This is the Yapily user identifier for the user returned by the create user step POST ../users"
                  },
                  "applicationUserId": {
                      "type": "string",
                      "description": "A client's own user reference. If the client wants to work with their own unique references for individual PSUs then they can use the applicationUserId property to provide that value. Where Yapily does not already have a Yapily userId that matches the supplied applicationUserId, then a new Yapily userId is created automatically and linked to the applicationUserId value.  Clients can then use either their own applicationUserId or the Yapily userId to reference the same user in future calls."
                  },
                  "institutionId": {
                      "type": "string",
                      "description": "The reference to the Institution which identifies which institution the authorisation request is sent to."
                  },
                  "status": {
                      "$ref": "#/components/schemas/AuthorisationStatus"
                  },
                  "createdAt": {
                      "type": "string",
                      "format": "date-time"
                  },
                  "featureScope": {
                      "uniqueItems": true,
                      "type": "array",
                      "description": "__Optional__. Used to granularly specify the set of features that the user will give their consent for when requesting access to their account information. Depending on the `Institution`, this may also populate a consent screen which list these scopes before the user authorises.<br><br>This endpoint accepts allow all [Financial Data Features](/guides/financial-data/features/#feature-list) that the `Institution` supports.To find out which scopes an `Institution` supports, check [GET Institution](./#get-institution).",
                      "items": {
                          "$ref": "#/components/schemas/FeatureEnum"
                      }
                  },
                  "consentToken": {
                      "type": "string",
                      "description": "The `consent-token` containing the user's authorisation to make the payment request."
                  },
                  "state": {
                      "type": "string"
                  },
                  "authorizedAt": {
                      "type": "string",
                      "format": "date-time"
                  },
                  "institutionConsentId": {
                      "type": "string",
                      "description": "Identification of the consent at the Institution."
                  },
                  "authorisationUrl": {
                      "type": "string"
                  },
                  "qrCodeUrl": {
                      "type": "string"
                  },
                  "controlParameters": {
                      "$ref": "#/components/schemas/SweepingControlParameters"
                  },
                  "payer": {
                      "$ref": "#/components/schemas/Payer"
                  },
                  "initiationDetails": {
                      "$ref": "#/components/schemas/InitiationDetails"
                  }
              }
          },
          "NonSweepingAuthorisationResponse": {
              "type": "object",
              "properties": {
                  "id": {
                      "type": "string",
                      "format": "uuid"
                  },
                  "userId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "This is the Yapily user identifier for the user returned by the create user step POST ../users"
                  },
                  "applicationUserId": {
                      "type": "string",
                      "description": "A client's own user reference. If the client wants to work with their own unique references for individual PSUs then they can use the applicationUserId property to provide that value. Where Yapily does not already have a Yapily userId that matches the supplied applicationUserId, then a new Yapily userId is created automatically and linked to the applicationUserId value.  Clients can then use either their own applicationUserId or the Yapily userId to reference the same user in future calls."
                  },
                  "institutionId": {
                      "type": "string",
                      "description": "The reference to the Institution which identifies which institution the authorisation request is sent to."
                  },
                  "status": {
                      "$ref": "#/components/schemas/AuthorisationStatus"
                  },
                  "createdAt": {
                      "type": "string",
                      "format": "date-time"
                  },
                  "featureScope": {
                      "uniqueItems": true,
                      "type": "array",
                      "description": "__Optional__. Used to granularly specify the set of features that the user will give their consent for when requesting access to their account information. Depending on the `Institution`, this may also populate a consent screen which list these scopes before the user authorises.<br><br>This endpoint accepts allow all [Financial Data Features](/guides/financial-data/features/#feature-list) that the `Institution` supports.To find out which scopes an `Institution` supports, check [GET Institution](./#get-institution).",
                      "items": {
                          "$ref": "#/components/schemas/FeatureEnum"
                      }
                  },
                  "consentToken": {
                      "type": "string",
                      "description": "The `consent-token` containing the user's authorisation to make the payment request."
                  },
                  "state": {
                      "type": "string"
                  },
                  "authorizedAt": {
                      "type": "string",
                      "format": "date-time"
                  },
                  "institutionConsentId": {
                      "type": "string"
                  },
                  "authorisationUrl": {
                      "type": "string"
                  },
                  "qrCodeUrl": {
                      "type": "string"
                  },
                  "controlParameters": {
                      "$ref": "#/components/schemas/NonSweepingControlParameters"
                  },
                  "payer": {
                      "$ref": "#/components/schemas/Payer"
                  },
                  "initiationDetails": {
                      "$ref": "#/components/schemas/InitiationDetails"
                  }
              }
          },
          "ApiResponseOfSweepingAuthorisationResponse": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "$ref": "#/components/schemas/SweepingAuthorisationResponse"
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "forwardedData": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ResponseForwardedData"
                      }
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  },
                  "raw": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RawResponse"
                      }
                  }
              }
          },
          "ApiResponseOfNonSweepingAuthorisationResponse": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "$ref": "#/components/schemas/NonSweepingAuthorisationResponse"
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "forwardedData": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ResponseForwardedData"
                      }
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  },
                  "raw": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RawResponse"
                      }
                  }
              }
          },
          "SweepingControlParameters": {
              "required": [
                  "psuAuthenticationMethods",
                  "maxAmountPerPayment",
                  "periodicLimits"
              ],
              "type": "object",
              "description": "Define the restrictions and limits for payment orders as part of Sweeping VRP consent",
              "properties": {
                  "psuAuthenticationMethods": {
                      "type": "array",
                      "items": {
                          "type": "string"
                      },
                      "description": "__Mandatory__. Defines the authentication method(s) allowed in payment submission step. Allowed values are [SCA_REQUIRED, SCA_NOT_REQUIRED]."
                  },
                  "periodicLimits": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/SweepingPeriodicLimits"
                      }
                  },
                  "maxAmountPerPayment": {
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/Amount"
                          }
                      ],
                      "description": "__Mandatory__. Max amount that can be submitted per payment."
                  },
                  "validFrom": {
                      "type": "string",
                      "format": "date-time",
                      "description": "__Optional__. Start date when the consent becomes valid."
                  },
                  "validTo": {
                      "type": "string",
                      "format": "date-time",
                      "description": "__Optional__. End date when the consent expires and becomes invalid."
                  }
              }
          },
          "NonSweepingControlParameters": {
              "required": [
                  "psuAuthenticationMethods"
              ],
              "type": "object",
              "description": "Define the restrictions and limits for payment orders as part of Non-Sweeping VRP consent",
              "properties": {
                  "psuAuthenticationMethods": {
                      "type": "array",
                      "items": {
                          "type": "string"
                      },
                      "description": "__Mandatory__. Defines the authentication method(s) allowed in payment submission step. Allowed values are [SCA_REQUIRED, SCA_NOT_REQUIRED]."
                  },
                  "periodicLimits": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/NonSweepingPeriodicLimits"
                      }
                  },
                  "maxAmountPerPayment": {
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/Amount"
                          }
                      ],
                      "description": "__Mandatory__. Max amount that can be submitted per payment."
                  },
                  "maxCumulativeAmount": {
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/Amount"
                          }
                      ],
                      "description": "__Optional__. Max cumulative amount that can be submitted under this consent."
                  },
                  "initialPayment": {
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/Amount"
                          }
                      ],
                      "description": "__Mandatory__. Initial payment to be charged under this consent. If enforced, this amount must match the first payment amount executed using this consent."
                  },
                  "maxCumulativeNumberOfPayments": {
                      "type": "integer",
                      "format": "int32",
                      "description": "__Optional__. Max number of payments that can be submitted under this consent."
                  },
                  "validFrom": {
                      "type": "string",
                      "format": "date-time",
                      "description": "__Optional__. Start date when the consent becomes valid."
                  },
                  "validTo": {
                      "type": "string",
                      "format": "date-time",
                      "description": "__Optional__. End date when the consent expires and becomes invalid."
                  },
                  "recurringPaymentCategory": {
                      "type": "string",
                      "description": "The use-case for the VRP consent supported by the bank. Allowed values: <br>`ONGOING` <br>`SUBSCRIPTION`"
                  }
              }
          },
          "FundsAvailable": {
              "required": [
                  "fundsAvailable",
                  "fundsAvailableAt"
              ],
              "type": "object",
              "properties": {
                  "fundsAvailable": {
                      "type": "boolean",
                      "description": "__Mandatory__. Indicates whether funds are available or not."
                  },
                  "fundsAvailableAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "__Mandatory__. Date and Time when the funds availability is checked."
                  }
              }
          },
          "FundsConfirmationRequest": {
              "required": [
                  "paymentAmount"
              ],
              "type": "object",
              "properties": {
                  "reference": {
                      "type": "string",
                      "description": "__Optional__. The payment reference or description. Limited to a maximum of 18 characters long.",
                      "example": "Own Account Sweeping"
                  },
                  "paymentAmount": {
                      "$ref": "#/components/schemas/Amount"
                  }
              },
              "description": "The fund confirmation object defining the details of the account and funds to be checked under the Variable Recurring Payment consent."
          },
          "FundsConfirmationResponse": {
              "required": [
                  "paymentAmount",
                  "fundsAvailable"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "type": "string"
                  },
                  "reference": {
                      "type": "string",
                      "description": "The payment reference or description. Limited to a maximum of 18 characters long.",
                      "example": "Own Account Sweeping"
                  },
                  "paymentAmount": {
                      "$ref": "#/components/schemas/Amount"
                  },
                  "fundsAvailable": {
                      "$ref": "#/components/schemas/FundsAvailable"
                  }
              }
          },
          "ApiResponseOfFundsConfirmationResponse": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "$ref": "#/components/schemas/FundsConfirmationResponse"
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "forwardedData": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ResponseForwardedData"
                      }
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  },
                  "raw": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RawResponse"
                      }
                  }
              }
          },
          "InitiationDetails": {
              "type": "object",
              "properties": {
                  "reference": {
                      "type": "string",
                      "description": "__Optional__. The payment reference or description. Limited to a maximum of 18 characters long.",
                      "example": "Own Account Sweeping"
                  },
                  "payer": {
                      "$ref": "#/components/schemas/Payer"
                  },
                  "payee": {
                      "$ref": "#/components/schemas/Payee"
                  }
              },
              "description": "__Mandatory__. The payment initiation object defining the details of the payment under the Variable Recurring Payment consent."
          },
          "ComplianceData": {
              "type": "object",
              "properties": {
                  "payer": {
                      "$ref": "#/components/schemas/ComplianceDataPayer"
                  }
              },
              "description": "__Conditional__. Information needed to complete compliance checks. Mandatory for Yapily Connect customers."
          },
          "ComplianceDataPayer": {
              "type": "object",
              "required": [
                  "type"
              ],
              "properties": {
                  "type": {
                      "type": "string",
                      "example": "INDIVIDUAL",
                      "description": "The payer type. Allowed values: INDIVIDUAL, BUSINESS. The corresponding object must be included."
                  },
                  "individual": {
                      "$ref": "#/components/schemas/ComplianceDataIndividual"
                  },
                  "business": {
                      "$ref": "#/components/schemas/ComplianceDataBusiness"
                  }
              },
              "description": "__Conditional__. Payer details required for compliance checks."
          },
          "ComplianceDataIndividual": {
              "type": "object",
              "required": [
                  "name",
                  "birthDate"
              ],
              "properties": {
                  "name": {
                      "type": "string",
                      "example": "John Doe",
                      "description": "This is the first and last name of your end user."
                  },
                  "birthDate": {
                      "type": "string",
                      "format": "date",
                      "example": "2000-08-12",
                      "description": "This is the date of birth of your end user."
                  }
              },
              "description": "__Conditional__. Mandatory if the type is INDIVIDUAL."
          },
          "ComplianceDataBusiness": {
              "type": "object",
              "required": [
                  "name",
                  "registrationNumber",
                  "registeredAddress"
              ],
              "properties": {
                  "name": {
                      "type": "string",
                      "example": "Company LTD",
                      "description": "This is the registered company name of your end user."
                  },
                  "registrationNumber": {
                      "type": "string",
                      "example": "COM123NO",
                      "description": "This is the registered company number of the business."
                  },
                  "registeredAddress": {
                      "$ref": "#/components/schemas/ComplianceDataAddress"
                  },
                  "tradingAddress": {
                      "$ref": "#/components/schemas/ComplianceDataAddress"
                  }
              },
              "description": "__Conditional__. Mandatory if the type is BUSINESS."
          },
          "ComplianceDataAddress": {
              "type": "object",
              "required": [
                  "addressLine1",
                  "townName",
                  "postCode",
                  "country"
              ],
              "properties": {
                  "addressLine1": {
                      "type": "string",
                      "example": "123 Queens Street",
                      "description": "__Mandatory__. AddressLine1 of the business."
                  },
                  "addressLine2": {
                      "type": "string",
                      "example": "Unit 13",
                      "description": "__Optional__. AddressLine2 of the business."
                  },
                  "townName": {
                      "type": "string",
                      "example": "York",
                      "description": "__Mandatory__. Town name of the business."
                  },
                  "postCode": {
                      "type": "string",
                      "example": "12345",
                      "description": "__Mandatory__. Post code of the business."
                  },
                  "country": {
                      "type": "string",
                      "example": "GB",
                      "description": "__Mandatory__. Country of the business."
                  }
              },
              "description": "This is the registered company or trading address of your end user."
          },
          "SubmissionDetails": {
              "required": [
                  "payee",
                  "paymentAmount"
              ],
              "type": "object",
              "properties": {
                  "reference": {
                      "type": "string",
                      "description": "__Optional__. The payment reference or description. Limited to a maximum of 18 characters long.",
                      "example": "Own Account Sweeping"
                  },
                  "payee": {
                      "$ref": "#/components/schemas/Payee"
                  },
                  "paymentAmount": {
                      "$ref": "#/components/schemas/Amount"
                  }
              },
              "description": "__Mandatory__. The payment submission object defining the details of the payment instruction to be executed under the Variable Recurring Payment."
          },
          "SubmissionRequest": {
              "required": [
                  "paymentIdempotencyId",
                  "psuAuthenticationMethod",
                  "paymentAmount"
              ],
              "type": "object",
              "properties": {
                  "paymentIdempotencyId": {
                      "type": "string",
                      "description": "__Mandatory__. A unique identifier that you must provide to identify the payment. This can be any alpha-numeric string but is limited to a maximum of 35 characters.",
                      "example": "04ab4536gaerfc0e1f93c4f4"
                  },
                  "psuAuthenticationMethod": {
                      "type": "string",
                      "description": "__Mandatory__. Chosen authentication method for submission step. Allowed values are [SCA_REQUIRED, SCA_NOT_REQUIRED]."
                  },
                  "contextType": {
                      "$ref": "#/components/schemas/PaymentContextType"
                  },
                  "paymentAmount": {
                      "$ref": "#/components/schemas/Amount"
                  }
              },
              "description": "__Mandatory__. The payment request object defining the details of the payment for execution under the Variable Recurring Payment consent."
          },
          "SubmissionResponse": {
              "required": [
                  "initiationDetails",
                  "submissionDetails"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "type": "string"
                  },
                  "paymentIdempotencyId": {
                      "type": "string"
                  },
                  "paymentLifecycleId": {
                      "type": "string"
                  },
                  "institutionConsentId": {
                      "type": "string"
                  },
                  "status": {
                      "$ref": "#/components/schemas/PaymentStatus"
                  },
                  "statusDetails": {
                      "$ref": "#/components/schemas/PaymentStatusDetails"
                  },
                  "initiationDetails": {
                      "$ref": "#/components/schemas/InitiationDetails"
                  },
                  "submissionDetails": {
                      "$ref": "#/components/schemas/SubmissionDetails"
                  },
                  "payer": {
                      "$ref": "#/components/schemas/Payer"
                  },
                  "refundAccount": {
                      "$ref": "#/components/schemas/RefundAccount"
                  },
                  "expectedExecutionTime": {
                      "type": "string",
                      "format": "date-time"
                  },
                  "expectedSettlementTime": {
                      "type": "string",
                      "format": "date-time"
                  }
              }
          },
          "ApiResponseOfSubmissionResponse": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "$ref": "#/components/schemas/SubmissionResponse"
                  },
                  "links": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "string"
                      }
                  },
                  "forwardedData": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ResponseForwardedData"
                      }
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  },
                  "raw": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RawResponse"
                      }
                  }
              }
          },
          "SweepingPeriodicLimits": {
              "required": [
                  "totalMaxAmount",
                  "frequency",
                  "alignment"
              ],
              "type": "object",
              "properties": {
                  "totalMaxAmount": {
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/Amount"
                          }
                      ],
                      "description": "__Mandatory__. Maximum amount that can be specified in all payment instructions in a given period under this VRP consent. If the Alignment is Calendar, the limit is pro-rated in the first period to the remaining number of days."
                  },
                  "frequency": {
                      "type": "string",
                      "description": "__Mandatory__. Frequency for which the payment limits are enforced. Allowed values are [DAILY, WEEKLY, EVERY_TWO_WEEKS, MONTHLY, YEARLY]."
                  },
                  "alignment": {
                      "type": "string",
                      "description": "__Mandatory__. Period alignment for which the payment limits are enforced. Allowed values are [CONSENT, CALENDAR]. If CONSENT, then period starts on consent creation date. If CALENDAR, then period lines up with the frequency e.g. WEEKLY period will begin at start of the week in question."
                  }
              }
          },
          "NonSweepingPeriodicLimits": {
              "required": [
                  "totalMaxAmount"
              ],
              "type": "object",
              "properties": {
                  "totalMaxAmount": {
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/Amount"
                          }
                      ],
                      "description": "__Mandatory__. Maximum amount that can be specified in all payment instructions in a given period under this VRP consent. If the Alignment is Calendar, the limit is pro-rated in the first period to the remaining number of days."
                  },
                  "frequency": {
                      "type": "string",
                      "description": "__Mandatory__. Frequency for which the payment limits are enforced. Allowed values are [DAILY, WEEKLY, EVERY_TWO_WEEKS, MONTHLY, YEARLY]. This field cannot be enforced when `recurringPaymentCategory=ONGOING`."
                  },
                  "alignment": {
                      "type": "string",
                      "description": "__Mandatory__. Period alignment for which the payment limits are enforced. Allowed values are [CONSENT, CALENDAR]. If CONSENT, then period starts on consent creation date. If CALENDAR, then period lines up with the frequency e.g. WEEKLY period will begin at start of the week in question. This field cannot be enforced when `recurringPaymentCategory=ONGOING`."
                  },
                  "maxNumberOfPayments": {
                      "type": "integer",
                      "format": "int32",
                      "description": "__Optional__. Max number of payments that can be submitted under this period."
                  }
              }
          },
          "ApiListResponseOfRealTimeTransaction": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMetaWithCount"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RealTimeTransaction"
                      }
                  },
                  "links": {
                      "type": "object",
                      "properties": {
                          "first": {
                              "type": "string",
                              "description": "A cursor or link to the first page in the data set."
                          },
                          "prev": {
                              "type": "string",
                              "description": "A cursor or link to the previous page in the data set."
                          },
                          "self": {
                              "type": "string",
                              "description": "A cursor or link to the current page in the data set."
                          },
                          "next": {
                              "type": "string",
                              "description": "A cursor or link to the next page in the data set."
                          },
                          "last": {
                              "type": "string",
                              "description": "A cursor or link to the last page in the data set."
                          }
                      }
                  },
                  "forwardedData": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ResponseForwardedData"
                      }
                  },
                  "raw": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RawResponse"
                      }
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  }
              }
          },
          "RealTimeTransaction": {
              "type": "object",
              "properties": {
                  "id": {
                      "type": "string"
                  },
                  "date": {
                      "type": "string",
                      "format": "date-time"
                  },
                  "bookingDateTime": {
                      "type": "string",
                      "format": "date-time"
                  },
                  "valueDateTime": {
                      "type": "string",
                      "format": "date-time"
                  },
                  "status": {
                      "$ref": "#/components/schemas/TransactionStatusEnum"
                  },
                  "transactionAmount": {
                      "$ref": "#/components/schemas/Amount"
                  },
                  "grossAmount": {
                      "$ref": "#/components/schemas/Amount"
                  },
                  "currencyExchange": {
                      "$ref": "#/components/schemas/CurrencyExchange"
                  },
                  "chargeDetails": {
                      "$ref": "#/components/schemas/TransactionChargeDetails"
                  },
                  "reference": {
                      "type": "string"
                  },
                  "statementReferences": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/StatementReference"
                      }
                  },
                  "description": {
                      "type": "string"
                  },
                  "transactionInformation": {
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "addressDetails": {
                      "$ref": "#/components/schemas/AddressDetails"
                  },
                  "isoBankTransactionCode": {
                      "$ref": "#/components/schemas/IsoBankTransactionCode"
                  },
                  "proprietaryBankTransactionCode": {
                      "$ref": "#/components/schemas/ProprietaryBankTransactionCode"
                  },
                  "balance": {
                      "$ref": "#/components/schemas/TransactionBalance"
                  },
                  "payeeDetails": {
                      "$ref": "#/components/schemas/Payee"
                  },
                  "payerDetails": {
                      "$ref": "#/components/schemas/Payer"
                  },
                  "merchant": {
                      "$ref": "#/components/schemas/Merchant"
                  },
                  "supplementaryData": {
                      "type": "object"
                  }
              }
          },
          "CreateHostedConsentRequest": {
            "required": [
              "redirectUrl",
              "institutionIdentifiers"
            ],
            "type": "object",
            "properties": {
              "userId": {
                "type": "string",
                "format": "uuid",
                "description": "__Conditional__. Yapily Identifier for the `User` returned by the create user step POST /users. You must provide either a `userId` or `applicationUserId`."
              },
              "applicationUserId": {
                "type": "string",
                "description": "__Conditional__. Your own `User` reference. This field allows you to use your own unique references for individual users. Where the `User` reference doesn't have an associated Yapily `userId`, a new `userId` is created and linked to it. You must provide either a `userId` or `applicationUserId`."
              },
              "institutionIdentifiers": {
                "$ref": "#/components/schemas/InstitutionIdentifiers"
              },
              "userSettings": {
                "$ref": "#/components/schemas/UserSettings"
              },
              "redirectUrl": {
                "type": "string",
                "description": "URL of your server to redirect the user after completion of the consent flow.",
                "example": "https://tpp-application.com"
              },
              "oneTimeToken": {
                "type": "boolean",
                "description": "Used to receive a oneTimeToken rather than a consentToken at the redirectUrl for additional security.",
                "example": "false"
              },
              "accountRequest": {
                "$ref": "#/components/schemas/HostedAccountRequest"
              }
            }
          },
          "CreateHostedPaymentRequest": {
              "required": [
                  "redirectUrl",
                  "paymentRequestDetails",
                  "institutionIdentifiers"
              ],
              "type": "object",
              "properties": {
                  "userId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "__Conditional__. Yapily Identifier for the `User` returned by the create user step POST /users. You must provide either a `userId` or `applicationUserId`."
                  },
                  "applicationUserId": {
                      "type": "string",
                      "description": "__Conditional__. Your own `User` reference. This field allows you to use your own unique references for individual users. Where the `User` reference doesn't have an associated Yapily `userId`, a new `userId` is created and linked to it. You must provide either a `userId` or `applicationUserId`."
                  },
                  "institutionIdentifiers": {
                      "$ref": "#/components/schemas/InstitutionIdentifiers"
                  },
                  "userSettings": {
                      "$ref": "#/components/schemas/UserSettings"
                  },
                  "redirectUrl": {
                      "type": "string",
                      "description": "URL of your server to redirect the user after completion of the payment flow.",
                      "example": "https://tpp-application.com"
                  },
                  "paymentRequestDetails": {
                      "$ref": "#/components/schemas/HostedPaymentRequestDetails"
                  }
              }
          },
          "CreateHostedPaymentRequestLink": {
              "required": [
                  "redirectUrl",
                  "paymentRequestDetails",
                  "institutionIdentifiers"
              ],
              "type": "object",
              "properties": {
                  "userId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "__Conditional__. Yapily Identifier for the `User` returned by the create user step POST /users. You must either provide `userId` or `applicationUserId`."
                  },
                  "applicationUserId": {
                      "type": "string",
                      "description": "__Conditional__. Your own `User` reference. If you want to work with their own unique references for individual PSUs then you can use the `applicationUserId` property to provide that value. Where Yapily does not already have a Yapily userId that matches the supplied `applicationUserId`, then a new Yapily userId is created automatically and linked to the `applicationUserId` value. You must either provide userId or `applicationUserId`."
                  },
                  "institutionIdentifiers": {
                      "$ref": "#/components/schemas/InstitutionIdentifiers"
                  },
                  "userSettings": {
                      "$ref": "#/components/schemas/UserSettings"
                  },
                  "redirectUrl": {
                      "type": "string",
                      "description": "URL of your server to redirect the user after completion of the payment flow.",
                      "example": "https://tpp-application.com"
                  },
                  "authorisationExpiresAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time that the authorisation expires. Must be between 10 minutes and 30 days in the future. If not specified, the authorisation URL will expire 10 minutes after creation."
                  },
                  "paymentRequestDetails": {
                      "$ref": "#/components/schemas/HostedPaymentRequestDetailsLink"
                  }
              }
          },
          "InstitutionIdentifiers": {
              "description": "Specifies the institution requirements for making the payment. Skips the bank selection screen in payment flow if the `institutionId` and `institutionCountryCode` are provided.",
              "type": "object",
              "required": [
                  "institutionCountryCode"
              ],
              "properties": {
                  "institutionId": {
                      "type": "string",
                      "description": "Yapily identifier which identifies the `Institution` the payment request is sent to."
                  },
                  "institutionCountryCode": {
                      "type": "string",
                      "description": "2 letter ISO Country code of the `Institution` the payment request is sent to.",
                      "example": "GB"
                  }
              }
          },
          "InstitutionIdentifiersResponse": {
              "description": "Specifies the institution selected for making the payment.",
              "type": "object",
              "properties": {
                  "institutionId": {
                      "type": "string",
                      "description": "Yapily identifier which identifies the `Institution` the payment request is sent to."
                  },
                  "institutionCountryCode": {
                      "type": "string",
                      "description": "2 letter ISO Country code of the `Institution` the payment request is sent to.",
                      "example": "GB"
                  }
              }
          },
          "UserSettings": {
              "description": "Specifies the language and location preferences of the user.",
              "type": "object",
              "properties": {
                  "language": {
                      "type": "string",
                      "description": "2 letter ISO Language code which denotes the language preference for the `User`.",
                      "example": "en"
                  },
                  "location": {
                      "type": "string",
                      "description": "2 letter ISO Country code which denotes the location preference for the `User`.",
                      "example": "GB"
                  }
              }
          },
          "HostedPaymentRequestDetails": {
              "description": "Details of the payment.",
              "required": [
                  "paymentIdempotencyId",
                  "type",
                  "payee",
                  "amountDetails"
              ],
              "type": "object",
              "properties": {
                  "paymentIdempotencyId": {
                      "type": "string",
                      "description": "A unique identifier that you must provide to identify the payment. This can be any alpha-numeric string but is limited to a maximum of 35 characters.",
                      "example": "04ab4536gaerfc0e1f93c4f4"
                  },
                  "reference": {
                      "type": "string",
                      "description": "The payment reference or description. Limited to a maximum of 18 characters for UK institutions.",
                      "example": "Bill payment"
                  },
                  "contextType": {
                      "$ref": "#/components/schemas/PaymentContextType"
                  },
                  "type": {
                      "$ref": "#/components/schemas/PaymentType"
                  },
                  "payee": {
                      "$ref": "#/components/schemas/Payee"
                  },
                  "payer": {
                      "$ref": "#/components/schemas/Payer"
                  },
                  "amountDetails": {
                      "$ref": "#/components/schemas/HostedAmountDetails"
                  },
                  "paymentDueDate": {
                      "type": "string",
                      "format": "date",
                      "description": "The date that the payment is due. Displayed to the end user in the payment summary screen."
                  }
              }
          },
          "HostedPaymentResponseDetails": {
              "description": "Details of the payment.",
              "type": "object",
              "properties": {
                  "paymentIdempotencyId": {
                      "type": "string",
                      "description": "A unique identifier provided to identify the payment. This can be any alpha-numeric string but is limited to a maximum of 35 characters.",
                      "example": "04ab4536gaerfc0e1f93c4f4"
                  },
                  "reference": {
                      "type": "string",
                      "description": "The payment reference or description. Limited to a maximum of 18 characters for UK institutions.",
                      "example": "Bill payment"
                  },
                  "contextType": {
                      "$ref": "#/components/schemas/PaymentContextTypeResponse"
                  },
                  "type": {
                      "$ref": "#/components/schemas/PaymentTypeResponse"
                  },
                  "payee": {
                      "$ref": "#/components/schemas/PayeeDetailsResponse"
                  },
                  "payer": {
                      "$ref": "#/components/schemas/PayerDetailsResponse"
                  },
                  "amountDetails": {
                      "$ref": "#/components/schemas/AmountDetailsResponse"
                  },
                  "paymentDueDate": {
                      "type": "string",
                      "format": "date",
                      "description": "The date that the payment is due."
                  }
              }
          },
          "HostedPaymentRequestDetailsLink": {
              "type": "object",
              "properties": {
                  "reference": {
                      "type": "string",
                      "description": "The payment reference or description. Limited to a maximum of 18 characters for UK institutions.",
                      "example": "Bill payment"
                  },
                  "contextType": {
                      "$ref": "#/components/schemas/PaymentContextTypeResponse"
                  },
                  "type": {
                      "$ref": "#/components/schemas/PaymentTypeResponse"
                  },
                  "payee": {
                      "$ref": "#/components/schemas/PayeeDetailsResponse"
                  },
                  "payer": {
                      "$ref": "#/components/schemas/PayerDetailsResponse"
                  },
                  "amountDetails": {
                      "$ref": "#/components/schemas/AmountDetailsResponse"
                  },
                  "paymentDueDate": {
                      "type": "string",
                      "format": "date",
                      "description": "The date that the payment is due. Displayed to the end user in the payment summary screen."
                  }
              }
          },
          "HostedAmountDetails": {
              "required": [
                  "amountToPay",
                  "currency"
              ],
              "type": "object",
              "properties": {
                  "amountToPay": {
                      "type": "number",
                      "description": "The payment amount",
                      "minimum": 0.01,
            "example": 10.50
                  },
                  "currency": {
                      "type": "string",
                      "description": "The [ISO 4217](https://www.xe.com/iso4217.php) currency code",
                      "example": "GBP"
                  }
              },
              "description": "The payment amount and currency"
          },
          "HostedConsentRequestResponse" : {
            "type": "object",
            "properties": {
              "consentRequestId": {
                "type": "string",
                "format": "uuid",
                "description": "Unique Id of the consent request."
              },
              "userId": {
                "type": "string",
                "format": "uuid",
                "description": "Unique Id for the `User` assigned by Yapily."
              },
              "applicationUserId": {
                "type": "string",
                "description": "Your reference to the `User`."
              },
              "applicationId": {
                "type": "string",
                "format": "uuid",
                "description": "Unique Id of the `Application` the user is associated with."
              },
              "institutionIdentifiers": {
                "$ref": "#/components/schemas/InstitutionIdentifiersResponse"
              },
              "userSettings": {
                "$ref": "#/components/schemas/UserSettings"
              },
              "redirectUrl": {
                "type": "string",
                "description": "URL of consent server to redirect the user after completion of the consent flow.",
                "example": "https://tpp-application.com"
              },
              "accountRequestDetails": {
                "$ref": "#/components/schemas/HostedAccountRequestDetailsResponse"
              },
              "hostedUrl": {
                "type": "string",
                "description": "The URL of Hosted UI page for the applicationId which initiates the user journey for the consent. <br> URL would be appended with authToken, applicationId and userSettings."
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time at which the consent was created."
              },
              "authorisationExpiresAt": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time at which the auth Token will expire."
              }
            }
          },
          "HostedAccountRequestDetailsResponse": {
            "description": "Details of the Account Request.",
            "type": "object",
            "properties": {
              "transactionFrom": {
                "type": "string",
                "description": "Specifies the earliest date of the transaction records to be returned.<br><br> You must supply this field to retrieve transactions older than 90 days for banks accessed via the the [CBI Globe Gateway](https://docs.yapily.com/pages/data/financial-data-resources/data-restrictions/#cbi-globe-gateway).",
                "format": "date-time",
                "example": "2020-01-01T00:00:00Z"
              },
              "transactionTo": {
                "type": "string",
                "description": "Specifies the latest date of the transaction records to be returned.",
                "format": "date-time",
                "example": "2021-01-01T00:00:00Z"
              },
              "expiresAt": {
                "type": "string",
                "description": "Specify the set a hard date for when the user's associated `Consent` will expire.<br><br>**Note**: If this supported by the bank, specifying this is property is opting out of having a long-lived consent that can be perpetually re-authorised by the user. This will add an `expiresAt` field on the `Consent` object which will render it unusable after this date.<br><br>**Note**: This is not supported by every `Institution`. In such case, the request will not fail but the property will be ignored and the created `Consent` will not have an expiry date.",
                "format": "date-time",
                "example": "2025-01-01T00:00:00Z"
              },
              "featureScope": {
                "uniqueItems": true,
                "type": "array",
                "description": "Specify the set of features that the user will give their consent for when requesting access to their account information. Depending on the `Institution`, this may also populate a consent screen which list these scopes before the user authorises.<br><br>This endpoint accepts allow all [Financial Data Features](/guides/financial-data/features/#feature-list) that the `Institution` supports.To find out which scopes an `Institution` supports, check [GET Institution](./#get-institution).",
                "items": {
                  "$ref": "#/components/schemas/FeatureEnum"
                }
              }
            }
          },
          "HostedPaymentRequestResponse": {
              "type": "object",
              "properties": {
                  "paymentRequestId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique Id of the payment request."
                  },
                  "userId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique Id for the `User` assigned by Yapily."
                  },
                  "applicationUserId": {
                      "type": "string",
                      "description": "Your reference to the `User`."
                  },
                  "applicationId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique Id of the `Application` the user is associated with."
                  },
                  "institutionIdentifiers": {
                      "$ref": "#/components/schemas/InstitutionIdentifiersResponse"
                  },
                  "userSettings": {
                      "$ref": "#/components/schemas/UserSettings"
                  },
                  "redirectUrl": {
                      "type": "string",
                      "description": "URL of payment server to redirect the user after completion of the payment flow.",
                      "example": "https://tpp-application.com"
                  },
                  "paymentRequestDetails": {
                      "$ref": "#/components/schemas/HostedPaymentResponseDetails"
                  },
                  "hostedUrl": {
                      "type": "string",
                      "description": "The URL of Hosted UI page for the applicationId which initiates the user journey for the payment. <br> URL would be appended with authToken, applicationId and userSettings."
                  },
                  "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time at which the payment was created."
                  },
                  "authorisationExpiresAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time at which the auth Token will expire."
                  },
                  "status": {
                      "type": "string",
                      "description": "Current status of the payment request."
                  }
              }
          },
          "HostedPaymentPhase": {
              "type": "object",
              "properties": {
                  "phaseName": {
                      "type": "string",
                      "description": "The name of the hosted payment process phase. Allowed values are : <ul> <li>    INITIATED - Payment process initiated</li><li>    DECLINED - Payment process failed and will not proceed further</li><li>    INSTITUTION_SUBMITTED - Payment institution submitted</li><li>    EMBEDDED_CREDENTIAL_REQUESTED - For embedded banks, a UI element to collect user credentials was displayed</li><li>    CREDENTIALS_ERROR - embedded credentials refused by intittution</li><li>    AUTHORISATION_INITIATED - All details required for payment initiation have been collected</li><li>    VALIDATION_COMPLETED - The payment payload was validated successfully</li><li>    VALIDATION_FAILED - The payment data provided failed validation</li><li>    AUTHORISATION_CREATED - Payment authorisation request created with Institution</li><li>    EMBEDDED_CODE_REQUESTED - For embedded banks, a UI element to collect SCA for initiated consent was displayed</li><li>    EMBEDDED_TYPE_REQUESTED - For embedded banks, a UI element to allow the user to select their preferred SCA method for this consent authorisation was displayed</li><li>    DECOUPLED_AUTHORISATION - For embedded banks, decoupled authoirisation was initiated by the bank</li><li>    EMBEDDED_CODE_COLLECTED - For embedded banks, SCA code was collected for consent authorisation</li><li>    EMBEDDED_TYPE_SELECTED - For embedded banks, preferred SCA method was selected for consent authorisation</li><li>    PRE_AUTHORISED - pre authorisation was initiated by bank</li><li>    CONSENT_POLLING_STARTED - We start polling the bank for consent authorisation status</li><li>    CONSENT_POLLING_ENDED - We finish polling the bank for consent authorisation status</li><li>    AUTHORISED - Payment authorisation completed</li><li>    AUTHORISATION_FAILED - Payment authorisation failed and will not proceed further</li><li>    AUTHORISATION_REJECTED - Payment authorisation rejected and will not proceed further</li><li>    SUBMITTED - Payment execution created and submitted to Institution</li><li>    SUBMITTED_AUTO - Payment execution created and submitted to Institution</li><li>    ACCEPTED - Payment execution accepted by Institution and awaiting settlement</li><li>    REJECTED - Payment or Authorisation request rejected by Institution and will not proceed further</li><li>    SETTLEMENT_COMPLETED - Payment settlement completed</li><li>    STATUS_POLLING_STARTED - Payment status polling started</li><li>    STATUS_POLLING_ENDED - Payment status polling ended</li><li>    MERCHANT_ACKNOWLEDGED - Payment acknowledgement received from merchant</li><li>    FINISHED - Payment process completed</li></ul>"
                  },
                  "phaseCreatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time when phase of the hosted payment was inserted."
                  }
              },
              "description": "The phase of the payment."
          },
          "HostedPaymentStatusDetails": {
              "description": "The status of the payment.",
              "type": "object",
              "properties": {
                  "status": {
                      "$ref": "#/components/schemas/PaymentStatus"
                  },
                  "statusUpdateDate": {
                      "description": "Date and time the status was updated.",
                      "type": "string",
                      "format": "date-time"
                  },
                  "isoStatus": {
                      "$ref": "#/components/schemas/HostedPaymentIsoStatus"
                  }
              }
          },
          "HostedPaymentIsoStatus": {
              "description": "The ISO status of the payment.",
              "type": "object",
              "properties": {
                  "code": {
                      "type": "string",
                      "description": "The ISO 20022 `PaymentStatusCode`. One of : <br> ACSC <br> ACCC <br> ACCP  <br> ACSP <br> ACTC <br> ACWC <br> ACWP <br> ACFC <br> RCVD <br> PART <br> PATC <br> PDNG <br> RJCT <br> CANC",
                      "example": "ACSC"
                  },
                  "name": {
                      "type": "string",
                      "description": "The full name of the ISO 20022 `PaymentStatusCode`.",
                      "example": "AcceptedCreditSettlementCompleted"
                  }
              }
          },
          "ApiResponseOfGetHostedConsentRequest": {
            "type": "object",
            "properties": {
              "meta": {
                "$ref": "#/components/schemas/ResponseMeta"
              },
              "data": {
                "$ref": "#/components/schemas/HostedGetConsentRequestResponse"
              }
            }
          },
          "HostedGetConsentRequestResponse": {
            "type": "object",
            "properties": {
              "consentRequestId": {
                "type": "string",
                "format": "uuid",
                "description": "Unique Id of the consent request."
              },
              "consentId": {
                "type": "string",
                "format": "uuid",
                "description": "Identification of the consent."
              },
              "userId": {
                "type": "string",
                "format": "uuid",
                "description": "Unique Id for the `User` assigned by Yapily."
              },
              "applicationUserId": {
                "type": "string",
                "description": "Your reference to the `User`."
              },
              "applicationId": {
                "type": "string",
                "format": "uuid",
                "description": "Unique Id of the `Application` the user is associated with."
              },
              "institutionIdentifiers": {
                "$ref": "#/components/schemas/InstitutionIdentifiersResponse"
              },
              "userSettings": {
                "$ref": "#/components/schemas/UserSettings"
              },
              "redirectUrl": {
                "type": "string",
                "description": "URL of consent server to redirect the user after completion of the consent flow.",
                "example": "https://tpp-application.com"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time at which the payment was created."
              },
              "authorisationExpiresAt": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time at which the auth Token will expire."
              },
              "status": {
                "type": "string",
                "description": "Current status of the consent request. Allowed values are [AWAITING_AUTHORIZATION, AUTHORIZED, REJECTED, REVOKED, FAILED, EXPIRED, AWAITING_DECOUPLED_AUTHORIZATION]"
              },
              "phases": {
                "description": "The phase reached by the consent and its timestamp.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/HostedConsentPhase"
                }
              },
              "consentToken": {
                "type": "string",
                "description": "Represents the authorisation to gain access to the requested features. Required to access account information."
              }
            }
          },
          "HostedConsentPhase": {
            "type": "object",
            "properties": {
              "phaseName": {
                "type": "string",
                "description": "The name of the hosted consent process phase. Allowed values are : <ul> <li> INITIATED - Process initiated </li> <li> INSTITUTION_SUBMITTED - Consent institution submitted </li> <li>    AUTHORISATION_INITIATED - All details required for consent initiation have been collected</li> <li> AUTHORISATION_CREATED - Consent authorisation request created with Institution, awaiting authorisation completion </li> <li> AUTHORISATION_FAILED - Consent authorisation failed and will not proceed further</li> <li> AUTHORISATION_REJECTED - Consent Authorisation request rejected by Institution and will not proceed further </li> <li>    DECOUPLED_AUTHORISATION - For embedded banks, decoupled authorisation was initiated by the bank</li> <li>    EMBEDDED_CREDENTIAL_REQUESTED - For embedded banks, a UI element to collect user credentials was displayed</li> <li>    EMBEDDED_CODE_REQUESTED - For embedded banks, a UI element to collect SCA for initiated consent was displayed</li><li>    EMBEDDED_TYPE_REQUESTED - For embedded banks, a UI element to allow the user to select their preferred SCA method for this consent authorisation was displayed</li> <li>    EMBEDDED_CODE_COLLECTED - For embedded banks, SCA code was collected for consent authorisation</li><li>    EMBEDDED_TYPE_SELECTED - For embedded banks, preferred SCA method was selected for consent authorisation</li> <li>    CONSENT_POLLING_STARTED - We start polling the bank for consent authorisation status</li><li>    CONSENT_POLLING_ENDED - We finish polling the bank for consent authorisation status</li> <li> AUTHORISED - Consent authorisation completed </li> <li> FINISHED - Process finished </li>  </ul>"
              },
              "phaseCreatedAt": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time at which the phase of the hosted Consent was created."
              }
            },
            "description": "The phase of the Consent Request."
          },
          "ApiResponseOfGetHostedPaymentRequest": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "$ref": "#/components/schemas/HostedPaymentDetails"
                  }
              }
          },
          "HostedPaymentDetails": {
              "type": "object",
              "properties": {
                  "paymentRequestId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The unique ID of the payment request."
                  },
                  "userId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The Unique Identifier for the `User` assigned by Yapily."
                  },
                  "applicationUserId": {
                      "type": "string",
                      "description": "Your reference to the `User`."
                  },
                  "applicationId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The Unique Identifier of the `Application` the user is associated with."
                  },
                  "institutionIdentifiers": {
                      "$ref": "#/components/schemas/InstitutionIdentifiersResponse"
                  },
                  "userSettings": {
                      "$ref": "#/components/schemas/UserSettings"
                  },
                  "redirectUrl": {
                      "type": "string",
                      "description": "URL of your server to redirect the user after completion of the payment flow.",
                      "example": "https://tpp-application.com"
                  },
                  "paymentRequestDetails": {
                      "$ref": "#/components/schemas/HostedPaymentRequestDetailsLink"
                  },
                  "createdAt": {
                      "type": "string",
                      "description": "The date and time at which the payment request was created.",
                      "format": "date-time"
                  },
                  "authorisationExpiresAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time at which the auth Token will expire."
                  },
                  "status": {
                      "type": "string",
                      "description": "Current status of the payment request. <br> Possible values: <br> ACTIVE <br> INACTIVE"
                  },
                  "payments": {
                      "uniqueItems": true,
                      "type": "array",
                      "description": "Payments that have been initiated as part of this request",
                      "items": {
                          "$ref": "#/components/schemas/HostedPayment"
                      }
                  }
              }
          },
          "HostedPayment": {
              "type": "object",
              "properties": {
                  "paymentId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The Unique Identifier of the payment."
                  },
                  "hostedPaymentId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The Unique Identifier of the payment created using Yapily hosted application."
                  },
                  "consentId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The Unique Identifier of the consent."
                  },
                  "institutionIdentifiers": {
                      "$ref": "#/components/schemas/InstitutionIdentifiersResponse"
                  },
                  "phases": {
                      "description": "The phase reached by the payment and its timestamp.",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/HostedPaymentPhase"
                      }
                  },
                  "paymentStatus": {
                    "type": "string",
                    "description": "Payment status based on latest HostedAuthPaymentPhase in phases. Value can be <ul> <li>PENDING  -  Payment pending processing</li> <li>COMPLETED  -  Payment processing completed</li> <li>FAILED  -  Payment process failed</li></ul>"
                  },
                  "statusDetails": {
                      "description": "Details of the payment status.",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/HostedPaymentStatusDetails"
                      }
                  },
                  "institutionPaymentId": {
                      "type": "string",
                      "description": "The Unique Identifier of the payment created with the `Institution`."
                  },
                  "paymentLifecycleId": {
                      "type": "string",
                      "description": "The Unique Identifier provided by TPP in the Payment request to identify the payment."
                  },
                  "paymentIdempotencyId": {
                      "type": "string",
                      "description": "A unique identifier that you must provide to identify the payment. This can be any alpha-numeric string but is limited to a maximum of 35 characters.",
                      "example": "04ab4536gaerfc0e1f93c4f4"
                  },
                  "reference": {
                      "type": "string",
                      "description": "The payment reference or description. Limited to a maximum of 18 characters for UK institutions.",
                      "example": "Bill payment"
                  },
                  "contextType": {
                      "$ref": "#/components/schemas/PaymentContextTypeResponse"
                  },
                  "type": {
                      "$ref": "#/components/schemas/PaymentTypeResponse"
                  },
                  "payee": {
                      "$ref": "#/components/schemas/PayeeDetailsResponse"
                  },
                  "payer": {
                      "$ref": "#/components/schemas/PayerDetailsResponse"
                  },
                  "amount": {
                      "$ref": "#/components/schemas/AmountDetailsResponse"
                  }
              }
          },
          "ApiResponseOfCreateHostedConsentRequest": {
            "type": "object",
            "properties": {
              "meta": {
                "$ref": "#/components/schemas/ResponseMeta"
              },
              "data": {
                "$ref": "#/components/schemas/HostedConsentRequestResponse"
              }
            }
          },
          "ApiResponseOfCreateHostedPaymentRequest": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "$ref": "#/components/schemas/HostedPaymentRequestResponse"
                  }
              }
          },
          "ApiResponseOfCreateHostedPaymentRequestLink": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "$ref": "#/components/schemas/HostedPaymentRequestResponse"
                  }
              }
          },
          "CreateHostedVRPConsentRequest": {
              "required": [
                  "redirectUrl",
                  "institutionIdentifiers",
                  "vrpSetup"
              ],
              "type": "object",
              "properties": {
                  "userId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "__Conditional__. Yapily Identifier for the `User` returned by the create user step POST /users. Clients must either provide userId or applicationUserId."
                  },
                  "applicationUserId": {
                      "type": "string",
                      "description": "__Conditional__. Client's own `User` reference. If the client wants to work with their own unique references for individual PSUs then they can use the applicationUserId property to provide that value. Where Yapily does not already have a Yapily userId that matches the supplied applicationUserId, then a new Yapily userId is created automatically and linked to the applicationUserId value. Clients must either provide userId or applicationUserId."
                  },
                  "institutionIdentifiers": {
                      "$ref": "#/components/schemas/InstitutionIdentifiers"
                  },
                  "userSettings": {
                      "$ref": "#/components/schemas/UserSettings"
                  },
                  "redirectUrl": {
                      "type": "string",
                      "description": "URL of client's server to redirect the PSU after completion of the consent authorisation.",
                      "example": "https://tpp-application.com"
                  },
                  "oneTimeToken": {
                      "type": "boolean",
                      "description": "Used to receive a oneTimeToken rather than a consentToken at the redirectUrl for additional security. This can only be used when the redirectUrl is set.",
                      "example": "false"
                  },
                  "vrpSetup": {
                      "$ref": "#/components/schemas/VRPSetupRequest"
                  }
              }
          },
          "ApiResponseOfCreateHostedVRPConsentRequest": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "$ref": "#/components/schemas/HostedVRPConsentRequestResponse"
                  }
              }
          },
          "ApiResponseOfGetHostedVRPConsentRequest": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "$ref": "#/components/schemas/HostedVRPConsentDetails"
                  }
              }
          },
          "ApiResponseOfGetHostedVRPConsentsRequest": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "$ref": "#/components/schemas/GetHostedVRPConsentsResponse"
                  }
              }
          },
          "ApiResponseOfRevokeHostedVRPConsentRequest": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "$ref": "#/components/schemas/HostedVRPConsentDetails"
                  }
              }
          },
          "HostedVRPConsentDetails": {
              "required": [
                  "id",
                  "consentStatus",
                  "applicationId",
                  "vrpSetup"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The unique ID of the consent request."
                  },
                  "userId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Represents the Unique Identifier for the `User` assigned by Yapily."
                  },
                  "applicationUserId": {
                      "type": "string",
                      "description": "Represents the User-friendly reference to the `User`."
                  },
                  "applicationId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Represens the Unique Identifier of the `Application` the user is associated with."
                  },
                  "institutionIdentifiers": {
                      "$ref": "#/components/schemas/InstitutionIdentifiers"
                  },
                  "userSettings": {
                      "$ref": "#/components/schemas/UserSettings"
                  },
                  "redirectUrl": {
                      "type": "string",
                      "description": "URL of client's server to redirect the PSU after completion of the consent authorisation.",
                      "example": "https://tpp-application.com"
                  },
                  "vrpSetup": {
                      "$ref": "#/components/schemas/VRPSetup"
                  },
                  "createdAt": {
                      "type": "string",
                      "format": "date-time"
                  },
                  "authorisationExpiresAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Represents the date and time at which the auth Token will expire."
                  },
                  "consentToken": {
                      "type": "string",
                      "description": "Represents the authorisation to make VRP payments"
                  },
                  "consentStatus": {
                      "type": "string",
                      "description": "Current status of the authorisation. Can be one of [AWAITING_AUTHORIZATION, AUTHORIZED, REJECTED, REVOKED, FAILED, EXPIRED]"
                  },
                  "phases": {
                      "type": "array",
              "items":{
                          "$ref": "#/components/schemas/HostedVRPPhase"
                      }
                  }
              }
          },
          "CreateHostedVRPPaymentRequest": {
              "required": [
                  "paymentIdempotencyId",
                  "amount"
              ],
              "type": "object",
              "properties": {
                  "paymentIdempotencyId": {
                      "type": "string",
                      "description": "__Mandatory__. A unique identifier that you must provide to identify the payment. This can be any alpha-numeric string but is limited to a maximum of 35 characters.",
                      "example": "04ab4536gaerfc0e1f93c4f4"
                  },
                  "amount": {
                      "$ref": "#/components/schemas/Amount"
                  }
              },
              "description": "__Mandatory__. The payment request object defining the details of the payment for execution under the Variable Recurring Payment consent."
          },
          "HostedVRPPaymentResponse": {
              "type": "object",
              "properties": {
                  "id": {
                      "type": "string"
                  },
                  "paymentIdempotencyId": {
                      "type": "string"
                  },
                  "amount": {
                      "$ref": "#/components/schemas/Amount"
                  },
                  "reference": {
                      "type": "string",
                      "description": "__Optional__. The payment reference or description. Limited to a maximum of 18 characters long.",
                      "example": "Own Account Sweeping"
                  },
                  "payee": {
                      "$ref": "#/components/schemas/Payee"
                  },
                  "payer": {
                      "$ref": "#/components/schemas/HostedVrpPayerResponse"
                  },
                  "refundAccount": {
                      "$ref": "#/components/schemas/HostedVrpRefundAccount"
                  },
          "risk" : {
                      "$ref": "#/components/schemas/PaymentRisk"
                  },
                  "paymentLifecycleId": {
                      "type": "string",
                      "description": "The Unique Identifier provided by TPP in the Payment request to identify the payment."
                  },
                  "expectedExecutionTime": {
                      "type": "string",
                      "format": "date-time"
                  },
                  "expectedSettlementTime": {
                      "type": "string",
                      "format": "date-time"
                  },
                  "institutionPaymentId": {
                      "type": "string"
                  },
                  "statusDetails": {
                      "$ref": "#/components/schemas/HostedPaymentStatusDetails"
                  }
              }
          },
          "ApiResponseOfCreateHostedVRPPaymentRequest": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "$ref": "#/components/schemas/HostedVRPPaymentResponse"
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  }
              }
          },
          "ApiResponseOfGetHostedVRPPaymentRequest": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "$ref": "#/components/schemas/HostedVRPPaymentResponse"
                  },
                  "tracingId": {
                      "type": "string",
                      "writeOnly": true
                  }
              }
          },
          "VRPSetupRequest": {
              "required": [
                  "payee"
              ],
              "type": "object",
              "properties": {
                  "payer": {
                      "$ref": "#/components/schemas/Payer"
                  },
                  "payee": {
                      "$ref": "#/components/schemas/Payee"
                  },
                  "reference": {
                      "type": "string",
                      "description": "__Optional__. The payment reference or description. Limited to a maximum of 18 characters long.",
                      "example": "Own Account Sweeping"
                  },
                  "limits": {
                      "$ref": "#/components/schemas/HostedVRPLimitsRequest"
                  },
          "validFrom":{
                      "type": "string",
                      "format": "date-time",
                      "description": "__Optional__. Start date when the consent becomes valid."
                  },
                  "validTo": {
                      "type": "string",
                      "format": "date-time",
                      "description": "__Optional__. End date when the consent expires and becomes invalid."
                  },
                  "recurringPaymentCategory": {
                      "type": "string",
                      "description": "The use-case for the VRP consent supported by the bank. Allowed values: <br>`ONGOING` <br>`SUBSCRIPTION`"
                  },
                  "initialPayment": {
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/Amount"
                          }
                      ],
                      "description": "__Optional__. Initial payment to be charged under this consent. If enforced, this amount must match the first payment amount executed using this consent."
                  },
          "risk" : {
                      "$ref": "#/components/schemas/PaymentRisk"
                  }
              }
          },
          "VRPSetup": {
              "required": [
                  "payee"
              ],
              "type": "object",
              "properties": {
                  "payer": {
                      "$ref": "#/components/schemas/HostedVrpPayerResponse"
                  },
                  "payee": {
                      "$ref": "#/components/schemas/Payee"
                  },
                  "reference": {
                      "type": "string",
                      "description": "__Optional__. The payment reference or description. Limited to a maximum of 18 characters long.",
                      "example": "Own Account Sweeping"
                  },
                  "limits": {
                      "$ref": "#/components/schemas/HostedVRPLimits"
                  },
          "validFrom":{
                      "type": "string",
                      "format": "date-time",
                      "description": "__Optional__. Start date when the consent becomes valid."
                  },
                  "validTo": {
                      "type": "string",
                      "format": "date-time",
                      "description": "__Optional__. End date when the consent expires and becomes invalid."
                  },
                  "recurringPaymentCategory": {
                      "type": "string",
                      "description": "The use-case for the VRP consent supported by the bank. Allowed values: <br>`ONGOING` <br>`SUBSCRIPTION`"
                  },
                  "initialPayment": {
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/Amount"
                          }
                      ],
                      "description": "__Optional__. Initial payment to be charged under this consent. If enforced, this amount must match the first payment amount executed using this consent."
                  },
          "risk" : {
                      "$ref": "#/components/schemas/PaymentRisk"
                  }
              }
          },
          "HostedVRPConsentRequestResponse": {
              "required": [
                  "id",
                  "applicationId",
                  "hostedUrl",
                  "authToken",
                  "createdAt"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Represents the Unique Id of the VRP consent request"
                  },
                  "userId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Represents the Unique Id for the `User` assigned by Yapily."
                  },
                  "applicationUserId": {
                      "type": "string",
                      "description": "Represents the user-friendly reference to the `User`."
                  },
                  "applicationId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Represents the Unique Id of the `Application` the user is associated with."
                  },
                  "institutionIdentifiers": {
                      "$ref": "#/components/schemas/InstitutionIdentifiers"
                  },
                  "userSettings": {
                      "$ref": "#/components/schemas/UserSettings"
                  },
                  "redirectUrl": {
                      "type": "string",
                      "description": "URL of client's server to redirect the PSU after completion of the consent authorisation.",
                      "example": "https://tpp-application.com"
                  },
                  "vrpSetup": {
                      "$ref": "#/components/schemas/VRPSetupRequest"
                  },
                  "hostedUrl": {
                      "type": "string",
                      "description": "Represents the URL of Hosted UI page for the applicationId which initiates the user journey for the Consent. <br> URL would be appended with authToken, applicationId and userSettings."
                  },
                  "authToken": {
                      "type": "string",
                      "description": "Represents the JWT Token signed by the certificate-vault using Yapily's keys."
                  },
                  "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Represents the date and time at which the Consent was created."
                  },
                  "authorisationExpiresAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Represents the date and time at which the auth Token will expire."
                  }
              }
          },
          "GetHostedVRPConsentsResponse": {
              "type": "array",
              "items": {
                  "required": [
                      "id",
                      "applicationId"
                  ],
                  "type": "object",
                  "properties": {
                      "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Represents the Unique Id of the VRP consent request"
                      },
                      "applicationId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Represents the Unique Id of the `Application` the user is associated with."
                      },
                      "institutionIdentifiers": {
                          "$ref": "#/components/schemas/InstitutionIdentifiers"
                      },
                      "vrpSetup": {
                          "$ref": "#/components/schemas/VRPSetupRequest"
                      },
                      "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Represents the date and time at which the Consent was updated."
                      },
                      "consentStatus": {
                          "type": "string",
                          "description": "Current status of the authorisation. Can be one of [AWAITING_AUTHORIZATION, AUTHORIZED, REJECTED, REVOKED, FAILED, EXPIRED]"
                      }
                  }
              }
          },
          "HostedVRPPhase": {
              "type": "object",
              "properties": {
                  "phaseName": {
                      "type": "string",
                      "description": "The name of the hosted VRP consent process phase. Allowed values are : <ul> <li> INITIATED - Process initiated </li><li> DECLINED - Process failed and will not proceed further </li><li> INSTITUTION_SUBMITTED - Consent institution submitted </li><li> INPUT_CAPTURED - Additional input captured to process the Consent </li><li> IBAN_VALIDATED - Payer IBAN successfully validated </li><li> AUTHORISATION_CREATED - Consent authorisation request created with Institution, awaiting authorisation completion </li><li> AUTHORISATION_REJECTED - Consent Authorisation request rejected by Institution and will not proceed further </li><li> AUTHORISED - Consent authorisation completed </li><li> AUTHORISATION_FAILED - Consent authorisation failed and will not proceed further</li><li> SUBMITTED - Consent execution created and submitted to Institution </li><li> ACCEPTED - Consent execution accepted by Institution and awaiting settlement </li><li> REJECTED - Consent execution request rejected by Institution and will not proceed further </li><li> STATUS_POLLING_STARTED - Consent status polling started </li><li> STATUS_POLLING_ENDED - Consent status polling ended </li><li> MERCHANT_ACKNOWLEDGED - Consent acknowledgement received from merchant </li><li> FINISHED - Consent process completed </li> <li> REVOKED - Consent process completed </li>  </ul>"
                  },
                  "phaseCreatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time at which the phase of the hosted Consent was created."
                  }
              },
              "description": "The phase of the VRP Consent Request."
          },
      "PaymentRisk" : {
              "type": "object",
              "description": "Additional information about the payment that may be used for risk scoring",
              "properties": {
                  "contextType": {
                      "$ref": "#/components/schemas/PaymentContextTypeV2"
                  }
              }
          },
          "HostedVRPLimitsRequest": {
              "type": "object",
              "description": "The restrictions and limits for payments executed under the VRP consent",
              "properties": {
                  "periodicLimits": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/HostedNonSweepingPeriodicLimits"
                      }
                  },
                  "maxAmountPerPayment": {
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/Amount"
                          }
                      ],
                      "description": "__Optional__. Max amount that can be submitted per payment."
                  },
                  "maxCumulativeAmount": {
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/Amount"
                          }
                      ],
                      "description": "__Optional__. Max cumulative amount that can be submitted under this consent."
                  },
                  "maxCumulativeNumberOfPayments": {
                      "type": "integer",
                      "format": "int32",
                      "description": "__Optional__. Max number of payments that can be submitted under this consent."
                  }
              }
          },
          "HostedVRPLimits": {
              "type": "object",
              "description": "The restrictions and limits for payments executed under the VRP consent",
              "properties": {
                  "periodicLimits": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/HostedNonSweepingPeriodicLimits"
                      }
                  },
                  "maxAmountPerPayment": {
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/Amount"
                          }
                      ],
                      "description": "__Optional__. Max amount that can be submitted per payment."
                  },
                  "maxCumulativeAmount": {
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/Amount"
                          }
                      ],
                      "description": "__Optional__. Max cumulative amount that can be submitted under this consent."
                  },
                  "maxCumulativeNumberOfPayments": {
                      "type": "integer",
                      "format": "int32",
                      "description": "__Optional__. Max number of payments that can be submitted under this consent."
                  },
                  "editedByUser": {
                      "type": "boolean",
                      "description": "Indicates if the user edited the control parameters during authorisation"

                  }
              }
          },
          "HostedNonSweepingPeriodicLimits": {
              "required": [
                  "maxAmount",
                  "frequency",
                  "alignment"
              ],
              "type": "object",
              "properties": {
                  "maxAmount": {
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/Amount"
                          }
                      ],
                      "description": "__Mandatory__. Maximum amount that can be specified in all payment instructions in a given period under this VRP consent. If the Alignment is Calendar, the limit is pro-rated in the first period to the remaining number of days."
                  },
                  "frequency": {
                      "type": "string",
                      "description": "__Mandatory__. Frequency for which the payment limits are enforced. Allowed values are [MONTHLY]."
                  },
                  "alignment": {
                      "type": "string",
                      "description": "__Mandatory__. Period alignment for which the payment limits are enforced. Allowed values are [CONSENT, CALENDAR]. If CONSENT, then period starts on consent creation date. If CALENDAR, then period lines up with the frequency e.g. WEEKLY period will begin at start of the week in question."
                  }
              }
          },
          "ApiListResponseOfPaymentConstraints": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseListMeta"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PaymentConstraintsResponse"
                      }
                  }
              },
              "example": {
                  "meta": {
                      "tracingId": "661471ddb4344113a2d185b861cb3dcf"
                  },
                  "data": [
                      {
                          "institutionId": "mock-sandbox",
                          "institutionCountryCode": "GB",
                          "endpointPath": "/payments",
                          "endpointMethod": "POST",
                          "paymentType": "DOMESTIC_PAYMENT",
                          "request": {
                              "headers": {
                                  "title": "Header",
                                  "type": "object",
                                  "properties": {
                                      "psuID": {
                                          "title": "PSU Id",
                                          "type": "string",
                                          "description": ""
                                      }
                                  }
                              },
                              "body": {
                                  "title": "Payment Request",
                                  "required": [
                                      "payee",
                                      "amount",
                                      "paymentIdempotencyId",
                                      "type"
                                  ],
                                  "type": "object",
                                  "properties": {
                                      "paymentIdempotencyId": {
                                          "title": "Payment Idempotency Id",
                                          "pattern": "^.{1,35}$",
                                          "type": "string",
                                          "description": "Id for the payment"
                                      },
                                      "type": {
                                          "enum": [
                                              "DOMESTIC_PAYMENT"
                                          ],
                                          "title": "Payment Type",
                                          "type": "string",
                                          "description": "type of the payment"
                                      },
                                      "contextType": {
                                          "default": "OTHER",
                                          "enum": [
                                              "BILL",
                                              "GOODS",
                                              "SERVICES",
                                              "OTHER",
                                              "PERSON_TO_PERSON"
                                          ],
                                          "title": "Context Type",
                                          "type": "string",
                                          "description": "__Optional__. The payment context code. This defaults to `OTHER` if not specified."
                                      },
                                      "reference": {
                                          "title": "Reference",
                                          "pattern": "^.{1,18}$",
                                          "type": "string",
                                          "description": "__Mandatory__. The payment reference or description. Limited to a maximum of 18 characters long.",
                                          "example": "Bill payment"
                                      },
                                      "payee": {
                                          "title": "Payee",
                                          "required": [
                                              "accountIdentifications",
                                              "name"
                                          ],
                                          "type": "object",
                                          "properties": {
                                              "name": {
                                                  "title": "Name",
                                                  "pattern": "^.{1,18}$",
                                                  "type": "string",
                                                  "description": "__Mandatory__. The account holder name of the beneficiary.",
                                                  "example": "Jane Doe"
                                              },
                                              "accountIdentifications": {
                                                  "title": "Account Identifications",
                                                  "type": "array",
                                                  "items": {
                                                      "required": [
                                                          "identification",
                                                          "type"
                                                      ],
                                                      "type": "object",
                                                      "properties": {
                                                          "type": {
                                                              "title": "Account Identification Type",
                                                              "type": "string",
                                                              "description": "__Mandatory__. Used to describe the format of the account.<br><br> See [Account Identification Combinations](https://docs.yapily.com/pages/key-concepts/payments/payment-execution/intro-to-payment-execution/#account-identifications-combinations) for more information on when to specify each type."
                                                          },
                                                          "identification": {
                                                              "title": "Account Identification",
                                                              "type": "string",
                                                              "description": "__Mandatory__. The value associated with the account identification type.<br><br> See [Account Identification Combinations](https://docs.yapily.com/pages/key-concepts/payments/payment-execution/intro-to-payment-execution/#account-identifications-combinations) for more information on the format of the values."
                                                          }
                                                      }
                                                  },
                                                  "description": "__Mandatory__. The account identifications that identify the `Payee` bank account."
                                              },
                                              "address": {
                                                  "title": "Address",
                                                  "type": "object",
                                                  "properties": {
                                                      "addressLines": {
                                                          "title": "Address Lines",
                                                          "type": "array",
                                                          "items": {
                                                              "title": "Address Line",
                                                              "type": "string"
                                                          },
                                                          "description": "__Optional__. The address line of the address"
                                                      },
                                                      "streetName": {
                                                          "title": "Street Name",
                                                          "type": "string",
                                                          "description": "__Optional__. The street name of the address"
                                                      },
                                                      "buildingNumber": {
                                                          "title": "Building Number",
                                                          "type": "string",
                                                          "description": "__Optional__. The building number of the address"
                                                      },
                                                      "postCode": {
                                                          "title": "Postcode",
                                                          "type": "string",
                                                          "description": "__Optional__. The post code of the address"
                                                      },
                                                      "townName": {
                                                          "title": "Town",
                                                          "type": "string",
                                                          "description": "__Optional__. The town name of the address"
                                                      },
                                                      "county": {
                                                          "title": "County",
                                                          "type": "array",
                                                          "items": {
                                                              "type": "string"
                                                          },
                                                          "description": "__Optional__. The list of counties for the address"
                                                      },
                                                      "country": {
                                                          "title": "Country",
                                                          "type": "string",
                                                          "description": "__Conditional__. The 2-letter country code for the address. <br><br>An `Institution` may require you to specify the `country` when used in the context of the `Payee` to be able to make a payment"
                                                      },
                                                      "department": {
                                                          "title": "Department",
                                                          "type": "string",
                                                          "description": "__Optional__. The department for the address"
                                                      },
                                                      "subDepartment": {
                                                          "title": "Sub-department",
                                                          "type": "string",
                                                          "description": "__Optional__. The sub-department for the address"
                                                      },
                                                      "addressType": {
                                                          "enum": [
                                                              "BUSINESS",
                                                              "CORRESPONDENCE",
                                                              "DELIVERY_TO",
                                                              "MAIL_TO",
                                                              "PO_BOX",
                                                              "POSTAL",
                                                              "RESIDENTIAL",
                                                              "STATEMENT",
                                                              "UNKNOWN"
                                                          ],
                                                          "title": "Address Type",
                                                          "type": "string",
                                                          "description": "__Optional__. The type of address"
                                                      }
                                                  },
                                                  "description": "__Conditional__. The address of the `Payee` or `Payer`."
                                              }
                                          },
                                          "description": "__Mandatory__. Details of the beneficiary [person or business]."
                                      },
                                      "payer": {
                                          "title": "Payer",
                                          "required": [
                                              "accountIdentifications"
                                          ],
                                          "type": "object",
                                          "properties": {
                                              "accountIdentifications": {
                                                  "title": "Account Identifications",
                                                  "type": "array",
                                                  "items": {
                                                      "required": [
                                                          "identification",
                                                          "type"
                                                      ],
                                                      "type": "object",
                                                      "properties": {
                                                          "type": {
                                                              "enum": [
                                                                  "IBAN"
                                                              ],
                                                              "title": "Account Identification Type",
                                                              "type": "string",
                                                              "description": "__Mandatory__. Should be IBAN only."
                                                          },
                                                          "identification": {
                                                              "title": "Account Identification",
                                                              "pattern": "DE\\d{20}",
                                                              "type": "string",
                                                              "description": "__Mandatory__. The IBAN value associated with the account identity"
                                                          }
                                                      }
                                                  },
                                                  "description": "__Mandatory__. The account identifications that identify the `Payer` bank account."
                                              },
                                              "address": {
                                                  "title": "Address",
                                                  "type": "object",
                                                  "properties": {
                                                      "addressLines": {
                                                          "title": "Address Lines",
                                                          "type": "array",
                                                          "items": {
                                                              "title": "Address Line",
                                                              "type": "string"
                                                          },
                                                          "description": "__Optional__. The address line of the address"
                                                      },
                                                      "streetName": {
                                                          "title": "Street Name",
                                                          "type": "string",
                                                          "description": "__Optional__. The street name of the address"
                                                      },
                                                      "buildingNumber": {
                                                          "title": "Building Number",
                                                          "type": "string",
                                                          "description": "__Optional__. The building number of the address"
                                                      },
                                                      "postCode": {
                                                          "title": "Postcode",
                                                          "type": "string",
                                                          "description": "__Optional__. The post code of the address"
                                                      },
                                                      "townName": {
                                                          "title": "Town",
                                                          "type": "string",
                                                          "description": "__Optional__. The town name of the address"
                                                      },
                                                      "county": {
                                                          "title": "County",
                                                          "type": "array",
                                                          "items": {
                                                              "type": "string"
                                                          },
                                                          "description": "__Optional__. The list of counties for the address"
                                                      },
                                                      "country": {
                                                          "title": "Country",
                                                          "type": "string",
                                                          "description": "__Conditional__. The 2-letter country code for the address. <br><br>An `Institution` may require you to specify the `country` when used in the context of the `Payee` to be able to make a payment"
                                                      },
                                                      "department": {
                                                          "title": "Department",
                                                          "type": "string",
                                                          "description": "__Optional__. The department for the address"
                                                      },
                                                      "subDepartment": {
                                                          "title": "Sub-department",
                                                          "type": "string",
                                                          "description": "__Optional__. The sub-department for the address"
                                                      },
                                                      "addressType": {
                                                          "enum": [
                                                              "BUSINESS",
                                                              "CORRESPONDENCE",
                                                              "DELIVERY_TO",
                                                              "MAIL_TO",
                                                              "PO_BOX",
                                                              "POSTAL",
                                                              "RESIDENTIAL",
                                                              "STATEMENT",
                                                              "UNKNOWN"
                                                          ],
                                                          "title": "Address Type",
                                                          "type": "string",
                                                          "description": "__Optional__. The type of address"
                                                      }
                                                  },
                                                  "description": "__Conditional__. The address of the `Payee` or `Payer`."
                                              }
                                          }
                                      },
                                      "amount": {
                                          "title": "Amount",
                                          "required": [
                                              "amount",
                                              "currency"
                                          ],
                                          "type": "object",
                                          "properties": {
                                              "amount": {
                                                  "title": "Amount",
                                                  "minimum": 0,
                                                  "type": "number",
                                                  "description": "__Mandatory__. The monetary value"
                                              },
                                              "currency": {
                                                  "title": "Currency",
                                                  "pattern": "^[A-Z]{3,3}$",
                                                  "type": "string",
                                                  "description": "__Mandatory__. The [ISO 4217](https://www.xe.com/iso4217.php) currency code"
                                              }
                                          },
                                          "description": "__Mandatory__. Monetary Amount."
                                      },
                                      "paymentDateTime": {
                                          "type": "string",
                                          "description": "__Optional__, If present date should be greater than or equal to current date",
                                          "format": "date-time"
                                      }
                                  },
                                  "description": "Domestic payment request schema"
                              }
                          }
                      }
                  ]
              }
          },
          "PaymentConstraintsResponse": {
              "required": [
                  "institutionId",
                  "institutionCountry",
                  "paymentType",
                  "request"
              ],
              "type": "object",
              "properties": {
                  "institutionId": {
                      "type": "string",
                      "description": "The id to represent the `Institution`.",
                      "example": "modelo-sandbox"
                  },
                  "institutionCountryCode": {
                      "type": "string",
                      "description": "2 letter ISO Country code of the `Institution`.",
                      "example": "GB"
                  },
                  "endpointPath": {
                      "type": "string",
                      "description": "Define the applicable API end point."
                  },
                  "endpointMethod": {
                      "type": "string",
                      "description": "Https Method for the endpoint."
                  },
                  "paymentType": {
                      "$ref": "#/components/schemas/PaymentTypeOfConstraints"
                  },
                  "request": {
                      "$ref": "#/components/schemas/RequestConstraints"
                  }
              }
          },
          "RequestConstraints": {
              "required": [
                  "body"
              ],
              "type": "object",
              "description": "Object defining the constraints rules applicable for a given requests.",
              "properties": {
                  "headers": {
                      "$ref": "#/components/schemas/Schema"
                  },
                  "body": {
                      "$ref": "#/components/schemas/Schema"
                  }
              }
          },
          "ApiListResponseOfDataConstraints": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/DataConstraintsResponse"
                      }
                  }
              },
              "example": {
                  "meta": {
                      "tracingId": "a43049c1dbc04d6f8c8e2dfdc523217a"
                  },
                  "data": [
                      {
                          "institutionId": "mock-sandbox",
                          "institutionCountryCode": "GB",
                          "endpointPath": "/account-auth-requests",
                          "endpointMethod": "POST",
                          "request": {
                              "headers": {
                                  "title": "Header",
                                  "type": "object",
                                  "properties": {
                                      "psuID": {
                                          "title": "PSU Id",
                                          "type": "string",
                                          "description": "__Mandatory__. The psu id"
                                      }
                                  }
                              },
                              "body": {
                                  "required": [
                                      "institutionId"
                                  ],
                                  "type": "object",
                                  "properties": {
                                      "userUuid": {
                                          "title": "User UUID",
                                          "type": "string",
                                          "format": "uuid"
                                      },
                                      "institutionId": {
                                          "title": "Institution Identifier",
                                          "type": "string",
                                          "description": "__Mandatory__. The reference to the `Institution` which identifies which institution the authorisation request is sent to.",
                                          "example": "yapily-mock"
                                      },
                                      "oneTimeToken": {
                                          "title": "One Time Token",
                                          "type": "boolean",
                                          "description": "__Conditional__. Used to receive a `oneTimeToken` rather than a `consentToken` at the `callback` for additional security. This can only be used when the `callback` is set. <br><br>See [Using a callback with an OTT (Optional)](https://docs.yapily.com/pages/knowledge/yapily-concepts/callback_url/#using-a-callback-with-an-ott-optional) for more information.",
                                          "example": false
                                      },
                                      "callback": {
                                          "title": "Callback",
                                          "type": "string",
                                          "description": "__Optional__. The server to redirect the user to after the user complete the authorisation at the `Institution`. <br><br>See [Using a callback (Optional)](https://docs.yapily.com/pages/knowledge/yapily-concepts/callback_url/#using-a-callback-optional) for more information.",
                                          "example": "https://display-parameters.com"
                                      },
                                      "accountRequest": {
                                          "title": "Account Request",
                                          "type": "object",
                                          "properties": {
                                              "transactionFrom": {
                                                  "title": "Transaction From Date",
                                                  "type": "string",
                                                  "description": "__Optional__. Used to specify the lower bound on when to pull transaction. This should be declared when accessing transaction older than 90 days for banks in the [CBI Globe](https://docs.yapily.com/pages/knowledge/open-banking/cbi_globe/).",
                                                  "format": "date-time"
                                              },
                                              "transactionTo": {
                                                  "title": "Transaction To Date",
                                                  "type": "string",
                                                  "description": "__Optional__. When performing a request using the consent, this is the latest date of transaction records that can be retrieved.",
                                                  "format": "date-time"
                                              },
                                              "expiresAt": {
                                                  "title": "Expires At",
                                                  "type": "string",
                                                  "description": "__Optional__. Used to set a hard date for when the user's associated `Consent` will expire.<br><br>**Note**: If this supported by the bank, specifying this is property is opting out of having a long-lived consent that can be perpetually re-authorised by the user. This will add an `expiresAt` field on the `Consent` object which will render it unusable after this date.<br><br>**Note**: This is not supported by every `Institution`. In such case, the request will not fail but the property will be ignored and the created `Consent` will not have an expiry date.",
                                                  "format": "date-time"
                                              },
                                              "accountIdentifiers": {
                                                  "title": "Account Info",
                                                  "required": [
                                                      "accountIdentification"
                                                  ],
                                                  "type": "object",
                                                  "properties": {
                                                      "accountId": {
                                                          "type": "string",
                                                          "description": "__Conditional__. Unique identifier of the account.",
                                                          "example": "500000000000000000000001"
                                                      },
                                                      "accountIdentification": {
                                                          "title": "Account Identifications",
                                                          "required": [
                                                              "identification",
                                                              "type"
                                                          ],
                                                          "type": "object",
                                                          "properties": {
                                                              "type": {
                                                                  "enum": [
                                                                      "SORT_CODE",
                                                                      "ACCOUNT_NUMBER",
                                                                      "IBAN",
                                                                      "BBAN",
                                                                      "BIC",
                                                                      "PAN",
                                                                      "MASKED_PAN",
                                                                      "MSISDN",
                                                                      "BSB",
                                                                      "NCC",
                                                                      "ABA",
                                                                      "ABA_WIRE",
                                                                      "ABA_ACH",
                                                                      "EMAIL",
                                                                      "ROLL_NUMBER",
                                                                      "BLZ",
                                                                      "IFS",
                                                                      "CLABE",
                                                                      "CTN",
                                                                      "BRANCH_CODE",
                                                                      "VIRTUAL_ACCOUNT_ID"
                                                                  ],
                                                                  "title": "Account Identification Type",
                                                                  "type": "string",
                                                                  "description": "__Mandatory__. Used to describe the format of the account.<br><br> See [Account Identification Combinations](https://docs.yapily.com/pages/key-concepts/payments/payment-execution/intro-to-payment-execution/#account-identifications-combinations) for more information on when to specify each type.",
                                                                  "example": "SORT_CODE"
                                                              },
                                                              "identification": {
                                                                  "title": "Account Identification",
                                                                  "type": "string",
                                                                  "description": "__Mandatory__. The value associated with the account identification type.<br><br> See [Account Identification Combinations](https://docs.yapily.com/pages/key-concepts/payments/payment-execution/intro-to-payment-execution/#account-identifications-combinations) for more information on the format of the values.",
                                                                  "example": "401016"
                                                              }
                                                          }
                                                      }
                                                  },
                                                  "description": "__Conditional__. Used to create a request for the balance of the account specified. Once the user authorises the request, only the balance can be obtained by executing [GET Account Balances](./#get-account-balances).<br><br> This can be specified in conjunction with `accountIdentifiersForTransaction` to generate a `Consent` that can both access the accounts balance and transactions."
                                              },
                                              "accountIdentifiersForTransaction": {
                                                  "type": "array",
                                                  "items": {
                                                      "required": [
                                                          "accountIdentification"
                                                      ],
                                                      "type": "object",
                                                      "properties": {
                                                          "accountId": {
                                                              "type": "string",
                                                              "description": "__Conditional__. Unique identifier of the account.",
                                                              "example": "500000000000000000000001"
                                                          },
                                                          "accountIdentification": {
                                                              "title": "Account Identifications",
                                                              "required": [
                                                                  "identification",
                                                                  "type"
                                                              ],
                                                              "type": "object",
                                                              "properties": {
                                                                  "type": {
                                                                      "enum": [
                                                                          "SORT_CODE",
                                                                          "ACCOUNT_NUMBER",
                                                                          "IBAN",
                                                                          "BBAN",
                                                                          "BIC",
                                                                          "PAN",
                                                                          "MASKED_PAN",
                                                                          "MSISDN",
                                                                          "BSB",
                                                                          "NCC",
                                                                          "ABA",
                                                                          "ABA_WIRE",
                                                                          "ABA_ACH",
                                                                          "EMAIL",
                                                                          "ROLL_NUMBER",
                                                                          "BLZ",
                                                                          "IFS",
                                                                          "CLABE",
                                                                          "CTN",
                                                                          "BRANCH_CODE",
                                                                          "VIRTUAL_ACCOUNT_ID"
                                                                      ],
                                                                      "title": "Account Identification Type",
                                                                      "type": "string",
                                                                      "description": "__Mandatory__. Used to describe the format of the account.<br><br> See [Account Identification Combinations](https://docs.yapily.com/pages/key-concepts/payments/payment-execution/intro-to-payment-execution/#account-identifications-combinations) for more information on when to specify each type.",
                                                                      "example": "SORT_CODE"
                                                                  },
                                                                  "identification": {
                                                                      "title": "Account Identification",
                                                                      "type": "string",
                                                                      "description": "__Mandatory__. The value associated with the account identification type.<br><br> See [Account Identification Combinations](https://docs.yapily.com/pages/key-concepts/payments/payment-execution/intro-to-payment-execution/#account-identifications-combinations) for more information on the format of the values.",
                                                                      "example": "401016"
                                                                  }
                                                              }
                                                          }
                                                      }
                                                  },
                                                  "description": "__Conditional__. Used to create a request for the transactions of the account specified. Once the user authorises the request, only the transactions can be obtained by executing [GET Account Transactions](./#get-account-transactions). <br><br>This can be specified in conjunction with `accountIdentifiersForBalance` to generate a `Consent` that can both access the accounts balance and transactions."
                                              },
                                              "accountIdentifiersForBalance": {
                                                  "type": "array",
                                                  "items": {
                                                      "required": [
                                                          "accountIdentification"
                                                      ],
                                                      "type": "object",
                                                      "properties": {
                                                          "accountId": {
                                                              "type": "string",
                                                              "description": "__Conditional__. Unique identifier of the account.",
                                                              "example": "500000000000000000000001"
                                                          },
                                                          "accountIdentification": {
                                                              "title": "Account Identifications",
                                                              "required": [
                                                                  "identification",
                                                                  "type"
                                                              ],
                                                              "type": "object",
                                                              "properties": {
                                                                  "type": {
                                                                      "enum": [
                                                                          "SORT_CODE",
                                                                          "ACCOUNT_NUMBER",
                                                                          "IBAN",
                                                                          "BBAN",
                                                                          "BIC",
                                                                          "PAN",
                                                                          "MASKED_PAN",
                                                                          "MSISDN",
                                                                          "BSB",
                                                                          "NCC",
                                                                          "ABA",
                                                                          "ABA_WIRE",
                                                                          "ABA_ACH",
                                                                          "EMAIL",
                                                                          "ROLL_NUMBER",
                                                                          "BLZ",
                                                                          "IFS",
                                                                          "CLABE",
                                                                          "CTN",
                                                                          "BRANCH_CODE",
                                                                          "VIRTUAL_ACCOUNT_ID"
                                                                      ],
                                                                      "title": "Account Identification Type",
                                                                      "type": "string",
                                                                      "description": "__Mandatory__. Used to describe the format of the account.<br><br> See [Account Identification Combinations](https://docs.yapily.com/pages/key-concepts/payments/payment-execution/intro-to-payment-execution/#account-identifications-combinations) for more information on when to specify each type.",
                                                                      "example": "SORT_CODE"
                                                                  },
                                                                  "identification": {
                                                                      "title": "Account Identification",
                                                                      "type": "string",
                                                                      "description": "__Mandatory__. The value associated with the account identification type.<br><br> See [Account Identification Combinations](https://docs.yapily.com/pages/key-concepts/payments/payment-execution/intro-to-payment-execution/#account-identifications-combinations) for more information on the format of the values.",
                                                                      "example": "401016"
                                                                  }
                                                              }
                                                          }
                                                      }
                                                  },
                                                  "description": "__Conditional__. Used to create a request for the transactions of the account specified. Once the user authorises the request, only the transactions can be obtained by executing [GET Account Transactions](./#get-account-transactions). <br><br>This can be specified in conjunction with `accountIdentifiersForBalance` to generate a `Consent` that can both access the accounts balance and transactions."
                                              },
                                              "featureScope": {
                                                  "title": "Feature Scope",
                                                  "type": "array",
                                                  "items": {
                                                      "type": "string"
                                                  },
                                                  "description": "Used to describe what functions are supported by the associated `Institution`"
                                              }
                                          },
                                          "description": "Account authorisation request schema"
                                      }
                                  },
                                  "description": "The request body containing an `AccountAuthorisationRequest` json payload"
                              }
                          }
                      }
                  ]
              }
          },
          "DataConstraintsResponse": {
              "required": [
                  "institutionId",
                  "institutionCountry",
                  "request"
              ],
              "type": "object",
              "properties": {
                  "institutionId": {
                      "type": "string",
                      "description": "The id to represent the `Institution`.",
                      "example": "modelo-sandbox"
                  },
                  "institutionCountryCode": {
                      "type": "string",
                      "description": "2 letter ISO Country code of the `Institution`.",
                      "example": "GB"
                  },
                  "endpointPath": {
                      "type": "string",
                      "description": "Define the applicable API end point."
                  },
                  "endpointMethod": {
                      "type": "string",
                      "description": "Https Method for the endpoint."
                  },
                  "request": {
                      "$ref": "#/components/schemas/RequestConstraints"
                  }
              }
          },
          "SchemaType": {
              "type": "string",
              "enum": [
                  "array",
                  "boolean",
                  "integer",
                  "number",
                  "object",
                  "string"
              ]
          },
          "Schema": {
              "type": "object",
              "properties": {
                  "title": {
                      "type": "string"
                  },
                  "maximum": {
                      "type": "number"
                  },
                  "exclusiveMaximum": {
                      "type": "number"
                  },
                  "minimum": {
                      "type": "number"
                  },
                  "exclusiveMinimum": {
                      "type": "number"
                  },
                  "pattern": {
                      "type": "string",
                      "format": "regex"
                  },
                  "maxItems": {
                      "type": "integer",
                      "minimum": 0
                  },
                  "minItems": {
                      "type": "integer",
                      "minimum": 0
                  },
                  "uniqueItems": {
                      "type": "boolean"
                  },
                  "required": {
                      "type": "array",
                      "items": {
                          "type": "string"
                      },
                      "minItems": 1,
                      "uniqueItems": true
                  },
                  "enum": {
                      "type": "array",
            "items": {
            },
                      "minItems": 1,
                      "uniqueItems": false
                  },
                  "type": {
                      "$ref": "#/components/schemas/SchemaType"
                  },
                  "contains": {
                      "$ref": "#/components/schemas/Schema"
                  },
                  "not": {
                      "$ref": "#/components/schemas/Schema"
                  },
                  "if": {
                      "$ref": "#/components/schemas/Schema"
                  },
                  "then": {
                      "$ref": "#/components/schemas/Schema"
                  },
                  "else": {
                      "$ref": "#/components/schemas/Schema"
                  },
                  "allOf": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/Schema"
                      }
                  },
                  "oneOf": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/Schema"
                      }
                  },
                  "anyOf": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/Schema"
                      }
                  },
                  "items": {
                      "$ref": "#/components/schemas/Schema"
                  },
                  "properties": {
                      "type": "object",
                      "additionalProperties": {
                          "$ref": "#/components/schemas/Schema"
                      }
                  },
                  "description": {
                      "type": "string"
                  },
                  "format": {
                      "type": "string"
                  },
          "default": {
          },
          "example": {
          },
                  "dependentRequired": {
                      "description": "dependentRequired keyword is used to satisfy dependency between fields",
                      "type": "object",
                      "additionalProperties": {
                          "type": "array",
                          "items": {
                              "type": "string"
                          },
                          "uniqueItems": true,
                          "default": []
                      }
                  },
                  "$defs": {
                      "type": "object",
                      "additionalProperties": {
                          "$ref": "#/components/schemas/Schema"
                      }
                  },
                  "$ref": {
                      "type": "string"
                  },
                  "x-yapily-annotations": {
                      "type": "object",
                      "properties": {
                          "lastUpdatedAt": {
                              "type": "string",
                              "format": "date-time"
                          }
                      }
                  },
                  "x-yapily-validations": {
                      "type": "object",
                      "properties": {
                          "maxDurationFromNow": {
                              "type": "string",
                              "format": "duration"
                          }
                      }
                  }
              },
              "additionalProperties": false
          },
          "ApplicationRequest": {
              "type": "object",
              "required": [
                  "name",
                  "merchantCategoryCode",
                  "ppcUserGroup",
                  "isContractPresent"
              ],
              "properties": {
                  "name": {
                      "type": "string",
                      "format": "^[a-zA-Z0-9 \\-_\\[\\]\\(\\)]+$",
                      "description": "The name of the application"
                  },
                  "merchantCategoryCode": {
                      "type": "string",
                      "format": "^\\d{4}$",
                      "description": "The ISO-18245 merchant category code of the merchant the application is being created for.<br><br>Allowed values:<ul><li>`0742` (Veterinary Services)</li><li>`0763` (Agricultural Cooperatives)</li><li>`0780` (Landscaping and Horticultural Services)</li><li>`1520` (General Contractor/Residential Building)</li><li>`1711` (Heating, Plumbing, Air Conditioning Contractors)</li><li>`1731` (Electrical Contractors)</li><li>`1740` (Masonry, Stonework, Tile Setting, Plastering, Insulation Contractors)</li><li>`1750` (Carpentry)</li><li>`1761` (Roof, Siding, and Sheet Metal Work Contractors)</li><li>`1771` (Contractors, Concrete)</li><li>`1799` (Special Trade Contractor - Not Elsewhere Classified)</li><li>`2741` (Miscellaneous Publishing and Printing Services)</li><li>`2791` (Typesetting, Plate Making and Related Services (Business to Business MCC))</li><li>`2842` (Specialty Cleaning, Polishing and Sanitation Preparations (Business to Business MCC))</li><li>`3000` (United Airlines)</li><li>`3001` (American Airlines)</li><li>`3002` (Pan American)</li><li>`3003` (Eurofly Airlines)</li><li>`3004` (Dragon Airlines)</li><li>`3005` (British Airways)</li><li>`3006` (Japan Air Lines)</li><li>`3007` (Air France)</li><li>`3008` (Lufthansa)</li><li>`3009` (Air Canada)</li><li>`3010` (KLM)</li><li>`3011` (AeroFlot)</li><li>`3012` (Qantas)</li><li>`3013` (Alitalia)</li><li>`3014` (Saudi Arabian Airlines)</li><li>`3015` (SWISS)</li><li>`3016` (SAS)</li><li>`3017` (South African Airway)</li><li>`3018` (Varig (Brazil))</li><li>`3020` (Air India)</li><li>`3021` (Air Algerie)</li><li>`3022` (PAL AIR)</li><li>`3023` (Mexicana)</li><li>`3024` (Pakistan International)</li><li>`3025` (Air New Zealand Ltd.)</li><li>`3026` (Emirates Airlines)</li><li>`3027` (UTA/InterAir)</li><li>`3028` (Air Malta)</li><li>`3029` (SN Brussels Airlines - SN BRUSSELS)</li><li>`3030` (Aerolineas Argentinas)</li><li>`3031` (Olympic Airways)</li><li>`3032` (El Al)</li><li>`3033` (Ansett Airlines)</li><li>`3034` (ETIHADAIR)</li><li>`3035` (TAP (Portugal))</li><li>`3036` (VASP (Brazil))</li><li>`3037` (EgyptAir)</li><li>`3038` (Kuwait Airways)</li><li>`3039` (Avianca)</li><li>`3040` (GulfAir (Bahrain))</li><li>`3041` (Balkan-Bulgarian)</li><li>`3042` (FinnAir)</li><li>`3043` (Aer Lingus)</li><li>`3044` (Air Lanka)</li><li>`3045` (Nigeria Airways)</li><li>`3046` (Cruzeiro do Sul (Bra))</li><li>`3047` (THY (Turkey))</li><li>`3048` (Royal Air Maroc)</li><li>`3049` (Tunis Air)</li><li>`3050` (Icelandair)</li><li>`3051` (Austrian Airlines)</li><li>`3052` (LANAIR)</li><li>`3053` (AVIACO (Spain))</li><li>`3054` (Ladeco (Chile))</li><li>`3055` (LAB (Bolivia))</li><li>`3056` (JetAir)</li><li>`3057` (Virgin America â VIR AMER)</li><li>`3058` (Delta)</li><li>`3059` (DBA Airlines-DBA AIR)</li><li>`3060` (NWA Air)</li><li>`3061` (Continental)</li><li>`3062` (Hapag-Lloyd Express - HLX)</li><li>`3063` (US Airways)</li><li>`3064` (Adria Airways)</li><li>`3065` (Airinter (AirInternational))</li><li>`3066` (Southwest)</li><li>`3068` (AIR STANA)</li><li>`3069` (Sun Country Air)</li><li>`3070` (Pacific Southwest Airlines (PSA))</li><li>`3071` (Air British Columbia)</li><li>`3072` (CEBU PAC)</li><li>`3073` (Air Cal)</li><li>`3075` (Singapore Airlines)</li><li>`3076` (Aeromexico)</li><li>`3077` (Thai Airways)</li><li>`3078` (China Airlines)</li><li>`3079` (Jetstar Airways - Jetstar)</li><li>`3081` (NordAir)</li><li>`3082` (Korean Airlines)</li><li>`3083` (Air Afrique)</li><li>`3084` (Eva Airlines)</li><li>`3085` (Midwest Express Airlines, Inc)</li><li>`3087` (Metro Airlines)</li><li>`3088` (Croatia Airlines)</li><li>`3089` (Tans Saero)</li><li>`3090` (Uni Airways)</li><li>`3094` (Zambia Airways)</li><li>`3096` (Air Zimbabwe)</li><li>`3097` (Spanair (abbreviation: SPANAIR))</li><li>`3098` (Asiana Airlines)</li><li>`3099` (Cathay Pacific)</li><li>`3100` (Malaysian Airline Sys)</li><li>`3102` (Iberia)</li><li>`3103` (Garuda (Indonesia))</li><li>`3105` (Piedmont)</li><li>`3106` (Braathens S.A.F.E. (Norway))</li><li>`3110` (Wings Airways)</li><li>`3111` (British Midland)</li><li>`3112` (Windward Island)</li><li>`3117` (Venezolana Int de Aviacion)</li><li>`3118` (Valley Airlines)</li><li>`3125` (Tan Airlines)</li><li>`3126` (Talair PTY Ltd.)</li><li>`3127` (Taca International)</li><li>`3129` (Surinam Airways)</li><li>`3130` (Sunworld International Airways)</li><li>`3131` (VLM Air)</li><li>`3132` (Frontier Airlines)</li><li>`3133` (Sunbelt Airlines)</li><li>`3135` (Sudan Airlines)</li><li>`3136` (Qatar Air)</li><li>`3137` (Singleton)</li><li>`3138` (Simmons Airlines)</li><li>`3141` (Seair Alaska)</li><li>`3143` (Scenic Airlines)</li><li>`3144` (Virgin Atlantic)</li><li>`3145` (San Juan)</li><li>`3146` (Luxair)</li><li>`3148` (Air Littoral SA)</li><li>`3151` (Air Laire)</li><li>`3154` (Princeville)</li><li>`3156` (Go Fly)</li><li>`3159` (PBA-Provincetwn-Bstn Air)</li><li>`3161` (All Nippon Airways)</li><li>`3164` (Norontair)</li><li>`3165` (New York Helicopter)</li><li>`3167` (Aero Continente - AEROCONTINENTE)</li><li>`3170` (Mount Cook)</li><li>`3171` (Canadian Airlines)</li><li>`3172` (Nation Air)</li><li>`3174` (JetBlue Airways)</li><li>`3175` (Middle East Air)</li><li>`3176` (Metroflight Airlines)</li><li>`3177` (AirTran Airways)</li><li>`3178` (Mesa Air)</li><li>`3180` (Westjet Airlines-WESTJET)</li><li>`3181` (Malev Hungarian Airlines)</li><li>`3182` (LOT (Poland))</li><li>`3183` (Oman Aviation - OMAN AIR)</li><li>`3184` (LIAT)</li><li>`3185` (LAV (Venezuela))</li><li>`3186` (LAP (Paraguay))</li><li>`3187` (LACSA (Costa Rica))</li><li>`3188` (Virgin Express - VIR EXP)</li><li>`3190` (Jugoslav Air)</li><li>`3191` (Island Airlines)</li><li>`3192` (Iran Air)</li><li>`3193` (Indian Airlines)</li><li>`3195` (Holiday Airlines)</li><li>`3196` (Hawaiian Air)</li><li>`3197` (Havasu Airlines)</li><li>`3198` (Harbor Airlines)</li><li>`3199` (Servicios Aereos Militares)</li><li>`3200` (Guyana Airways)</li><li>`3203` (Golden Pacific Air)</li><li>`3204` (Freedom Airlines)</li><li>`3206` (China Eastern Airlines (Abbr: China East Air))</li><li>`3207` (Empresa Ecuatoriana)</li><li>`3211` (Norwegian Air Shuttle - NORWEGIANAIR)</li><li>`3212` (Dominicana de Aviacion)</li><li>`3213` (Malmo Aviation - MALMO AV)</li><li>`3215` (Dan Air Services)</li><li>`3216` (Cumberland Airlines)</li><li>`3217` (CSA-Ceskoslovenske Aeroln)</li><li>`3218` (Crown Air)</li><li>`3219` (Copa)</li><li>`3220` (Compania Faucett)</li><li>`3221` (Transportes Aeros Mil)</li><li>`3222` (Command Airways)</li><li>`3223` (Comair)</li><li>`3226` (Skyways Air- SKYWAYS)</li><li>`3228` (Cayman Airways)</li><li>`3229` (SAETA)</li><li>`3231` (SAHSA)</li><li>`3233` (Capitol Air)</li><li>`3234` (CARIBAIR)</li><li>`3235` (Brockway Air)</li><li>`3236` (Air Arabia Airlines - Air Arab)</li><li>`3238` (Bemidji Aviation)</li><li>`3239` (Bar Harbor Airlines)</li><li>`3240` (Bahamasair)</li><li>`3241` (Aviateca (Guatemala))</li><li>`3242` (Avensa)</li><li>`3243` (Austrian Air Service)</li><li>`3245` (Easy Jet - EASYJET)</li><li>`3246` (Ryan Air - RYANAIR)</li><li>`3247` (Gol Airlines - GOL)</li><li>`3248` (Tam Airlines - TAM)</li><li>`3251` (Aloha Airlines)</li><li>`3252` (ALM-Antilean Airlines)</li><li>`3253` (America West)</li><li>`3254` (U.S. Air Shuttle)</li><li>`3256` (Alaska Airlines Inc.)</li><li>`3259` (American Trans Air)</li><li>`3260` (Spirit Airlines - SPIRIT)</li><li>`3261` (Air China)</li><li>`3262` (Reno Air)</li><li>`3263` (Aero Servicio Carabobo)</li><li>`3266` (Air Seychelles)</li><li>`3267` (Air Panama International)</li><li>`3268` (Air Pacific)</li><li>`3275` (Air Nevada)</li><li>`3276` (Air Midwest)</li><li>`3277` (Air Madagascar)</li><li>`3279` (Air LA)</li><li>`3280` (Air Jamaica)</li><li>`3282` (Air Djibouti)</li><li>`3284` (Aero Virgin Islands)</li><li>`3285` (AeroPeru)</li><li>`3286` (Aero Nicaraguensis)</li><li>`3287` (Aero Coach Aviation)</li><li>`3291` (Ariana Afghan)</li><li>`3292` (Cyprus Airways)</li><li>`3293` (Ecuatoriana)</li><li>`3294` (Ethiopian Airlines)</li><li>`3295` (Kenya Airways)</li><li>`3296` (Air Berlin-AIRBERLIN)</li><li>`3297` (Tarom Romanian Air Transport)</li><li>`3298` (Air Mauritius)</li><li>`3299` (Wideroe's Flyveselskap)</li><li>`3351` (Affiliated Auto Rental)</li><li>`3352` (American International)</li><li>`3353` (Brooks Rent a Car)</li><li>`3354` (Action Auto Rental)</li><li>`3355` (SIXT Car Rental)</li><li>`3357` (Hertz)</li><li>`3359` (Payless Car Rental)</li><li>`3360` (Snappy Car Rental)</li><li>`3361` (Airways Rent a Car)</li><li>`3362` (Altra Auto Rental)</li><li>`3364` (Agency Rent a Car)</li><li>`3366` (Budget Rent a Car)</li><li>`3368` (Holiday R-A-C)</li><li>`3370` (Rent-a-Wreck)</li><li>`3374` (Accent Rent-A-Car)</li><li>`3376` (Ajax R-A-C)</li><li>`3380` (Triangle Rent a Car)</li><li>`3381` (Europ Car)</li><li>`3385` (Tropical R-A-C)</li><li>`3386` (Showcase Rental Cars)</li><li>`3387` (Alamo Rent a Car)</li><li>`3388` (Merchants Rent-A-Car, Inc)</li><li>`3389` (Avis R-A-C)</li><li>`3390` (Dollar R-A-C)</li><li>`3391` (Europe by Car)</li><li>`3393` (National Car Rental)</li><li>`3394` (Kemwell Group R-A-C)</li><li>`3395` (Thrify Car Rental)</li><li>`3396` (Tilden R-A-C)</li><li>`3398` (Econo Car R-A-C)</li><li>`3400` (Auto Host Car Rentals)</li><li>`3405` (Enterprise R-A-C)</li><li>`3409` (General Rent-a-Car)</li><li>`3412` (A-1 R-A-C)</li><li>`3414` (Godfrey National)</li><li>`3420` (ANSA International)</li><li>`3421` (Allstate Rent-a-Car)</li><li>`3423` (Avcar Rent-a-Car)</li><li>`3425` (Automate Rent-a-Car)</li><li>`3427` (Avon Rent-a-Car)</li><li>`3428` (Carey Rent-a-Car)</li><li>`3429` (Insurance Rent-a-Car)</li><li>`3430` (Major Rent-a-Car)</li><li>`3431` (Replacement Rent-a-Car)</li><li>`3432` (Reserve Rent-a-Car)</li><li>`3433` (Ugly Duckling R-A-C)</li><li>`3434` (USA Rent-a-Car)</li><li>`3435` (Value Rent-a-Car)</li><li>`3436` (Autohansa Rent-a-Car)</li><li>`3437` (Cite)</li><li>`3438` (Interenet Rent-a-Car)</li><li>`3439` (Millville Rent-a-Car)</li><li>`3441` (Advantage Rent A Car)</li><li>`3501` (Holiday Inns)</li><li>`3502` (Best Western Hotels)</li><li>`3503` (Sheraton)</li><li>`3504` (Hilton)</li><li>`3505` (Forte Hotels)</li><li>`3506` (Golden Tulip Hotels)</li><li>`3507` (Friendship Inns)</li><li>`3508` (Quality Inns)</li><li>`3509` (Marriott)</li><li>`3510` (Days Inn Colonial Resort)</li><li>`3511` (Arabella Hotels)</li><li>`3512` (Intercontinental Hotels)</li><li>`3513` (Westin)</li><li>`3514` (Amerisuites)</li><li>`3515` (Rodeway Inn)</li><li>`3516` (LaQuinta Motor Inns)</li><li>`3517` (Americana Hotels)</li><li>`3518` (Sol Hotels)</li><li>`3519` (Pullman International Hotels)</li><li>`3520` (Meridien Hotels)</li><li>`3521` (Royal Lahaina Resort)</li><li>`3522` (Tokyo Group)</li><li>`3523` (Peninsula Hotels)</li><li>`3524` (WelcomGroup Hotels)</li><li>`3525` (Dunfey Hotels)</li><li>`3526` (Prince Hotels)</li><li>`3527` (Downtowner Passport)</li><li>`3528` (Red Lion Inns)</li><li>`3529` (CP (Canadian Pacific))</li><li>`3530` (Renaissance Hotels)</li><li>`3531` (Kauai Coconut Beach Resort)</li><li>`3532` (Royal Kona Resort)</li><li>`3533` (Hotel Ibis)</li><li>`3534` (Southern Pacific)</li><li>`3535` (Hilton International)</li><li>`3536` (AMFAC Hotels)</li><li>`3537` (ANA Hotels)</li><li>`3538` (Concorde Hotels)</li><li>`3539` (Summerfield Suites Hotel)</li><li>`3540` (Iberotel Hotels)</li><li>`3541` (Hotel Okura)</li><li>`3542` (Royal Hotels)</li><li>`3543` (Four Seasons)</li><li>`3544` (Cigna Hotels)</li><li>`3545` (Shangri-La International)</li><li>`3546` (Hotel Sierra)</li><li>`3548` (Hotels Melia)</li><li>`3549` (Auberge des Governeurs)</li><li>`3550` (Regal 8 Inns)</li><li>`3551` (Mirage Hotel and Casino)</li><li>`3552` (Coast Hotel)</li><li>`3553` (Park Inn by Radisson)</li><li>`3554` (Pinehurst Resort)</li><li>`3555` (Treasure Island Hotel and Casino)</li><li>`3556` (Barton Creek Resort)</li><li>`3557` (Manhattan East Suite Hotels)</li><li>`3558` (Jolly Hotels)</li><li>`3559` (Candlewood Suites)</li><li>`3560` (Aladdin Resort and Casino)</li><li>`3561` (Golden Nugget)</li><li>`3562` (Comfort Inns)</li><li>`3563` (Journey's End Motels)</li><li>`3564` (Sam's Town Hotel and Casino)</li><li>`3565` (Relax Inns)</li><li>`3566` (Garden Place Hotel)</li><li>`3567` (Soho Grand Hotel)</li><li>`3568` (Ladbroke Hotels)</li><li>`3569` (Tribeca Grand Hotel)</li><li>`3570` (Forum Hotels)</li><li>`3571` (Grand Wailea Resort)</li><li>`3572` (Miyako Hotel)</li><li>`3573` (Sandman Hotels)</li><li>`3574` (Venture Inn)</li><li>`3575` (Vagabond Hotels)</li><li>`3576` (La Quinta Resort)</li><li>`3577` (Mandarin Oriental Hotel)</li><li>`3578` (Frankenmuth Bavarian)</li><li>`3579` (Hotel Mercure)</li><li>`3580` (Hotel Del Coronado)</li><li>`3581` (Delta Hotels)</li><li>`3582` (California Hotel and Casino)</li><li>`3583` (Radisson BLU)</li><li>`3584` (Princess Hotels International)</li><li>`3585` (Hungar Hotels)</li><li>`3586` (Sokos Hotels)</li><li>`3587` (Doral Hotels)</li><li>`3588` (Helmsley Hotels)</li><li>`3589` (Doral Golf Resort)</li><li>`3590` (Fairmont Hotel)</li><li>`3591` (Sonesta Hotels)</li><li>`3592` (Omni Hotels)</li><li>`3593` (Cunard Hotels)</li><li>`3594` (Arizona Biltmore)</li><li>`3595` (Hospitality Inns)</li><li>`3596` (Wynn Las Vegas)</li><li>`3597` (Riverside Resort and Casino)</li><li>`3598` (Regent International Hotels)</li><li>`3599` (Pannonia Hotels)</li><li>`3600` (Saddlebrook Resort - Tampa)</li><li>`3601` (Trade Winds Resorts)</li><li>`3602` (Hudson Hotel)</li><li>`3603` (Noah's Hotel)</li><li>`3604` (Hilton Garden Inn)</li><li>`3605` (Jurys Doyle Hotel Group)</li><li>`3606` (Jefferson Hotel)</li><li>`3607` (Fountainebleau Resort)</li><li>`3608` (Gaylord Opryland)</li><li>`3609` (Gaylord Palms)</li><li>`3610` (Gaylord Texan)</li><li>`3611` (C MON INN)</li><li>`3612` (Movenpick Hotels)</li><li>`3613` (Microtel Inns & Suites)</li><li>`3614` (Americinn)</li><li>`3615` (Travelodge Motels)</li><li>`3617` (America's Best Value Inn)</li><li>`3618` (Great Wolf)</li><li>`3619` (Aloft)</li><li>`3620` (Binion's Horseshoe Club)</li><li>`3621` (Extended Stay)</li><li>`3622` (Merlin Hotel)</li><li>`3623` (Dorint Hotels)</li><li>`3624` (Lady Luck Hotel and Casino)</li><li>`3625` (Hotel Universale)</li><li>`3626` (Studio Plus)</li><li>`3627` (Extended Stay America)</li><li>`3628` (Excalibur Hotel and Casino)</li><li>`3629` (Dan Hotels)</li><li>`3630` (Extended Stay Deluxe)</li><li>`3631` (Sleep Inn)</li><li>`3632` (The Phoenician)</li><li>`3633` (Rank Hotels)</li><li>`3634` (Swissotel)</li><li>`3635` (Reso Hotel)</li><li>`3636` (Sarova Hotels)</li><li>`3637` (Ramada Inns)</li><li>`3638` (Howard Johnson)</li><li>`3639` (Mount Charlotte Thistle)</li><li>`3640` (Hyatt Motels)</li><li>`3641` (Sofitel Hotels)</li><li>`3642` (Novotel)</li><li>`3643` (Steigenberger Hotels)</li><li>`3644` (EconoLodges)</li><li>`3645` (Queens Moat Houses)</li><li>`3646` (Swallow Hotels)</li><li>`3647` (Husa Hotels)</li><li>`3648` (De Vere Hotels)</li><li>`3649` (Radisson)</li><li>`3650` (Red Roof Inns)</li><li>`3651` (Imperial London Hotel)</li><li>`3652` (Embassy Hotels)</li><li>`3653` (Penta Hotels)</li><li>`3654` (Loews Hotels)</li><li>`3655` (Scandic Hotels)</li><li>`3656` (Sara Hotels)</li><li>`3657` (Oberoi Hotels)</li><li>`3658` (New Otani Hotels)</li><li>`3659` (Taj Hotels International)</li><li>`3660` (Knights Inn)</li><li>`3661` (Metropole Hotels)</li><li>`3662` (Circus Circus Hotel and Casino)</li><li>`3663` (Hoteles El Presidente)</li><li>`3664` (Flag Inns)</li><li>`3665` (Hampton Inn Hotels)</li><li>`3666` (Stakis Hotels)</li><li>`3667` (Luxor Hotel and Casino)</li><li>`3668` (Maritim Hotels)</li><li>`3669` (Eldorado Hotel and Casino)</li><li>`3670` (Arcade Hotels)</li><li>`3671` (Arctia Hotels)</li><li>`3672` (Campanile Hotels)</li><li>`3673` (IBUSZ Hotels)</li><li>`3674` (Rantasipi Hotels)</li><li>`3675` (Interhotel CEDOK)</li><li>`3676` (Monte Carlo Hotel and Casino)</li><li>`3677` (Climat de France Hotels)</li><li>`3678` (Cumulus Hotels)</li><li>`3679` (Silver Legacy Hotel and Casino)</li><li>`3680` (Hoteis Othan)</li><li>`3681` (Adams Mark Hotels)</li><li>`3682` (Sahara Hotel and Casino)</li><li>`3683` (Bradbury Suites)</li><li>`3684` (Budget Hosts Inns)</li><li>`3685` (Budgetel Hotels)</li><li>`3686` (Suisse Chalet)</li><li>`3687` (Clarion Hotels)</li><li>`3688` (Compri Hotels)</li><li>`3689` (Consort Hotels)</li><li>`3690` (Courtyard Inns)</li><li>`3691` (Dillon Inn)</li><li>`3692` (Doubletree)</li><li>`3693` (Drury Inn)</li><li>`3694` (Economy Inns of America)</li><li>`3695` (Embassy Suites)</li><li>`3696` (Excel Inn)</li><li>`3697` (Fairfield Hotels)</li><li>`3698` (Harley Hotels)</li><li>`3699` (Midway Motor Lodge)</li><li>`3700` (Motel 6)</li><li>`3701` (La Mansion Del Rio)</li><li>`3702` (The Registry Hotels)</li><li>`3703` (Residence Inn)</li><li>`3704` (Royce Hotels)</li><li>`3705` (Sandman Inn)</li><li>`3706` (Shilo Inn)</li><li>`3707` (Shoney's Inn)</li><li>`3708` (Virgin River Hotel and Casino)</li><li>`3709` (Super 8 Motels)</li><li>`3710` (The Ritz Carlton Hotels)</li><li>`3711` (Flag Inns (Australia))</li><li>`3712` (Buffalo Bill's Hotel and Casino)</li><li>`3713` (Quality Pacific Hotel)</li><li>`3714` (Four Seasons Hotels-Austr)</li><li>`3715` (Fairfield Inn)</li><li>`3716` (Carlton Hotels)</li><li>`3717` (City Lodge Hotels)</li><li>`3718` (Karos Hotels)</li><li>`3719` (Protea Hotels)</li><li>`3720` (Southern Sun Hotels)</li><li>`3721` (Hilton Conrad Hotels)</li><li>`3722` (Wyndham Hotels)</li><li>`3723` (Rica Hotels)</li><li>`3724` (Inter Nor Hotels)</li><li>`3725` (SeaPines Plantation)</li><li>`3726` (Rio Suites)</li><li>`3727` (Broadmoor Hotel)</li><li>`3728` (Bally's Hotel and Casino)</li><li>`3729` (John Ascuaga's Nugget)</li><li>`3730` (MGM Grand Hotel)</li><li>`3731` (Harrah's Hotels and Casinos)</li><li>`3732` (Opryland Hotel)</li><li>`3733` (Boca Raton Resort)</li><li>`3734` (Harvey/Bristol Hotels)</li><li>`3735` (Master Economy Inns)</li><li>`3736` (Colorado Belle/Edgewater Resort)</li><li>`3737` (Riviera Hotel and Casino)</li><li>`3738` (Tropicana Resort & Casino)</li><li>`3739` (Woodside Hotels & Resorts)</li><li>`3740` (Towneplace Suites)</li><li>`3741` (Millennium Hotel)</li><li>`3742` (Club Med)</li><li>`3743` (Biltmore Hotel and Suites)</li><li>`3744` (Carefree Resorts)</li><li>`3745` (St. Regis Hotel)</li><li>`3746` (The Eliot Hotel)</li><li>`3747` (ClubCorp/ClubResorts)</li><li>`3748` (Wellesley Inns)</li><li>`3749` (The Beverly Hills Hotel)</li><li>`3750` (Crown Plaza Hotels)</li><li>`3751` (Homewood Suites)</li><li>`3752` (Peabody Hotels)</li><li>`3753` (Greenbriar Resorts)</li><li>`3754` (Amelia Island Plantation)</li><li>`3755` (The Homestead)</li><li>`3757` (Canyon Ranch)</li><li>`3758` (Kahala Mandarion Oriental Hotel)</li><li>`3759` (The Orchid at Mauna Lani)</li><li>`3760` (Halekulani Hotel/Waikiki Parc)</li><li>`3761` (Primadonna Hotel and Casino)</li><li>`3762` (Whisky Pete's Hotel and Casino)</li><li>`3763` (Chateau Elan Winery and Resort)</li><li>`3764` (Beau Rivage Hotel and Casino)</li><li>`3765` (Bellagio)</li><li>`3766` (Fremont Hotel and Casino)</li><li>`3767` (Main Street Hotel and Casino)</li><li>`3768` (Silver Star Hotel and Casino)</li><li>`3769` (Stratosphere Hotel and Casino)</li><li>`3770` (SpringHill Suites)</li><li>`3771` (Caesar's Resort)</li><li>`3772` (Nemacolin Woodlands)</li><li>`3773` (The Venetian Resort Hotel and Casino)</li><li>`3774` (New York-New York Hotel and Casino)</li><li>`3775` (Sands Resort)</li><li>`3776` (Nevele Grande Resort and Country Club)</li><li>`3777` (Mandalay Bay Resort)</li><li>`3778` (Four Points Hotels)</li><li>`3779` (W Hotels)</li><li>`3780` (Disney Resorts)</li><li>`3781` (Patricia Grand Resort Hotels)</li><li>`3782` (Rosen Hotels & Resort)</li><li>`3783` (Town and Country Resort and Convention Center)</li><li>`3784` (First Hospitality Hotel)</li><li>`3785` (Outrigger Hotels and Resorts)</li><li>`3786` (Ohana Hotel of Hawaii)</li><li>`3787` (Caribe Royale Resort Suites & Villas)</li><li>`3788` (Ala Moana Hotel / Ala Moana Hotels)</li><li>`3789` (Smugglers' Notch Resort)</li><li>`3790` (Raffles Hotels)</li><li>`3791` (Staybridge Suites)</li><li>`3792` (Claridge Casino Hotel)</li><li>`3793` (The Flamingo Hotels)</li><li>`3794` (Grand Casino Hotels)</li><li>`3795` (Paris Las Vegas Hotel)</li><li>`3796` (Peppermill Hotel Casino)</li><li>`3797` (Atlantic City Hilton)</li><li>`3798` (Embassy Vacation Resort)</li><li>`3799` (Hale Koa Hotel)</li><li>`3800` (Homestead)</li><li>`3801` (Wilderness Hotel and Golf Resort)</li><li>`3802` (The Palace Hotel)</li><li>`3807` (Element)</li><li>`3808` (LXR)</li><li>`3810` (La Costa Resort)</li><li>`3811` (Premier Travel Inn)</li><li>`3812` (Hyatt Place)</li><li>`3813` (Hotel Indigo)</li><li>`3814` (The Roosevelt Hotel NY)</li><li>`3815` (Holiday Inn Nickelodeon)</li><li>`3816` (Home2 Suites)</li><li>`3817` (Affinia)</li><li>`3818` (Mainstay Suites)</li><li>`3819` (Oxford Suites)</li><li>`3820` (Jumeirah Essex House)</li><li>`3821` (Caribe Royale)</li><li>`3822` (Crossland)</li><li>`3823` (Grand Sierra Resort)</li><li>`3824` (Aria)</li><li>`3825` (Vdara)</li><li>`3826` (Autograph)</li><li>`3827` (Galt House)</li><li>`3828` (Cosmopolitan of Las Vegas)</li><li>`3829` (Country Inn by Carlson)</li><li>`3830` (Park Plaza Hotel)</li><li>`3831` (Waldorf)</li><li>`4011` (Railroads)</li><li>`4111` (Local and Suburban Commuter Passenger Transportation, including Ferries)</li><li>`4112` (Passenger Rail (train))</li><li>`4119` (Ambulance Services)</li><li>`4121` (Taxicabs and Limousines)</li><li>`4131` (Bus Lines, includes Charters/Tour Buses)</li><li>`4214` (Motor Freight Carriers and Trucking-Local and Long Distance, Moving & Storage Companies, and Local Delivery)</li><li>`4215` (Courier Services-Air and Ground, and Freight Forwarders)</li><li>`4225` (Public Warehousing-Farm products, Refrigerated Goods, Household Goods, and Storage)</li><li>`4411` (Steamship and Cruise Lines)</li><li>`4457` (Boat Rentals and Leasing)</li><li>`4468` (Marinas, Marine Service, and Supplies)</li><li>`4511` (Airlines and Air Carriers)</li><li>`4582` (Airports, Flying Fields, and Airport Terminals)</li><li>`4722` (Travel Agencies)</li><li>`4723` (Package Tour Operators (Germany Only))</li><li>`4761` (Telemarketing of Travel Related Services and Vitamins)</li><li>`4784` (Bridge and Road Fees, Tolls)</li><li>`4789` (Transportation Services-not elsewhere classified)</li><li>`4812` (Telecommunication Equipment and Telephone Sales)</li><li>`4813` (Special Telecom Merchant)</li><li>`4814` (Telecommunication Services, Including Local and Long Distance Calls, Credit Card Calls, Call Through Use of Magnetic-Strip-Reading Telephones, and Fax Services)</li><li>`4815` (Monthly Summary Telephone Charges)</li><li>`4816` (Computer Network/Information Services and other Online Services such as electronic bulletin board, e-mail, web site hosting services, or Internet access)</li><li>`4821` (Telegraph Services)</li><li>`4829` (Quasi Cash - Money Transfer)</li><li>`4899` (Cable, Satellite, and Other Pay Television and Radio Services)</li><li>`4900` (Utilities-Electric, Gas, Water, and Sanitary)</li><li>`5013` (Motor Vehicle Supplies and New Parts (Business to Business MCC))</li><li>`5021` (Office Furniture (Business to Business MCC))</li><li>`5039` (Construction Materials Not Elsewhere Classified (Business to Business MCC))</li><li>`5044` (Photographic, Photocopy, Microfilm Equipment and Supplies (Business to Business MCC))</li><li>`5045` (Computers, Computer Peripheral Equipment, and Software)</li><li>`5046` (Commercial Equipment Not Elsewhere Classified (Business to Business MCC))</li><li>`5047` (Dental/Laboratory/Medical/Ophthalmic Hospital Equipment and Supplies)</li><li>`5051` (Metal Service Centers and Offices (Business to Business MCC))</li><li>`5065` (Electrical Parts and Equipment (Business to Business MCC))</li><li>`5072` (Hardware, Plumbing, Heat Equipment and Supplies (Business to Business MCC))</li><li>`5074` (Plumbing and Heating Equipment and Supplies (Business to Business MCC))</li><li>`5085` (Industrial Supplies Not Elsewhere Classified (Business to Business MCC))</li><li>`5094` (Precious Stones, Metals, Watches and Jewelry (Business to Business MCC))</li><li>`5099` (Durable Goods Not Elsewhere Classified (Business to Business MCC))</li><li>`5111` (Stationery, Office Supplies, and Printing and Writing Paper)</li><li>`5122` (Drugs, Drug Proprietary's, and Druggists' Sundries)</li><li>`5131` (Piece Goods, Notions and Other Dry Goods (Business to Business MCC))</li><li>`5137` (Men's, Women's and Children's Uniforms (Business to Business MCC))</li><li>`5139` (Commercial Footwear (Business to Business MCC))</li><li>`5169` (Chemicals and Allied Products Not Elsewhere Classified (Business to Business MCC))</li><li>`5172` (Petroleum and Products (Business to Business MCC))</li><li>`5192` (Books, Periodicals and Newspapers (Business to Business MCC))</li><li>`5193` (Florist Suppliers, Nursery Stock & Flowers (Business to Business MCC))</li><li>`5198` (Paints, Varnishes and Supplies (Business to Business MCC))</li><li>`5199` (Non-durable Goods Not Elsewhere Classified (Business to Business MCC))</li><li>`5200` (Home Supply Warehouse)</li><li>`5211` (Lumber & Building Materials Stores)</li><li>`5231` (Glass, Paint, and Wallpaper Stores)</li><li>`5251` (Hardware Stores, Equipment Utilities Regulated)</li><li>`5261` (Nurseries and Lawn and Garden Supply Stores)</li><li>`5271` (Mobile Home Dealer)</li><li>`5300` (Wholesale Club with or without membership fee)</li><li>`5309` (Duty Free Stores)</li><li>`5310` (Discount Store)</li><li>`5311` (Department Stores)</li><li>`5331` (Variety Stores)</li><li>`5399` (Miscellaneous General Merchandise)</li><li>`5411` (Grocery Stores and Supermarkets)</li><li>`5422` (Freezer & Locker Meat Provisions)</li><li>`5441` (Candy, Nut, and Confectionary Stores)</li><li>`5451` (Dairy Product Stores)</li><li>`5462` (Bakeries)</li><li>`5499` (Miscellaneous Food Stores-Convenience Stores and Specialty Markets)</li><li>`5511` (Car and Truck Dealers (New and Used)- Sales, Service, Repairs, Parts, and Leasing)</li><li>`5521` (Car and Truck Dealers (Used)- Sales, Service, Repairs, Parts, and Leasing)</li><li>`5532` (Automotive Tire Stores)</li><li>`5531` (Auto and Home Supply Stores)</li><li>`5533` (Automotive Parts and Accessories Stores)</li><li>`5541` (Service Stations (with or without Ancillary Services))</li><li>`5542` (Automated Fuel Dispensers)</li><li>`5551` (Boat Dealers)</li><li>`5561` (Camper, Recreational and Utility Trailer Dealers)</li><li>`5571` (Motorcycle Dealers)</li><li>`5592` (Motor Home Dealers)</li><li>`5598` (Snowmobile Dealers)</li><li>`5599` (Miscellaneous Automotive, Aircraft, and Farm Equipment Dealers --Not Elsewhere Classified)</li><li>`5611` (Men's & Boys' Clothing and Accessory Stores)</li><li>`5621` (Women's Ready-to-Wear Stores)</li><li>`5631` (Women's Accessory and Specialty Stores)</li><li>`5641` (Children's and Infants' Wear Stores)</li><li>`5651` (Family Clothing Stores)</li><li>`5655` (Sports and Riding Apparel Stores)</li><li>`5661` (Shoe Stores)</li><li>`5681` (Furriers & Fur Shops)</li><li>`5691` (Men's and Women's Clothing Stores)</li><li>`5697` (Tailors, Seamstresses, Mending, Alterations)</li><li>`5698` (Wig & Toupee Shops)</li><li>`5699` (Miscellaneous Apparel and Accessory Stores)</li><li>`5712` (Furniture, Home Furnishings, and Equipment Stores, except Appliances)</li><li>`5713` (Floor coverings, Rugs)</li><li>`5714` (Drapery, Window Covering, and Upholstery Stores)</li><li>`5718` (Fireplaces, Fireplace Screens and Accessories Stores)</li><li>`5719` (Miscellaneous Home Furnishing Specialty Stores)</li><li>`5722` (Household Appliance Stores)</li><li>`5732` (Electronics Stores)</li><li>`5733` (Music Stores-Musical Instruments, Pianos, and Sheet Music)</li><li>`5734` (Computer Software Stores)</li><li>`5735` (Record Stores)</li><li>`5811` (Caterers - Prepare & Delivery)</li><li>`5812` (Eating Places and Restaurants)</li><li>`5813` (Drinking Places (Alcoholic Beverages) - Bars, Taverns, Nightclubs, Cocktail Lounges, and Discotheques)</li><li>`5814` (Quick Payment Service-Fast Food Restaurants)</li><li>`5815` (Digital Goods â Media, Books, Movies, Music)</li><li>`5816` (Digital Goods â Games)</li><li>`5817` (Digital Goods â Applications (Excludes Games))</li><li>`5818` (Large Digital Goods Merchant)</li><li>`5912` (Drug Stores and Pharmacies)</li><li>`5921` (Package Stores--Beer, Wine, and Liquor)</li><li>`5931` (Used Merchandise and Secondhand Stores)</li><li>`5932` (Antique Shop)</li><li>`5933` (Pawn Shop)</li><li>`5935` (Wrecking and Salvage Yards)</li><li>`5937` (Antique Reproduction Stores)</li><li>`5940` (Bicycle Shop-Sales and Services)</li><li>`5941` (Sporting Goods Stores)</li><li>`5942` (Book Stores)</li><li>`5943` (Stationery, Office and School Supply Stores)</li><li>`5944` (Jewelry, Watch, Clock, and Silverware Stores)</li><li>`5945` (Hobby, Toy and Game Stores)</li><li>`5946` (Camera and Photographic Supply Stores)</li><li>`5947` (Gift, Card, Novelty, and Souvenir Stores)</li><li>`5948` (Luggage and Leather Goods Stores)</li><li>`5949` (Sewing, Needlework, Fabric, and Piece Good Stores)</li><li>`5950` (Glassware and Crystal Stores)</li><li>`5960` (Direct Marketing Insurance Services)</li><li>`5961` (Mail Order)</li><li>`5962` (Direct Marketing -- Travel Related Arrangement Services)</li><li>`5963` (Direct Selling Establishments/Door to Door Sales)</li><li>`5964` (Catalog Merchant)</li><li>`5965` (Combined Catalog and Retail Merchant)</li><li>`5966` (Outbound Telemarketing Merchant)</li><li>`5967` (Direct Marketing -- Inbound Telemarketing Merchants)</li><li>`5968` (Continuity/Subscription Merchants)</li><li>`5969` (Direct Marketing/Direct Marketers--Not Elsewhere Classified)</li><li>`5970` (Artist Supply and Craft Stores)</li><li>`5971` (Art Dealers and Galleries)</li><li>`5972` (Stamp and Coin Stores)</li><li>`5973` (Religious Goods Stores)</li><li>`5975` (Hearing Aids--Sales, Service, and Supplies)</li><li>`5976` (Orthopedic Goods and Prosthetic Devices)</li><li>`5977` (Cosmetic Stores)</li><li>`5978` (Typewriter Stores--Sales, Service, and Rentals)</li><li>`5983` (Fuel Dealers--Fuel Oil, Wood, Coal, and Liquefied Petroleum)</li><li>`5992` (Florists)</li><li>`5993` (Cigar Stores & Stands)</li><li>`5994` (News Dealers & Newsstands)</li><li>`5995` (Pet Shops, Pet Food, and Supplies)</li><li>`5996` (Swimming Pools--Sales, Supplies, and Services)</li><li>`5997` (Electric Razor Stores Sales & Services)</li><li>`5998` (Tent and Awning Stores)</li><li>`5999` (Miscellaneous & Specialty Retail Stores)</li><li>`6010` (Financial Institutions--Manual Cash Disbursements)</li><li>`6011` (Financial Institutions--Automated Cash Disbursements)</li><li>`6012` (Quasi Cash - Financial Institution - Merchandise and Services)</li><li>`6050` (Quasi Cash - Member Financial Institution)</li><li>`6051` (MasterCard - Quasi Cash-Merchant)</li><li>`6211` (Securities - Brokers and Dealers)</li><li>`6300` (Insurance Sales and Underwriting)</li><li>`6381` (Insurance - Premiums)</li><li>`6399` (Insurance - Not Elsewhere Classified)</li><li>`6513` (Real Estate Agents and Managers - Rentals; Property Management)</li><li>`6529` (Remote Stored Value Load - Member Financial Institution)</li><li>`6530` (Remote Stored Value Load - Merchant)</li><li>`6531` (Payment Service Provider)</li><li>`6532` (Payment Transaction - Member)</li><li>`6533` (Payment Transaction - Merchant)</li><li>`6534` (Money Transfer - Member Financial Institution)</li><li>`6535` (Value Purchase - Member Financial Institution)</li><li>`6536` (MoneySend Intracountry)</li><li>`6537` (MoneySend Intercountry)</li><li>`6538` (MoneySend Funding)</li><li>`6540` (POI Funding Transactions (Excluding MoneySend))</li><li>`7011` (Lodging - Hotels, Motels, and Resorts)</li><li>`7012` (Timeshares)</li><li>`7032` (Sporting and Recreational Camps)</li><li>`7033` (Trailer Parks and Campgrounds)</li><li>`7210` (Laundry, Cleaning, and Garment Services)</li><li>`7211` (Laundry Services - Family and Commercial)</li><li>`7216` (Dry Cleaners)</li><li>`7217` (Carpet and Upholstery Cleaning)</li><li>`7221` (Photographic Studios)</li><li>`7230` (Beauty and Barber Shops)</li><li>`7251` (Shoe Repair Shops, Shoe Shine Parlors, and Hat Cleaning Shops)</li><li>`7261` (Funeral Services and Crematories)</li><li>`7273` (Dating Services)</li><li>`7276` (Tax Preparation Services)</li><li>`7277` (Counseling Services - Debt, Marriage, and Personal)</li><li>`7278` (Buying and Shopping Services and Clubs)</li><li>`7296` (Clothing Rental - Costumes, Uniforms and Formal Wear)</li><li>`7297` (Massage Parlors)</li><li>`7298` (Health and Beauty Spas)</li><li>`7299` (Miscellaneous Personal Services - Not Elsewhere Classified)</li><li>`7311` (Advertising Services)</li><li>`7321` (Consumer Credit Reporting Agencies)</li><li>`7332` (Blueprinting and Photocopying Services)</li><li>`7333` (Commercial Photography, Art, and Graphics)</li><li>`7338` (Quick Copy, Reproduction Service)</li><li>`7339` (Stenographic Service)</li><li>`7342` (Exterminating and Disinfecting Services)</li><li>`7349` (Cleaning, Maintenance & Janitorial Services)</li><li>`7361` (Employment Agencies and Temporary Help Services)</li><li>`7372` (Computer Programming, Data Processing, and Integrated Systems Design Services)</li><li>`7375` (Information Retrieval Services (Business to Business MCC))</li><li>`7379` (Computer Maintenance, Repair and Services (Business to Business MCC))</li><li>`7392` (Management, Consulting, and Public Relations Services)</li><li>`7393` (Detective Agencies, Protective Agencies, and Security Services, including Armored Cars and Guard Dogs)</li><li>`7394` (Equipment, Tool, Furniture, and Appliance Rental and Leasing)</li><li>`7395` (Photofinishing Laboratories and Photo Developing)</li><li>`7399` (Business Services)</li><li>`7511` (Truck Stops)</li><li>`7512` (Automobile Rental Agency)</li><li>`7513` (Truck and Utility Trailer Rentals)</li><li>`7519` (Motor Home and Recreational Vehicle Rentals)</li><li>`7523` (Parking Lots and Garages)</li><li>`7524` (Express Payment Service Mechants - Parking Lots and Garages)</li><li>`7531` (Automotive Top & Body Shops)</li><li>`7534` (Tire Retreading & Repair)</li><li>`7535` (Automotive Paint Shops)</li><li>`7538` (Automotive Service Shops (Non-Dealer))</li><li>`7542` (Car Washes)</li><li>`7549` (Towing Services)</li><li>`7622` (Electronic Repair Shops)</li><li>`7623` (Air Conditioning and Refrigeration Repair Shops)</li><li>`7629` (Electrical and Small Appliance Repair Shops)</li><li>`7631` (Watch, Clock, and Jewelry Repair Shops)</li><li>`7641` (Furniture - Reupholster, Repair, and Refinishing)</li><li>`7692` (Welding Services)</li><li>`7699` (Miscellaneous Repair Shops and Related Services)</li><li>`7778` (Citishare Cash Advance)</li><li>`7800` (Government-Owned Lotteries)</li><li>`7801` (Government-Licensed Casinos (Online Gambling))</li><li>`7802` (Government-Licensed Horse/Dog Racing)</li><li>`7829` (Motion Picture & Video Tape Production and Distribution (Business to Business MCC))</li><li>`7832` (Motion Picture Theater)</li><li>`7841` (DVD/Video Tape Rental Stores)</li><li>`7911` (Dance Halls, Studios & Schools)</li><li>`7922` (Theatrical Producers (except Motion Pictures) and Ticket Agencies)</li><li>`7929` (Bands, Orchestras & Misc Entertainment)</li><li>`7932` (Billiards & Pool Establishments)</li><li>`7933` (Bowling Alleys)</li><li>`7941` (Commercial Sports, Professional Sports Clubs, Athletic Fields, and Sports Promoters)</li><li>`7991` (Tourist Attractions and Exhibits)</li><li>`7992` (Public Golf Courses)</li><li>`7993` (Video Amusement Game Supply)</li><li>`7994` (Video Game Arcades and Establishments)</li><li>`7995` (Betting, including Lottery Tickets, Casino Gaming Chips, Off- Track Betting, and Wagers at Race Track)</li><li>`7996` (Amusement Parks, Circuses, Carnivals, and Fortune Tellers)</li><li>`7997` (Membership Clubs (Sports, Recreation, Athletic), Country Clubs, and Private Golf Courses)</li><li>`7998` (Aquarium, Seaquarium, Dolphinariums)</li><li>`7999` (Recreation Services - Not Elsewhere Classified)</li><li>`8011` (Doctors and Physicians - Not Elsewhere Classified)</li><li>`8021` (Dentists and Orthodontists)</li><li>`8031` (Osteopathic Physicians)</li><li>`8041` (Chiropractors)</li><li>`8042` (Optometrists and Ophthalmologists)</li><li>`8043` (Opticians, Optical Goods and Eyeglasses)</li><li>`8049` (Podiatrists and Chiropodists)</li><li>`8050` (Nursing and Personal Care Facilities)</li><li>`8062` (Hospitals)</li><li>`8071` (Medical and Dental Laboratories)</li><li>`8099` (Medical Services Health Practitioners - No Elsewhere Classified)</li><li>`8111` (Legal Services and Attorneys)</li><li>`8211` (Elementary and Secondary Schools)</li><li>`8220` (Colleges, Universities, Professional Schools, and Junior Colleges)</li><li>`8241` (Correspondence Schools)</li><li>`8244` (Business and Secretarial Schools)</li><li>`8249` (Trade and Vocational Schools)</li><li>`8299` (Schools and Educational Services - Not Elsewhere Classified)</li><li>`8351` (Child Care Services)</li><li>`8398` (Charitable and Social Service Organizations)</li><li>`8641` (Civic, Social, and Fraternal Associations)</li><li>`8651` (Political Organizations)</li><li>`8661` (Religious Organizations)</li><li>`8675` (Automobile Associations)</li><li>`8699` (Membership Organizations - Not Elsewhere Classified)</li><li>`8734` (Testing Laboratories (Not Medical) - (Business to Business MCC))</li><li>`8911` (Architectural, Engineering, and Surveying Services)</li><li>`8931` (Accounting, Auditing, and Bookkeeping Services)</li><li>`8999` (Professional Services - Not Elsewhere Classified)</li><li>`9211` (Court Costs, including Alimony and Child Support)</li><li>`9222` (Fines)</li><li>`9223` (Bail & Bond Payments)</li><li>`9311` (Tax Payments)</li><li>`9399` (Government Services - Not Elsewhere Classified)</li><li>`9401` (i-Purchasing)</li><li>`9402` (Postal Services)</li><li>`9405` (U.S. Fed Government Agencies)</li><li>`9700` (Automated Referral Service)</li><li>`9701` (Visa Credential Server)</li><li>`9702` (GCAS Emergency Services)</li><li>`9751` (U.K. Supermarkets, Electronic Hot File)</li><li>`9752` (U.K. Petrol Stations, Electronic Hot File)</li><li>`9753` (Consumer Electronics/Furniture Store)</li><li>`9754` (Quasi Cash - Gambling-Horse Racing, Dog Racing, State Lotteries)</li><li>`9950` (Intra-Company Purchases)</li></ul>",
                      "example": "0742"
                  },
                  "ppcUserGroup": {
                      "type": "string",
                      "description": "The payment user group from the purpose code list for the application.<br><br>Allowed values:<ul><li>WHOLESALE_FI_FI</li><li>COMMERCIAL</li><li>CONSUMER_GOODS_SERVICES</li><li>FINANCE</li><li>INSURANCE</li><li>PROPERTY</li><li>UTILITIES</li><li>TAX</li><li>SALARIES_INCOMES</li><li>INVESTMENTS</li><li>FOREIGN_EXCHANGE</li><li>GOVERNMENT</li><li>BENEFIT_PAYMENTS</li><li>MEDICAL</li><li>PENSIONS</li></ul>",
                      "example": "WHOLESALE_FI_FI"
                  },
                  "callbackUrls": {
                      "type": "array",
                      "description": "The application callback URLs",
                      "items": {
                          "type": "string"
                      }
                  },
                  "isContractPresent": {
                      "type": "boolean",
                      "description": "Indicates if a contract is in place with the merchant and a KYB process has been completed"
                  }
              }
          },
          "ApplicationResponse": {
              "type": "object",
              "properties": {
                  "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The id of the application returned",
                      "example": "2698db90-6635-4f76-b673-5ce8e2aeda0e"
                  },
                  "rootApplicationId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The id of the root application",
                      "example": "eb25e1ee-f6af-4131-92fe-748e177bf950"
                  },
                  "name": {
                      "type": "string",
                      "format": "^[a-zA-Z0-9 \\-_\\[\\]\\(\\)]+$",
                      "description": "The name of the application"
                  },
                  "merchantCategoryCode": {
                      "type": "string",
                      "format": "^\\d{4}$",
                      "description": "The ISO-18245 merchant category code of the merchant the application is being created for.<br><br>Allowed values:<ul><li>`0742` (Veterinary Services)</li><li>`0763` (Agricultural Cooperatives)</li><li>`0780` (Landscaping and Horticultural Services)</li><li>`1520` (General Contractor/Residential Building)</li><li>`1711` (Heating, Plumbing, Air Conditioning Contractors)</li><li>`1731` (Electrical Contractors)</li><li>`1740` (Masonry, Stonework, Tile Setting, Plastering, Insulation Contractors)</li><li>`1750` (Carpentry)</li><li>`1761` (Roof, Siding, and Sheet Metal Work Contractors)</li><li>`1771` (Contractors, Concrete)</li><li>`1799` (Special Trade Contractor - Not Elsewhere Classified)</li><li>`2741` (Miscellaneous Publishing and Printing Services)</li><li>`2791` (Typesetting, Plate Making and Related Services (Business to Business MCC))</li><li>`2842` (Specialty Cleaning, Polishing and Sanitation Preparations (Business to Business MCC))</li><li>`3000` (United Airlines)</li><li>`3001` (American Airlines)</li><li>`3002` (Pan American)</li><li>`3003` (Eurofly Airlines)</li><li>`3004` (Dragon Airlines)</li><li>`3005` (British Airways)</li><li>`3006` (Japan Air Lines)</li><li>`3007` (Air France)</li><li>`3008` (Lufthansa)</li><li>`3009` (Air Canada)</li><li>`3010` (KLM)</li><li>`3011` (AeroFlot)</li><li>`3012` (Qantas)</li><li>`3013` (Alitalia)</li><li>`3014` (Saudi Arabian Airlines)</li><li>`3015` (SWISS)</li><li>`3016` (SAS)</li><li>`3017` (South African Airway)</li><li>`3018` (Varig (Brazil))</li><li>`3020` (Air India)</li><li>`3021` (Air Algerie)</li><li>`3022` (PAL AIR)</li><li>`3023` (Mexicana)</li><li>`3024` (Pakistan International)</li><li>`3025` (Air New Zealand Ltd.)</li><li>`3026` (Emirates Airlines)</li><li>`3027` (UTA/InterAir)</li><li>`3028` (Air Malta)</li><li>`3029` (SN Brussels Airlines - SN BRUSSELS)</li><li>`3030` (Aerolineas Argentinas)</li><li>`3031` (Olympic Airways)</li><li>`3032` (El Al)</li><li>`3033` (Ansett Airlines)</li><li>`3034` (ETIHADAIR)</li><li>`3035` (TAP (Portugal))</li><li>`3036` (VASP (Brazil))</li><li>`3037` (EgyptAir)</li><li>`3038` (Kuwait Airways)</li><li>`3039` (Avianca)</li><li>`3040` (GulfAir (Bahrain))</li><li>`3041` (Balkan-Bulgarian)</li><li>`3042` (FinnAir)</li><li>`3043` (Aer Lingus)</li><li>`3044` (Air Lanka)</li><li>`3045` (Nigeria Airways)</li><li>`3046` (Cruzeiro do Sul (Bra))</li><li>`3047` (THY (Turkey))</li><li>`3048` (Royal Air Maroc)</li><li>`3049` (Tunis Air)</li><li>`3050` (Icelandair)</li><li>`3051` (Austrian Airlines)</li><li>`3052` (LANAIR)</li><li>`3053` (AVIACO (Spain))</li><li>`3054` (Ladeco (Chile))</li><li>`3055` (LAB (Bolivia))</li><li>`3056` (JetAir)</li><li>`3057` (Virgin America â VIR AMER)</li><li>`3058` (Delta)</li><li>`3059` (DBA Airlines-DBA AIR)</li><li>`3060` (NWA Air)</li><li>`3061` (Continental)</li><li>`3062` (Hapag-Lloyd Express - HLX)</li><li>`3063` (US Airways)</li><li>`3064` (Adria Airways)</li><li>`3065` (Airinter (AirInternational))</li><li>`3066` (Southwest)</li><li>`3068` (AIR STANA)</li><li>`3069` (Sun Country Air)</li><li>`3070` (Pacific Southwest Airlines (PSA))</li><li>`3071` (Air British Columbia)</li><li>`3072` (CEBU PAC)</li><li>`3073` (Air Cal)</li><li>`3075` (Singapore Airlines)</li><li>`3076` (Aeromexico)</li><li>`3077` (Thai Airways)</li><li>`3078` (China Airlines)</li><li>`3079` (Jetstar Airways - Jetstar)</li><li>`3081` (NordAir)</li><li>`3082` (Korean Airlines)</li><li>`3083` (Air Afrique)</li><li>`3084` (Eva Airlines)</li><li>`3085` (Midwest Express Airlines, Inc)</li><li>`3087` (Metro Airlines)</li><li>`3088` (Croatia Airlines)</li><li>`3089` (Tans Saero)</li><li>`3090` (Uni Airways)</li><li>`3094` (Zambia Airways)</li><li>`3096` (Air Zimbabwe)</li><li>`3097` (Spanair (abbreviation: SPANAIR))</li><li>`3098` (Asiana Airlines)</li><li>`3099` (Cathay Pacific)</li><li>`3100` (Malaysian Airline Sys)</li><li>`3102` (Iberia)</li><li>`3103` (Garuda (Indonesia))</li><li>`3105` (Piedmont)</li><li>`3106` (Braathens S.A.F.E. (Norway))</li><li>`3110` (Wings Airways)</li><li>`3111` (British Midland)</li><li>`3112` (Windward Island)</li><li>`3117` (Venezolana Int de Aviacion)</li><li>`3118` (Valley Airlines)</li><li>`3125` (Tan Airlines)</li><li>`3126` (Talair PTY Ltd.)</li><li>`3127` (Taca International)</li><li>`3129` (Surinam Airways)</li><li>`3130` (Sunworld International Airways)</li><li>`3131` (VLM Air)</li><li>`3132` (Frontier Airlines)</li><li>`3133` (Sunbelt Airlines)</li><li>`3135` (Sudan Airlines)</li><li>`3136` (Qatar Air)</li><li>`3137` (Singleton)</li><li>`3138` (Simmons Airlines)</li><li>`3141` (Seair Alaska)</li><li>`3143` (Scenic Airlines)</li><li>`3144` (Virgin Atlantic)</li><li>`3145` (San Juan)</li><li>`3146` (Luxair)</li><li>`3148` (Air Littoral SA)</li><li>`3151` (Air Laire)</li><li>`3154` (Princeville)</li><li>`3156` (Go Fly)</li><li>`3159` (PBA-Provincetwn-Bstn Air)</li><li>`3161` (All Nippon Airways)</li><li>`3164` (Norontair)</li><li>`3165` (New York Helicopter)</li><li>`3167` (Aero Continente - AEROCONTINENTE)</li><li>`3170` (Mount Cook)</li><li>`3171` (Canadian Airlines)</li><li>`3172` (Nation Air)</li><li>`3174` (JetBlue Airways)</li><li>`3175` (Middle East Air)</li><li>`3176` (Metroflight Airlines)</li><li>`3177` (AirTran Airways)</li><li>`3178` (Mesa Air)</li><li>`3180` (Westjet Airlines-WESTJET)</li><li>`3181` (Malev Hungarian Airlines)</li><li>`3182` (LOT (Poland))</li><li>`3183` (Oman Aviation - OMAN AIR)</li><li>`3184` (LIAT)</li><li>`3185` (LAV (Venezuela))</li><li>`3186` (LAP (Paraguay))</li><li>`3187` (LACSA (Costa Rica))</li><li>`3188` (Virgin Express - VIR EXP)</li><li>`3190` (Jugoslav Air)</li><li>`3191` (Island Airlines)</li><li>`3192` (Iran Air)</li><li>`3193` (Indian Airlines)</li><li>`3195` (Holiday Airlines)</li><li>`3196` (Hawaiian Air)</li><li>`3197` (Havasu Airlines)</li><li>`3198` (Harbor Airlines)</li><li>`3199` (Servicios Aereos Militares)</li><li>`3200` (Guyana Airways)</li><li>`3203` (Golden Pacific Air)</li><li>`3204` (Freedom Airlines)</li><li>`3206` (China Eastern Airlines (Abbr: China East Air))</li><li>`3207` (Empresa Ecuatoriana)</li><li>`3211` (Norwegian Air Shuttle - NORWEGIANAIR)</li><li>`3212` (Dominicana de Aviacion)</li><li>`3213` (Malmo Aviation - MALMO AV)</li><li>`3215` (Dan Air Services)</li><li>`3216` (Cumberland Airlines)</li><li>`3217` (CSA-Ceskoslovenske Aeroln)</li><li>`3218` (Crown Air)</li><li>`3219` (Copa)</li><li>`3220` (Compania Faucett)</li><li>`3221` (Transportes Aeros Mil)</li><li>`3222` (Command Airways)</li><li>`3223` (Comair)</li><li>`3226` (Skyways Air- SKYWAYS)</li><li>`3228` (Cayman Airways)</li><li>`3229` (SAETA)</li><li>`3231` (SAHSA)</li><li>`3233` (Capitol Air)</li><li>`3234` (CARIBAIR)</li><li>`3235` (Brockway Air)</li><li>`3236` (Air Arabia Airlines - Air Arab)</li><li>`3238` (Bemidji Aviation)</li><li>`3239` (Bar Harbor Airlines)</li><li>`3240` (Bahamasair)</li><li>`3241` (Aviateca (Guatemala))</li><li>`3242` (Avensa)</li><li>`3243` (Austrian Air Service)</li><li>`3245` (Easy Jet - EASYJET)</li><li>`3246` (Ryan Air - RYANAIR)</li><li>`3247` (Gol Airlines - GOL)</li><li>`3248` (Tam Airlines - TAM)</li><li>`3251` (Aloha Airlines)</li><li>`3252` (ALM-Antilean Airlines)</li><li>`3253` (America West)</li><li>`3254` (U.S. Air Shuttle)</li><li>`3256` (Alaska Airlines Inc.)</li><li>`3259` (American Trans Air)</li><li>`3260` (Spirit Airlines - SPIRIT)</li><li>`3261` (Air China)</li><li>`3262` (Reno Air)</li><li>`3263` (Aero Servicio Carabobo)</li><li>`3266` (Air Seychelles)</li><li>`3267` (Air Panama International)</li><li>`3268` (Air Pacific)</li><li>`3275` (Air Nevada)</li><li>`3276` (Air Midwest)</li><li>`3277` (Air Madagascar)</li><li>`3279` (Air LA)</li><li>`3280` (Air Jamaica)</li><li>`3282` (Air Djibouti)</li><li>`3284` (Aero Virgin Islands)</li><li>`3285` (AeroPeru)</li><li>`3286` (Aero Nicaraguensis)</li><li>`3287` (Aero Coach Aviation)</li><li>`3291` (Ariana Afghan)</li><li>`3292` (Cyprus Airways)</li><li>`3293` (Ecuatoriana)</li><li>`3294` (Ethiopian Airlines)</li><li>`3295` (Kenya Airways)</li><li>`3296` (Air Berlin-AIRBERLIN)</li><li>`3297` (Tarom Romanian Air Transport)</li><li>`3298` (Air Mauritius)</li><li>`3299` (Wideroe's Flyveselskap)</li><li>`3351` (Affiliated Auto Rental)</li><li>`3352` (American International)</li><li>`3353` (Brooks Rent a Car)</li><li>`3354` (Action Auto Rental)</li><li>`3355` (SIXT Car Rental)</li><li>`3357` (Hertz)</li><li>`3359` (Payless Car Rental)</li><li>`3360` (Snappy Car Rental)</li><li>`3361` (Airways Rent a Car)</li><li>`3362` (Altra Auto Rental)</li><li>`3364` (Agency Rent a Car)</li><li>`3366` (Budget Rent a Car)</li><li>`3368` (Holiday R-A-C)</li><li>`3370` (Rent-a-Wreck)</li><li>`3374` (Accent Rent-A-Car)</li><li>`3376` (Ajax R-A-C)</li><li>`3380` (Triangle Rent a Car)</li><li>`3381` (Europ Car)</li><li>`3385` (Tropical R-A-C)</li><li>`3386` (Showcase Rental Cars)</li><li>`3387` (Alamo Rent a Car)</li><li>`3388` (Merchants Rent-A-Car, Inc)</li><li>`3389` (Avis R-A-C)</li><li>`3390` (Dollar R-A-C)</li><li>`3391` (Europe by Car)</li><li>`3393` (National Car Rental)</li><li>`3394` (Kemwell Group R-A-C)</li><li>`3395` (Thrify Car Rental)</li><li>`3396` (Tilden R-A-C)</li><li>`3398` (Econo Car R-A-C)</li><li>`3400` (Auto Host Car Rentals)</li><li>`3405` (Enterprise R-A-C)</li><li>`3409` (General Rent-a-Car)</li><li>`3412` (A-1 R-A-C)</li><li>`3414` (Godfrey National)</li><li>`3420` (ANSA International)</li><li>`3421` (Allstate Rent-a-Car)</li><li>`3423` (Avcar Rent-a-Car)</li><li>`3425` (Automate Rent-a-Car)</li><li>`3427` (Avon Rent-a-Car)</li><li>`3428` (Carey Rent-a-Car)</li><li>`3429` (Insurance Rent-a-Car)</li><li>`3430` (Major Rent-a-Car)</li><li>`3431` (Replacement Rent-a-Car)</li><li>`3432` (Reserve Rent-a-Car)</li><li>`3433` (Ugly Duckling R-A-C)</li><li>`3434` (USA Rent-a-Car)</li><li>`3435` (Value Rent-a-Car)</li><li>`3436` (Autohansa Rent-a-Car)</li><li>`3437` (Cite)</li><li>`3438` (Interenet Rent-a-Car)</li><li>`3439` (Millville Rent-a-Car)</li><li>`3441` (Advantage Rent A Car)</li><li>`3501` (Holiday Inns)</li><li>`3502` (Best Western Hotels)</li><li>`3503` (Sheraton)</li><li>`3504` (Hilton)</li><li>`3505` (Forte Hotels)</li><li>`3506` (Golden Tulip Hotels)</li><li>`3507` (Friendship Inns)</li><li>`3508` (Quality Inns)</li><li>`3509` (Marriott)</li><li>`3510` (Days Inn Colonial Resort)</li><li>`3511` (Arabella Hotels)</li><li>`3512` (Intercontinental Hotels)</li><li>`3513` (Westin)</li><li>`3514` (Amerisuites)</li><li>`3515` (Rodeway Inn)</li><li>`3516` (LaQuinta Motor Inns)</li><li>`3517` (Americana Hotels)</li><li>`3518` (Sol Hotels)</li><li>`3519` (Pullman International Hotels)</li><li>`3520` (Meridien Hotels)</li><li>`3521` (Royal Lahaina Resort)</li><li>`3522` (Tokyo Group)</li><li>`3523` (Peninsula Hotels)</li><li>`3524` (WelcomGroup Hotels)</li><li>`3525` (Dunfey Hotels)</li><li>`3526` (Prince Hotels)</li><li>`3527` (Downtowner Passport)</li><li>`3528` (Red Lion Inns)</li><li>`3529` (CP (Canadian Pacific))</li><li>`3530` (Renaissance Hotels)</li><li>`3531` (Kauai Coconut Beach Resort)</li><li>`3532` (Royal Kona Resort)</li><li>`3533` (Hotel Ibis)</li><li>`3534` (Southern Pacific)</li><li>`3535` (Hilton International)</li><li>`3536` (AMFAC Hotels)</li><li>`3537` (ANA Hotels)</li><li>`3538` (Concorde Hotels)</li><li>`3539` (Summerfield Suites Hotel)</li><li>`3540` (Iberotel Hotels)</li><li>`3541` (Hotel Okura)</li><li>`3542` (Royal Hotels)</li><li>`3543` (Four Seasons)</li><li>`3544` (Cigna Hotels)</li><li>`3545` (Shangri-La International)</li><li>`3546` (Hotel Sierra)</li><li>`3548` (Hotels Melia)</li><li>`3549` (Auberge des Governeurs)</li><li>`3550` (Regal 8 Inns)</li><li>`3551` (Mirage Hotel and Casino)</li><li>`3552` (Coast Hotel)</li><li>`3553` (Park Inn by Radisson)</li><li>`3554` (Pinehurst Resort)</li><li>`3555` (Treasure Island Hotel and Casino)</li><li>`3556` (Barton Creek Resort)</li><li>`3557` (Manhattan East Suite Hotels)</li><li>`3558` (Jolly Hotels)</li><li>`3559` (Candlewood Suites)</li><li>`3560` (Aladdin Resort and Casino)</li><li>`3561` (Golden Nugget)</li><li>`3562` (Comfort Inns)</li><li>`3563` (Journey's End Motels)</li><li>`3564` (Sam's Town Hotel and Casino)</li><li>`3565` (Relax Inns)</li><li>`3566` (Garden Place Hotel)</li><li>`3567` (Soho Grand Hotel)</li><li>`3568` (Ladbroke Hotels)</li><li>`3569` (Tribeca Grand Hotel)</li><li>`3570` (Forum Hotels)</li><li>`3571` (Grand Wailea Resort)</li><li>`3572` (Miyako Hotel)</li><li>`3573` (Sandman Hotels)</li><li>`3574` (Venture Inn)</li><li>`3575` (Vagabond Hotels)</li><li>`3576` (La Quinta Resort)</li><li>`3577` (Mandarin Oriental Hotel)</li><li>`3578` (Frankenmuth Bavarian)</li><li>`3579` (Hotel Mercure)</li><li>`3580` (Hotel Del Coronado)</li><li>`3581` (Delta Hotels)</li><li>`3582` (California Hotel and Casino)</li><li>`3583` (Radisson BLU)</li><li>`3584` (Princess Hotels International)</li><li>`3585` (Hungar Hotels)</li><li>`3586` (Sokos Hotels)</li><li>`3587` (Doral Hotels)</li><li>`3588` (Helmsley Hotels)</li><li>`3589` (Doral Golf Resort)</li><li>`3590` (Fairmont Hotel)</li><li>`3591` (Sonesta Hotels)</li><li>`3592` (Omni Hotels)</li><li>`3593` (Cunard Hotels)</li><li>`3594` (Arizona Biltmore)</li><li>`3595` (Hospitality Inns)</li><li>`3596` (Wynn Las Vegas)</li><li>`3597` (Riverside Resort and Casino)</li><li>`3598` (Regent International Hotels)</li><li>`3599` (Pannonia Hotels)</li><li>`3600` (Saddlebrook Resort - Tampa)</li><li>`3601` (Trade Winds Resorts)</li><li>`3602` (Hudson Hotel)</li><li>`3603` (Noah's Hotel)</li><li>`3604` (Hilton Garden Inn)</li><li>`3605` (Jurys Doyle Hotel Group)</li><li>`3606` (Jefferson Hotel)</li><li>`3607` (Fountainebleau Resort)</li><li>`3608` (Gaylord Opryland)</li><li>`3609` (Gaylord Palms)</li><li>`3610` (Gaylord Texan)</li><li>`3611` (C MON INN)</li><li>`3612` (Movenpick Hotels)</li><li>`3613` (Microtel Inns & Suites)</li><li>`3614` (Americinn)</li><li>`3615` (Travelodge Motels)</li><li>`3617` (America's Best Value Inn)</li><li>`3618` (Great Wolf)</li><li>`3619` (Aloft)</li><li>`3620` (Binion's Horseshoe Club)</li><li>`3621` (Extended Stay)</li><li>`3622` (Merlin Hotel)</li><li>`3623` (Dorint Hotels)</li><li>`3624` (Lady Luck Hotel and Casino)</li><li>`3625` (Hotel Universale)</li><li>`3626` (Studio Plus)</li><li>`3627` (Extended Stay America)</li><li>`3628` (Excalibur Hotel and Casino)</li><li>`3629` (Dan Hotels)</li><li>`3630` (Extended Stay Deluxe)</li><li>`3631` (Sleep Inn)</li><li>`3632` (The Phoenician)</li><li>`3633` (Rank Hotels)</li><li>`3634` (Swissotel)</li><li>`3635` (Reso Hotel)</li><li>`3636` (Sarova Hotels)</li><li>`3637` (Ramada Inns)</li><li>`3638` (Howard Johnson)</li><li>`3639` (Mount Charlotte Thistle)</li><li>`3640` (Hyatt Motels)</li><li>`3641` (Sofitel Hotels)</li><li>`3642` (Novotel)</li><li>`3643` (Steigenberger Hotels)</li><li>`3644` (EconoLodges)</li><li>`3645` (Queens Moat Houses)</li><li>`3646` (Swallow Hotels)</li><li>`3647` (Husa Hotels)</li><li>`3648` (De Vere Hotels)</li><li>`3649` (Radisson)</li><li>`3650` (Red Roof Inns)</li><li>`3651` (Imperial London Hotel)</li><li>`3652` (Embassy Hotels)</li><li>`3653` (Penta Hotels)</li><li>`3654` (Loews Hotels)</li><li>`3655` (Scandic Hotels)</li><li>`3656` (Sara Hotels)</li><li>`3657` (Oberoi Hotels)</li><li>`3658` (New Otani Hotels)</li><li>`3659` (Taj Hotels International)</li><li>`3660` (Knights Inn)</li><li>`3661` (Metropole Hotels)</li><li>`3662` (Circus Circus Hotel and Casino)</li><li>`3663` (Hoteles El Presidente)</li><li>`3664` (Flag Inns)</li><li>`3665` (Hampton Inn Hotels)</li><li>`3666` (Stakis Hotels)</li><li>`3667` (Luxor Hotel and Casino)</li><li>`3668` (Maritim Hotels)</li><li>`3669` (Eldorado Hotel and Casino)</li><li>`3670` (Arcade Hotels)</li><li>`3671` (Arctia Hotels)</li><li>`3672` (Campanile Hotels)</li><li>`3673` (IBUSZ Hotels)</li><li>`3674` (Rantasipi Hotels)</li><li>`3675` (Interhotel CEDOK)</li><li>`3676` (Monte Carlo Hotel and Casino)</li><li>`3677` (Climat de France Hotels)</li><li>`3678` (Cumulus Hotels)</li><li>`3679` (Silver Legacy Hotel and Casino)</li><li>`3680` (Hoteis Othan)</li><li>`3681` (Adams Mark Hotels)</li><li>`3682` (Sahara Hotel and Casino)</li><li>`3683` (Bradbury Suites)</li><li>`3684` (Budget Hosts Inns)</li><li>`3685` (Budgetel Hotels)</li><li>`3686` (Suisse Chalet)</li><li>`3687` (Clarion Hotels)</li><li>`3688` (Compri Hotels)</li><li>`3689` (Consort Hotels)</li><li>`3690` (Courtyard Inns)</li><li>`3691` (Dillon Inn)</li><li>`3692` (Doubletree)</li><li>`3693` (Drury Inn)</li><li>`3694` (Economy Inns of America)</li><li>`3695` (Embassy Suites)</li><li>`3696` (Excel Inn)</li><li>`3697` (Fairfield Hotels)</li><li>`3698` (Harley Hotels)</li><li>`3699` (Midway Motor Lodge)</li><li>`3700` (Motel 6)</li><li>`3701` (La Mansion Del Rio)</li><li>`3702` (The Registry Hotels)</li><li>`3703` (Residence Inn)</li><li>`3704` (Royce Hotels)</li><li>`3705` (Sandman Inn)</li><li>`3706` (Shilo Inn)</li><li>`3707` (Shoney's Inn)</li><li>`3708` (Virgin River Hotel and Casino)</li><li>`3709` (Super 8 Motels)</li><li>`3710` (The Ritz Carlton Hotels)</li><li>`3711` (Flag Inns (Australia))</li><li>`3712` (Buffalo Bill's Hotel and Casino)</li><li>`3713` (Quality Pacific Hotel)</li><li>`3714` (Four Seasons Hotels-Austr)</li><li>`3715` (Fairfield Inn)</li><li>`3716` (Carlton Hotels)</li><li>`3717` (City Lodge Hotels)</li><li>`3718` (Karos Hotels)</li><li>`3719` (Protea Hotels)</li><li>`3720` (Southern Sun Hotels)</li><li>`3721` (Hilton Conrad Hotels)</li><li>`3722` (Wyndham Hotels)</li><li>`3723` (Rica Hotels)</li><li>`3724` (Inter Nor Hotels)</li><li>`3725` (SeaPines Plantation)</li><li>`3726` (Rio Suites)</li><li>`3727` (Broadmoor Hotel)</li><li>`3728` (Bally's Hotel and Casino)</li><li>`3729` (John Ascuaga's Nugget)</li><li>`3730` (MGM Grand Hotel)</li><li>`3731` (Harrah's Hotels and Casinos)</li><li>`3732` (Opryland Hotel)</li><li>`3733` (Boca Raton Resort)</li><li>`3734` (Harvey/Bristol Hotels)</li><li>`3735` (Master Economy Inns)</li><li>`3736` (Colorado Belle/Edgewater Resort)</li><li>`3737` (Riviera Hotel and Casino)</li><li>`3738` (Tropicana Resort & Casino)</li><li>`3739` (Woodside Hotels & Resorts)</li><li>`3740` (Towneplace Suites)</li><li>`3741` (Millennium Hotel)</li><li>`3742` (Club Med)</li><li>`3743` (Biltmore Hotel and Suites)</li><li>`3744` (Carefree Resorts)</li><li>`3745` (St. Regis Hotel)</li><li>`3746` (The Eliot Hotel)</li><li>`3747` (ClubCorp/ClubResorts)</li><li>`3748` (Wellesley Inns)</li><li>`3749` (The Beverly Hills Hotel)</li><li>`3750` (Crown Plaza Hotels)</li><li>`3751` (Homewood Suites)</li><li>`3752` (Peabody Hotels)</li><li>`3753` (Greenbriar Resorts)</li><li>`3754` (Amelia Island Plantation)</li><li>`3755` (The Homestead)</li><li>`3757` (Canyon Ranch)</li><li>`3758` (Kahala Mandarion Oriental Hotel)</li><li>`3759` (The Orchid at Mauna Lani)</li><li>`3760` (Halekulani Hotel/Waikiki Parc)</li><li>`3761` (Primadonna Hotel and Casino)</li><li>`3762` (Whisky Pete's Hotel and Casino)</li><li>`3763` (Chateau Elan Winery and Resort)</li><li>`3764` (Beau Rivage Hotel and Casino)</li><li>`3765` (Bellagio)</li><li>`3766` (Fremont Hotel and Casino)</li><li>`3767` (Main Street Hotel and Casino)</li><li>`3768` (Silver Star Hotel and Casino)</li><li>`3769` (Stratosphere Hotel and Casino)</li><li>`3770` (SpringHill Suites)</li><li>`3771` (Caesar's Resort)</li><li>`3772` (Nemacolin Woodlands)</li><li>`3773` (The Venetian Resort Hotel and Casino)</li><li>`3774` (New York-New York Hotel and Casino)</li><li>`3775` (Sands Resort)</li><li>`3776` (Nevele Grande Resort and Country Club)</li><li>`3777` (Mandalay Bay Resort)</li><li>`3778` (Four Points Hotels)</li><li>`3779` (W Hotels)</li><li>`3780` (Disney Resorts)</li><li>`3781` (Patricia Grand Resort Hotels)</li><li>`3782` (Rosen Hotels & Resort)</li><li>`3783` (Town and Country Resort and Convention Center)</li><li>`3784` (First Hospitality Hotel)</li><li>`3785` (Outrigger Hotels and Resorts)</li><li>`3786` (Ohana Hotel of Hawaii)</li><li>`3787` (Caribe Royale Resort Suites & Villas)</li><li>`3788` (Ala Moana Hotel / Ala Moana Hotels)</li><li>`3789` (Smugglers' Notch Resort)</li><li>`3790` (Raffles Hotels)</li><li>`3791` (Staybridge Suites)</li><li>`3792` (Claridge Casino Hotel)</li><li>`3793` (The Flamingo Hotels)</li><li>`3794` (Grand Casino Hotels)</li><li>`3795` (Paris Las Vegas Hotel)</li><li>`3796` (Peppermill Hotel Casino)</li><li>`3797` (Atlantic City Hilton)</li><li>`3798` (Embassy Vacation Resort)</li><li>`3799` (Hale Koa Hotel)</li><li>`3800` (Homestead)</li><li>`3801` (Wilderness Hotel and Golf Resort)</li><li>`3802` (The Palace Hotel)</li><li>`3807` (Element)</li><li>`3808` (LXR)</li><li>`3810` (La Costa Resort)</li><li>`3811` (Premier Travel Inn)</li><li>`3812` (Hyatt Place)</li><li>`3813` (Hotel Indigo)</li><li>`3814` (The Roosevelt Hotel NY)</li><li>`3815` (Holiday Inn Nickelodeon)</li><li>`3816` (Home2 Suites)</li><li>`3817` (Affinia)</li><li>`3818` (Mainstay Suites)</li><li>`3819` (Oxford Suites)</li><li>`3820` (Jumeirah Essex House)</li><li>`3821` (Caribe Royale)</li><li>`3822` (Crossland)</li><li>`3823` (Grand Sierra Resort)</li><li>`3824` (Aria)</li><li>`3825` (Vdara)</li><li>`3826` (Autograph)</li><li>`3827` (Galt House)</li><li>`3828` (Cosmopolitan of Las Vegas)</li><li>`3829` (Country Inn by Carlson)</li><li>`3830` (Park Plaza Hotel)</li><li>`3831` (Waldorf)</li><li>`4011` (Railroads)</li><li>`4111` (Local and Suburban Commuter Passenger Transportation, including Ferries)</li><li>`4112` (Passenger Rail (train))</li><li>`4119` (Ambulance Services)</li><li>`4121` (Taxicabs and Limousines)</li><li>`4131` (Bus Lines, includes Charters/Tour Buses)</li><li>`4214` (Motor Freight Carriers and Trucking-Local and Long Distance, Moving & Storage Companies, and Local Delivery)</li><li>`4215` (Courier Services-Air and Ground, and Freight Forwarders)</li><li>`4225` (Public Warehousing-Farm products, Refrigerated Goods, Household Goods, and Storage)</li><li>`4411` (Steamship and Cruise Lines)</li><li>`4457` (Boat Rentals and Leasing)</li><li>`4468` (Marinas, Marine Service, and Supplies)</li><li>`4511` (Airlines and Air Carriers)</li><li>`4582` (Airports, Flying Fields, and Airport Terminals)</li><li>`4722` (Travel Agencies)</li><li>`4723` (Package Tour Operators (Germany Only))</li><li>`4761` (Telemarketing of Travel Related Services and Vitamins)</li><li>`4784` (Bridge and Road Fees, Tolls)</li><li>`4789` (Transportation Services-not elsewhere classified)</li><li>`4812` (Telecommunication Equipment and Telephone Sales)</li><li>`4813` (Special Telecom Merchant)</li><li>`4814` (Telecommunication Services, Including Local and Long Distance Calls, Credit Card Calls, Call Through Use of Magnetic-Strip-Reading Telephones, and Fax Services)</li><li>`4815` (Monthly Summary Telephone Charges)</li><li>`4816` (Computer Network/Information Services and other Online Services such as electronic bulletin board, e-mail, web site hosting services, or Internet access)</li><li>`4821` (Telegraph Services)</li><li>`4829` (Quasi Cash - Money Transfer)</li><li>`4899` (Cable, Satellite, and Other Pay Television and Radio Services)</li><li>`4900` (Utilities-Electric, Gas, Water, and Sanitary)</li><li>`5013` (Motor Vehicle Supplies and New Parts (Business to Business MCC))</li><li>`5021` (Office Furniture (Business to Business MCC))</li><li>`5039` (Construction Materials Not Elsewhere Classified (Business to Business MCC))</li><li>`5044` (Photographic, Photocopy, Microfilm Equipment and Supplies (Business to Business MCC))</li><li>`5045` (Computers, Computer Peripheral Equipment, and Software)</li><li>`5046` (Commercial Equipment Not Elsewhere Classified (Business to Business MCC))</li><li>`5047` (Dental/Laboratory/Medical/Ophthalmic Hospital Equipment and Supplies)</li><li>`5051` (Metal Service Centers and Offices (Business to Business MCC))</li><li>`5065` (Electrical Parts and Equipment (Business to Business MCC))</li><li>`5072` (Hardware, Plumbing, Heat Equipment and Supplies (Business to Business MCC))</li><li>`5074` (Plumbing and Heating Equipment and Supplies (Business to Business MCC))</li><li>`5085` (Industrial Supplies Not Elsewhere Classified (Business to Business MCC))</li><li>`5094` (Precious Stones, Metals, Watches and Jewelry (Business to Business MCC))</li><li>`5099` (Durable Goods Not Elsewhere Classified (Business to Business MCC))</li><li>`5111` (Stationery, Office Supplies, and Printing and Writing Paper)</li><li>`5122` (Drugs, Drug Proprietary's, and Druggists' Sundries)</li><li>`5131` (Piece Goods, Notions and Other Dry Goods (Business to Business MCC))</li><li>`5137` (Men's, Women's and Children's Uniforms (Business to Business MCC))</li><li>`5139` (Commercial Footwear (Business to Business MCC))</li><li>`5169` (Chemicals and Allied Products Not Elsewhere Classified (Business to Business MCC))</li><li>`5172` (Petroleum and Products (Business to Business MCC))</li><li>`5192` (Books, Periodicals and Newspapers (Business to Business MCC))</li><li>`5193` (Florist Suppliers, Nursery Stock & Flowers (Business to Business MCC))</li><li>`5198` (Paints, Varnishes and Supplies (Business to Business MCC))</li><li>`5199` (Non-durable Goods Not Elsewhere Classified (Business to Business MCC))</li><li>`5200` (Home Supply Warehouse)</li><li>`5211` (Lumber & Building Materials Stores)</li><li>`5231` (Glass, Paint, and Wallpaper Stores)</li><li>`5251` (Hardware Stores, Equipment Utilities Regulated)</li><li>`5261` (Nurseries and Lawn and Garden Supply Stores)</li><li>`5271` (Mobile Home Dealer)</li><li>`5300` (Wholesale Club with or without membership fee)</li><li>`5309` (Duty Free Stores)</li><li>`5310` (Discount Store)</li><li>`5311` (Department Stores)</li><li>`5331` (Variety Stores)</li><li>`5399` (Miscellaneous General Merchandise)</li><li>`5411` (Grocery Stores and Supermarkets)</li><li>`5422` (Freezer & Locker Meat Provisions)</li><li>`5441` (Candy, Nut, and Confectionary Stores)</li><li>`5451` (Dairy Product Stores)</li><li>`5462` (Bakeries)</li><li>`5499` (Miscellaneous Food Stores-Convenience Stores and Specialty Markets)</li><li>`5511` (Car and Truck Dealers (New and Used)- Sales, Service, Repairs, Parts, and Leasing)</li><li>`5521` (Car and Truck Dealers (Used)- Sales, Service, Repairs, Parts, and Leasing)</li><li>`5532` (Automotive Tire Stores)</li><li>`5531` (Auto and Home Supply Stores)</li><li>`5533` (Automotive Parts and Accessories Stores)</li><li>`5541` (Service Stations (with or without Ancillary Services))</li><li>`5542` (Automated Fuel Dispensers)</li><li>`5551` (Boat Dealers)</li><li>`5561` (Camper, Recreational and Utility Trailer Dealers)</li><li>`5571` (Motorcycle Dealers)</li><li>`5592` (Motor Home Dealers)</li><li>`5598` (Snowmobile Dealers)</li><li>`5599` (Miscellaneous Automotive, Aircraft, and Farm Equipment Dealers --Not Elsewhere Classified)</li><li>`5611` (Men's & Boys' Clothing and Accessory Stores)</li><li>`5621` (Women's Ready-to-Wear Stores)</li><li>`5631` (Women's Accessory and Specialty Stores)</li><li>`5641` (Children's and Infants' Wear Stores)</li><li>`5651` (Family Clothing Stores)</li><li>`5655` (Sports and Riding Apparel Stores)</li><li>`5661` (Shoe Stores)</li><li>`5681` (Furriers & Fur Shops)</li><li>`5691` (Men's and Women's Clothing Stores)</li><li>`5697` (Tailors, Seamstresses, Mending, Alterations)</li><li>`5698` (Wig & Toupee Shops)</li><li>`5699` (Miscellaneous Apparel and Accessory Stores)</li><li>`5712` (Furniture, Home Furnishings, and Equipment Stores, except Appliances)</li><li>`5713` (Floor coverings, Rugs)</li><li>`5714` (Drapery, Window Covering, and Upholstery Stores)</li><li>`5718` (Fireplaces, Fireplace Screens and Accessories Stores)</li><li>`5719` (Miscellaneous Home Furnishing Specialty Stores)</li><li>`5722` (Household Appliance Stores)</li><li>`5732` (Electronics Stores)</li><li>`5733` (Music Stores-Musical Instruments, Pianos, and Sheet Music)</li><li>`5734` (Computer Software Stores)</li><li>`5735` (Record Stores)</li><li>`5811` (Caterers - Prepare & Delivery)</li><li>`5812` (Eating Places and Restaurants)</li><li>`5813` (Drinking Places (Alcoholic Beverages) - Bars, Taverns, Nightclubs, Cocktail Lounges, and Discotheques)</li><li>`5814` (Quick Payment Service-Fast Food Restaurants)</li><li>`5815` (Digital Goods â Media, Books, Movies, Music)</li><li>`5816` (Digital Goods â Games)</li><li>`5817` (Digital Goods â Applications (Excludes Games))</li><li>`5818` (Large Digital Goods Merchant)</li><li>`5912` (Drug Stores and Pharmacies)</li><li>`5921` (Package Stores--Beer, Wine, and Liquor)</li><li>`5931` (Used Merchandise and Secondhand Stores)</li><li>`5932` (Antique Shop)</li><li>`5933` (Pawn Shop)</li><li>`5935` (Wrecking and Salvage Yards)</li><li>`5937` (Antique Reproduction Stores)</li><li>`5940` (Bicycle Shop-Sales and Services)</li><li>`5941` (Sporting Goods Stores)</li><li>`5942` (Book Stores)</li><li>`5943` (Stationery, Office and School Supply Stores)</li><li>`5944` (Jewelry, Watch, Clock, and Silverware Stores)</li><li>`5945` (Hobby, Toy and Game Stores)</li><li>`5946` (Camera and Photographic Supply Stores)</li><li>`5947` (Gift, Card, Novelty, and Souvenir Stores)</li><li>`5948` (Luggage and Leather Goods Stores)</li><li>`5949` (Sewing, Needlework, Fabric, and Piece Good Stores)</li><li>`5950` (Glassware and Crystal Stores)</li><li>`5960` (Direct Marketing Insurance Services)</li><li>`5961` (Mail Order)</li><li>`5962` (Direct Marketing -- Travel Related Arrangement Services)</li><li>`5963` (Direct Selling Establishments/Door to Door Sales)</li><li>`5964` (Catalog Merchant)</li><li>`5965` (Combined Catalog and Retail Merchant)</li><li>`5966` (Outbound Telemarketing Merchant)</li><li>`5967` (Direct Marketing -- Inbound Telemarketing Merchants)</li><li>`5968` (Continuity/Subscription Merchants)</li><li>`5969` (Direct Marketing/Direct Marketers--Not Elsewhere Classified)</li><li>`5970` (Artist Supply and Craft Stores)</li><li>`5971` (Art Dealers and Galleries)</li><li>`5972` (Stamp and Coin Stores)</li><li>`5973` (Religious Goods Stores)</li><li>`5975` (Hearing Aids--Sales, Service, and Supplies)</li><li>`5976` (Orthopedic Goods and Prosthetic Devices)</li><li>`5977` (Cosmetic Stores)</li><li>`5978` (Typewriter Stores--Sales, Service, and Rentals)</li><li>`5983` (Fuel Dealers--Fuel Oil, Wood, Coal, and Liquefied Petroleum)</li><li>`5992` (Florists)</li><li>`5993` (Cigar Stores & Stands)</li><li>`5994` (News Dealers & Newsstands)</li><li>`5995` (Pet Shops, Pet Food, and Supplies)</li><li>`5996` (Swimming Pools--Sales, Supplies, and Services)</li><li>`5997` (Electric Razor Stores Sales & Services)</li><li>`5998` (Tent and Awning Stores)</li><li>`5999` (Miscellaneous & Specialty Retail Stores)</li><li>`6010` (Financial Institutions--Manual Cash Disbursements)</li><li>`6011` (Financial Institutions--Automated Cash Disbursements)</li><li>`6012` (Quasi Cash - Financial Institution - Merchandise and Services)</li><li>`6050` (Quasi Cash - Member Financial Institution)</li><li>`6051` (MasterCard - Quasi Cash-Merchant)</li><li>`6211` (Securities - Brokers and Dealers)</li><li>`6300` (Insurance Sales and Underwriting)</li><li>`6381` (Insurance - Premiums)</li><li>`6399` (Insurance - Not Elsewhere Classified)</li><li>`6513` (Real Estate Agents and Managers - Rentals; Property Management)</li><li>`6529` (Remote Stored Value Load - Member Financial Institution)</li><li>`6530` (Remote Stored Value Load - Merchant)</li><li>`6531` (Payment Service Provider)</li><li>`6532` (Payment Transaction - Member)</li><li>`6533` (Payment Transaction - Merchant)</li><li>`6534` (Money Transfer - Member Financial Institution)</li><li>`6535` (Value Purchase - Member Financial Institution)</li><li>`6536` (MoneySend Intracountry)</li><li>`6537` (MoneySend Intercountry)</li><li>`6538` (MoneySend Funding)</li><li>`6540` (POI Funding Transactions (Excluding MoneySend))</li><li>`7011` (Lodging - Hotels, Motels, and Resorts)</li><li>`7012` (Timeshares)</li><li>`7032` (Sporting and Recreational Camps)</li><li>`7033` (Trailer Parks and Campgrounds)</li><li>`7210` (Laundry, Cleaning, and Garment Services)</li><li>`7211` (Laundry Services - Family and Commercial)</li><li>`7216` (Dry Cleaners)</li><li>`7217` (Carpet and Upholstery Cleaning)</li><li>`7221` (Photographic Studios)</li><li>`7230` (Beauty and Barber Shops)</li><li>`7251` (Shoe Repair Shops, Shoe Shine Parlors, and Hat Cleaning Shops)</li><li>`7261` (Funeral Services and Crematories)</li><li>`7273` (Dating Services)</li><li>`7276` (Tax Preparation Services)</li><li>`7277` (Counseling Services - Debt, Marriage, and Personal)</li><li>`7278` (Buying and Shopping Services and Clubs)</li><li>`7296` (Clothing Rental - Costumes, Uniforms and Formal Wear)</li><li>`7297` (Massage Parlors)</li><li>`7298` (Health and Beauty Spas)</li><li>`7299` (Miscellaneous Personal Services - Not Elsewhere Classified)</li><li>`7311` (Advertising Services)</li><li>`7321` (Consumer Credit Reporting Agencies)</li><li>`7332` (Blueprinting and Photocopying Services)</li><li>`7333` (Commercial Photography, Art, and Graphics)</li><li>`7338` (Quick Copy, Reproduction Service)</li><li>`7339` (Stenographic Service)</li><li>`7342` (Exterminating and Disinfecting Services)</li><li>`7349` (Cleaning, Maintenance & Janitorial Services)</li><li>`7361` (Employment Agencies and Temporary Help Services)</li><li>`7372` (Computer Programming, Data Processing, and Integrated Systems Design Services)</li><li>`7375` (Information Retrieval Services (Business to Business MCC))</li><li>`7379` (Computer Maintenance, Repair and Services (Business to Business MCC))</li><li>`7392` (Management, Consulting, and Public Relations Services)</li><li>`7393` (Detective Agencies, Protective Agencies, and Security Services, including Armored Cars and Guard Dogs)</li><li>`7394` (Equipment, Tool, Furniture, and Appliance Rental and Leasing)</li><li>`7395` (Photofinishing Laboratories and Photo Developing)</li><li>`7399` (Business Services)</li><li>`7511` (Truck Stops)</li><li>`7512` (Automobile Rental Agency)</li><li>`7513` (Truck and Utility Trailer Rentals)</li><li>`7519` (Motor Home and Recreational Vehicle Rentals)</li><li>`7523` (Parking Lots and Garages)</li><li>`7524` (Express Payment Service Mechants - Parking Lots and Garages)</li><li>`7531` (Automotive Top & Body Shops)</li><li>`7534` (Tire Retreading & Repair)</li><li>`7535` (Automotive Paint Shops)</li><li>`7538` (Automotive Service Shops (Non-Dealer))</li><li>`7542` (Car Washes)</li><li>`7549` (Towing Services)</li><li>`7622` (Electronic Repair Shops)</li><li>`7623` (Air Conditioning and Refrigeration Repair Shops)</li><li>`7629` (Electrical and Small Appliance Repair Shops)</li><li>`7631` (Watch, Clock, and Jewelry Repair Shops)</li><li>`7641` (Furniture - Reupholster, Repair, and Refinishing)</li><li>`7692` (Welding Services)</li><li>`7699` (Miscellaneous Repair Shops and Related Services)</li><li>`7778` (Citishare Cash Advance)</li><li>`7800` (Government-Owned Lotteries)</li><li>`7801` (Government-Licensed Casinos (Online Gambling))</li><li>`7802` (Government-Licensed Horse/Dog Racing)</li><li>`7829` (Motion Picture & Video Tape Production and Distribution (Business to Business MCC))</li><li>`7832` (Motion Picture Theater)</li><li>`7841` (DVD/Video Tape Rental Stores)</li><li>`7911` (Dance Halls, Studios & Schools)</li><li>`7922` (Theatrical Producers (except Motion Pictures) and Ticket Agencies)</li><li>`7929` (Bands, Orchestras & Misc Entertainment)</li><li>`7932` (Billiards & Pool Establishments)</li><li>`7933` (Bowling Alleys)</li><li>`7941` (Commercial Sports, Professional Sports Clubs, Athletic Fields, and Sports Promoters)</li><li>`7991` (Tourist Attractions and Exhibits)</li><li>`7992` (Public Golf Courses)</li><li>`7993` (Video Amusement Game Supply)</li><li>`7994` (Video Game Arcades and Establishments)</li><li>`7995` (Betting, including Lottery Tickets, Casino Gaming Chips, Off- Track Betting, and Wagers at Race Track)</li><li>`7996` (Amusement Parks, Circuses, Carnivals, and Fortune Tellers)</li><li>`7997` (Membership Clubs (Sports, Recreation, Athletic), Country Clubs, and Private Golf Courses)</li><li>`7998` (Aquarium, Seaquarium, Dolphinariums)</li><li>`7999` (Recreation Services - Not Elsewhere Classified)</li><li>`8011` (Doctors and Physicians - Not Elsewhere Classified)</li><li>`8021` (Dentists and Orthodontists)</li><li>`8031` (Osteopathic Physicians)</li><li>`8041` (Chiropractors)</li><li>`8042` (Optometrists and Ophthalmologists)</li><li>`8043` (Opticians, Optical Goods and Eyeglasses)</li><li>`8049` (Podiatrists and Chiropodists)</li><li>`8050` (Nursing and Personal Care Facilities)</li><li>`8062` (Hospitals)</li><li>`8071` (Medical and Dental Laboratories)</li><li>`8099` (Medical Services Health Practitioners - No Elsewhere Classified)</li><li>`8111` (Legal Services and Attorneys)</li><li>`8211` (Elementary and Secondary Schools)</li><li>`8220` (Colleges, Universities, Professional Schools, and Junior Colleges)</li><li>`8241` (Correspondence Schools)</li><li>`8244` (Business and Secretarial Schools)</li><li>`8249` (Trade and Vocational Schools)</li><li>`8299` (Schools and Educational Services - Not Elsewhere Classified)</li><li>`8351` (Child Care Services)</li><li>`8398` (Charitable and Social Service Organizations)</li><li>`8641` (Civic, Social, and Fraternal Associations)</li><li>`8651` (Political Organizations)</li><li>`8661` (Religious Organizations)</li><li>`8675` (Automobile Associations)</li><li>`8699` (Membership Organizations - Not Elsewhere Classified)</li><li>`8734` (Testing Laboratories (Not Medical) - (Business to Business MCC))</li><li>`8911` (Architectural, Engineering, and Surveying Services)</li><li>`8931` (Accounting, Auditing, and Bookkeeping Services)</li><li>`8999` (Professional Services - Not Elsewhere Classified)</li><li>`9211` (Court Costs, including Alimony and Child Support)</li><li>`9222` (Fines)</li><li>`9223` (Bail & Bond Payments)</li><li>`9311` (Tax Payments)</li><li>`9399` (Government Services - Not Elsewhere Classified)</li><li>`9401` (i-Purchasing)</li><li>`9402` (Postal Services)</li><li>`9405` (U.S. Fed Government Agencies)</li><li>`9700` (Automated Referral Service)</li><li>`9701` (Visa Credential Server)</li><li>`9702` (GCAS Emergency Services)</li><li>`9751` (U.K. Supermarkets, Electronic Hot File)</li><li>`9752` (U.K. Petrol Stations, Electronic Hot File)</li><li>`9753` (Consumer Electronics/Furniture Store)</li><li>`9754` (Quasi Cash - Gambling-Horse Racing, Dog Racing, State Lotteries)</li><li>`9950` (Intra-Company Purchases)</li></ul>",
                      "example": "0742"
                  },
                  "ppcUserGroup": {
                      "type": "string",
                      "description": "The payment user group from the purpose code list for the application.<br><br>Allowed values:<ul><li>WHOLESALE_FI_FI</li><li>COMMERCIAL</li><li>CONSUMER_GOODS_SERVICES</li><li>FINANCE</li><li>INSURANCE</li><li>PROPERTY</li><li>UTILITIES</li><li>TAX</li><li>SALARIES_INCOMES</li><li>INVESTMENTS</li><li>FOREIGN_EXCHANGE</li><li>GOVERNMENT</li><li>BENEFIT_PAYMENTS</li><li>MEDICAL</li><li>PENSIONS</li></ul>",
                      "example": "WHOLESALE_FI_FI"
                  },
                  "callbackUrls": {
                      "type": "array",
                      "description": "The application callback URLs",
                      "items": {
                          "type": "string"
                      }
                  },
                  "isContractPresent": {
                      "type": "boolean",
                      "description": "Indicates if a contract is in place with the merchant and a KYB process has been completed"
                  }
              }
          },
          "ApiResponseOfApplicationResponse": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                  },
                  "data": {
                      "$ref": "#/components/schemas/ApplicationResponse"
                  }
              }
          },
          "ApiListOfApplicationResponse": {
              "type": "object",
              "properties": {
                  "meta": {
                      "$ref": "#/components/schemas/ApplicationResponseListMeta"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ApplicationResponse"
                      }
                  }
              }
          },
          "ValidationError": {
              "required": [
                  "fieldName",
                  "error"
              ],
              "properties": {
                  "fieldName": {
                      "type": "string",
                      "format": "string",
                      "description": "name of the field with error"
                  },
                  "error": {
                      "$ref": "#/components/schemas/EnumError"
                  }
              }
          },
          "EnumError": {
              "type": "string",
              "enum": [
                  "MANDATORY",
                  "INVALID_FORMAT"
              ]
          },
          "ValidationErrorResponse": {
              "type": "object",
              "properties": {
                  "errors": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/ValidationError"
                      }
                  }
              }
          },
          "VrpConfiguration": {
              "properties": {
                  "maximumIndividualAmount": {
                      "description": "Maximum amount per transaction",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/Amount"
                          }
                      ]
                  },
                  "maximumCumulativeAmount": {
                      "description": "Maximum cumulative amount",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/Amount"
                          }
                      ]
                  },
                  "maximumCumulativeNumberOfPayments": {
                      "description": "Maximum cumulative number of payments",
                      "type": "integer",
                      "minimum": 0
                  },
                  "periodicLimits": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/VrpPeriodicLimit"
                      },
                      "minItems": 1
                  },
                  "recurringPaymentCategory": {
                      "description": "Payment Category with allowed values: ONGOING, SUBSCRIPTION",
                      "type": "string",
                      "example": "ONGOING"
                  }
              }
          },
          "VrpPeriodicLimit": {
              "required": [
                  "maximumAmount",
                  "frequency",
                  "alignment"
              ],
              "properties": {
                  "maximumAmount": {
                      "description": "__Mandatory__. Maximum amount that can be specified in all payment instructions in a given period under this VRP consent. If the Alignment is Calendar, the limit is pro-rated in the first period to the remaining number of days.",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/Amount"
                          }
                      ]
                  },
                  "frequency": {
                      "$ref": "#/components/schemas/FrequencyEnum"
                  },
                  "alignment": {
                      "$ref": "#/components/schemas/AlignmentEnum"
                  }
              }
          },
          "FrequencyEnum": {
              "type": "string",
              "description": "__Mandatory__. Frequency for which the payment limits are enforced. Allowed values are [MONTHLY].",
              "enum": [
                  "MONTHLY"
              ]
          },
          "AlignmentEnum": {
              "type": "string",
              "description": "__Mandatory__. Period alignment for which the payment limits are enforced. Allowed values are [CONSENT, CALENDAR]. If CONSENT, then period starts on consent creation date. If CALENDAR, then period lines up with the frequency e.g. WEEKLY period will begin at start of the week in question.",
              "enum": [
                  "CONSENT",
                  "CALENDAR"
              ]
          },
          "UserMetadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "Metadata": {
            "type": "object",
            "properties": {
              "tracingId": {
                "type": "string",
                "format": "uuid",
                "description": "yapily tracing id"
              }
            }
          },
          "WebhookDetailsWithSecret": {
            "type": "object",
            "properties": {
              "metadata": {
                "$ref": "#/components/schemas/Metadata"
              },
              "data": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RegisteredWebhookWithStatus"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "webhookSecret": {
                        "type": "string",
                        "description": "HMAC secret needed to validate that the request payload is genuine"
                      }
                    }
                  }
                ]
              }
            }
          },
        "RegisteredWebhookWithStatus": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RegisteredWebhook"
            },
            {
              "type": "object",
              "properties": {
                "status": {
                  "$ref": "#/components/schemas/WebhookStatusType"
                }
              }
            }
          ]
        },
        "WebhookStatusType": {
          "type": "string",
          "enum": [
            "active",
            "paused"
          ]
        },
        "RegisteredWebhook": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "the UUID of the registered webhook, used to update or remove the webhook",
              "format": "uuid"
            },
            "applicationId": {
              "type": "string",
              "description": "user applicaiton id",
              "format": "uuid"
            },
            "categories": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "webhook event category name"
              }
            },
            "callbackUrl": {
              "type": "object",
              "properties": {
                "main": {
                  "type": "object",
                  "description": "primary webhook url used to send events to",
                  "properties": {
                    "url": {
                      "type": "string"
                    }
                  }
                },
                "backup": {
                  "type": "object",
                  "description": "backup webhook url used to send events to in case the main one is not responding",
                  "properties": {
                    "url": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "metadata": {
              "$ref": "#/components/schemas/UserMetadata"
            }
          }
        },
        "CategoryStructure": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "webhook event category name"
            },
            "description": {
              "type": "string",
              "description": "description of the webhook event category"
            }
          }
        }
      },
      "securitySchemes": {
          "basicAuth": {
              "description": "Requests to the Yapily API are authenticated using an Application's `APPLICATION_KEY` and `APPLICATION_SECRET`. You can view and manage your credentials in the [Yapily Console](https://console.yapily.com/).<br><br> An `APPLICATION_KEY` and `APPLICATION_SECRET` pair provides connectivity to each `Institution` configured in a Yapily `Application`, so it is important to keep these credentials secure. Do not share your `APPLICATION_SECRET` in publicly accessible areas such as GitHub, client-side code, etc. <br><br> Authentication is performed using HTTP Basic Authentication. `Your APPLICATION_KEY` should be sent as the basic auth `username` and your `APPLICATION_SECRET` should be sent as the basic auth `password`. <br><br> All requests should be made via HTTPS.<aside class=\"info\">HTTP Basic Authentication credentials are generated by concatenating APPLICATION_KEY and APPLICATION_SECRET separated with a colon and encoded with base64 to form the `authToken`, as follows: <br><br>`authToken` = Base64 encoded(`APPLICATION_KEY` + ':' + `APPLICATION_SECRET`).</aside>",
              "scheme": "basic",
              "type": "http"
          }
      },
      "examples": {
          "bulk-payment-details-by-id-response": {
            "value": {
              "meta": {
                "tracingId": "27b47dca-fb0f-4448-b470-1cd2d5516d0f"
              },
              "data": {
                "id": "e75d2c85-08e9-4a48-8d14-f789186f2a19",
                "consentId": "5daeb980-5ff5-49db-b7a0-e93dd9c93533",
                "createdAt": "2024-07-25T18:14:52.672Z",
                "Payments": [
                  {
                    "reference": "Test 1",
                    "status": "Accepted Settlement In Process"
                  }
                ]
              }
            }
          },
          "berlin-group-example-acc-auth-request": {
              "description": "Berlin Group Example Request",
              "value": {
                  "applicationUserId": "string",
                  "institutionId": "n26"
              }
          },
          "berlin-group-example-embedded-acc-auth-request": {
              "description": "Berlin Group Example Request",
              "value": {
                  "applicationUserId": "string",
                  "institutionId": "fiducia-sandbox",
                  "userCredentials": {
                      "id": "6154057725",
                      "password": "PISPWD12"
                  }
              }
          },
          "berlin-group-sca-code-example-request": {
              "description": "Berlin Group (SCA Code) Example Request",
              "value": {
                  "applicationUserId": "string",
                  "institutionId": "fiducia-sandbox",
                  "scaCode": "6154057725"
              }
          },
          "berlin-group-selected-sca-method-example-request": {
              "description": "Berlin Group (Selected SCA Method) Example Request",
              "value": {
                  "applicationUserId": "string",
                  "institutionId": "fiducia-sandbox",
                  "selectedScaMethod": {
                      "id": "944",
                      "type": "PUSH_OTP",
                      "description": "SecureSIGN",
                      "information": "Bitte bestÃ¤tigen Sie den Vorgang in Ihrer SecureGo plus App"
                  }
              }
          },
          "berlin-group-eur-embedded-bulk-payment-example-request": {
              "description": "Berlin Group EUR Embedded Bulk Payment Example Request",
              "value": {
                  "applicationUserId": "string",
                  "institutionId": "fiducia-sandbox",
                  "userCredentials": {
                      "id": "VRK1234567890PLUS",
                      "password": "password"
                  },
                  "paymentRequest": {
                      "executionDateTime": "2021-10-29T00:00:00Z",
                      "payments": [
                          {
                              "type": "DOMESTIC_PAYMENT",
                              "paymentIdempotencyId": "e4f913909a3d11eabb370242ac130002",
                              "reference": "REFERENCE",
                              "amount": {
                  "amount": 1.00,
                                  "currency": "EUR"
                              },
                              "payer": {
                                  "name": "John Doe",
                                  "accountIdentifications": [
                                      {
                                          "type": "IBAN",
                                          "identification": "DE39499999600000005111"
                                      }
                                  ]
                              },
                              "payee": {
                                  "name": "Jane Doe",
                                  "address": {
                                      "country": "DE"
                                  },
                                  "accountIdentifications": [
                                      {
                                          "type": "IBAN",
                                          "identification": "DE12345678901234567890"
                                      }
                                  ]
                              }
                          },
                          {
                              "type": "DOMESTIC_PAYMENT",
                              "paymentIdempotencyId": "e4f913909a3d11eabb370242ac130002",
                              "reference": "REFERENCE",
                              "amount": {
                  "amount": 1.00,
                                  "currency": "EUR"
                              },
                              "payer": {
                                  "name": "Jane Doe",
                                  "accountIdentifications": [
                                      {
                                          "type": "IBAN",
                                          "identification": "DE39499999600000005111"
                                      }
                                  ]
                              },
                              "payee": {
                                  "name": "John Doe",
                                  "address": {
                                      "country": "DE"
                                  },
                                  "accountIdentifications": [
                                      {
                                          "type": "IBAN",
                                          "identification": "DE12345678900000000000"
                                      }
                                  ]
                              }
                          }
                      ]
                  }
              }
          },
          "berlin-group-eur-embedded-bulk-payment-sca-code-example-request": {
              "description": "Berlin Group EUR Embedded Bulk Payment (SCA Code) Example Request",
              "value": {
                  "applicationUserId": "string",
                  "institutionId": "fiducia-sandbox",
                  "scaCode": "123456",
                  "paymentRequest": {
                      "executionDateTime": "2021-10-29T00:00:00Z",
                      "payments": [
                          {
                              "type": "DOMESTIC_PAYMENT",
                              "paymentIdempotencyId": "e4f913909a3d11eabb370242ac130002",
                              "reference": "REFERENCE",
                              "amount": {
                  "amount": 1.00,
                                  "currency": "EUR"
                              },
                              "payer": {
                                  "name": "John Doe",
                                  "accountIdentifications": [
                                      {
                                          "type": "IBAN",
                                          "identification": "DE39499999600000005111"
                                      }
                                  ]
                              },
                              "payee": {
                                  "name": "Jane Doe",
                                  "address": {
                                      "country": "DE"
                                  },
                                  "accountIdentifications": [
                                      {
                                          "type": "IBAN",
                                          "identification": "DE12345678901234567890"
                                      }
                                  ]
                              }
                          },
                          {
                              "type": "DOMESTIC_PAYMENT",
                              "paymentIdempotencyId": "e4f913909a3d11eabb370242ac130002",
                              "reference": "REFERENCE",
                              "amount": {
                  "amount": 1.00,
                                  "currency": "EUR"
                              },
                              "payer": {
                                  "name": "Jane Doe",
                                  "accountIdentifications": [
                                      {
                                          "type": "IBAN",
                                          "identification": "DE39499999600000005111"
                                      }
                                  ]
                              },
                              "payee": {
                                  "name": "John Doe",
                                  "address": {
                                      "country": "DE"
                                  },
                                  "accountIdentifications": [
                                      {
                                          "type": "IBAN",
                                          "identification": "DE12345678900000000000"
                                      }
                                  ]
                              }
                          }
                      ]
                  }
              }
          },
          "berlin-group-eur-single-domestic-payment-example-request": {
              "description": "Berlin Group EUR Single Domestic Payment Example Request",
              "value": {
                  "applicationUserId": "string",
                  "institutionId": "n26",
                  "paymentRequest": {
                      "paymentIdempotencyId": "234g87t58tgeuo848wudjew489",
                      "payer": {
                          "name": "John Doe",
                          "accountIdentifications": [
                              {
                                  "type": "IBAN",
                                  "identification": "DE12345678901234567890"
                              }
                          ]
                      },
                      "amount": {
              "amount": 1.00,
                          "currency": "EUR"
                      },
                      "reference": "Bill Payment",
                      "type": "DOMESTIC_PAYMENT",
                      "payee": {
                          "name": "Jane Doe",
                          "address": {
                              "country": "BE"
                          },
                          "accountIdentifications": [
                              {
                                  "type": "IBAN",
                                  "identification": "BE12345678901234"
                              }
                          ]
                      }
                  }
              }
          },
          "berlin-group-eur-single-domestic-embedded-payment-example-request": {
              "description": "Berlin Group EUR Single Domestic Payment Example Request",
              "value": {
                  "applicationUserId": "string",
                  "institutionId": "postbank-sandbox",
                  "userCredentials": {
                      "id": "6154057725",
                      "password": "PISPWD12"
                  },
                  "paymentRequest": {
                      "type": "DOMESTIC_PAYMENT",
                      "paymentIdempotencyId": "e4f913909a3d11eabb370242ac130002",
                      "reference": "REFERENCE",
                      "amount": {
              "amount": 1.00,
                          "currency": "EUR"
                      },
                      "payer": {
                          "name": "John Doe",
                          "accountIdentifications": [
                              {
                                  "type": "IBAN",
                                  "identification": "DE12345678901234567890"
                              }
                          ]
                      },
                      "payee": {
                          "name": "Jane Doe",
                          "address": {
                              "country": "DE"
                          },
                          "accountIdentifications": [
                              {
                                  "type": "IBAN",
                                  "identification": "DE09876543210987654321"
                              }
                          ]
                      }
                  }
              }
          },
          "berlin-group-eur-single-domestic-payment-sca-code-example-request": {
              "description": "Berlin Group EUR Single Domestic Payment (SCA Code) Example Request",
              "value": {
                  "applicationUserId": "string",
                  "institutionId": "postbank-sandbox",
                  "scaCode": "325614",
                  "paymentRequest": {
                      "type": "DOMESTIC_PAYMENT",
                      "paymentIdempotencyId": "e4f913909a3d11eabb370242ac130002",
                      "reference": "REFERENCE",
                      "amount": {
              "amount": 1.00,
                          "currency": "EUR"
                      },
                      "payer": {
                          "name": "John Doe",
                          "accountIdentifications": [
                              {
                                  "type": "IBAN",
                                  "identification": "DE12345678901234567890"
                              }
                          ]
                      },
                      "payee": {
                          "name": "Jane Doe",
                          "address": {
                              "country": "DE"
                          },
                          "accountIdentifications": [
                              {
                                  "type": "IBAN",
                                  "identification": "DE09876543210987654321"
                              }
                          ]
                      }
                  }
              }
          },
          "berlin-group-eur-single-domestic-payment-selected-sca-method-example-request": {
              "description": "Berlin Group EUR Single Domestic Payment (Selected SCA Method) Example Request",
              "value": {
                  "applicationUserId": "string",
                  "institutionId": "postbank-sandbox",
                  "selectedScaMethod": {
                      "id": "591655"
                  },
                  "paymentRequest": {
                      "type": "DOMESTIC_PAYMENT",
                      "paymentIdempotencyId": "e4f913909a3d11eabb370242ac130002",
                      "reference": "REFERENCE",
                      "amount": {
              "amount": 1.00,
                          "currency": "EUR"
                      },
                      "payer": {
                          "name": "John Doe",
                          "accountIdentifications": [
                              {
                                  "type": "IBAN",
                                  "identification": "DE12345678901234567890"
                              }
                          ]
                      },
                      "payee": {
                          "name": "Jane Doe",
                          "address": {
                              "country": "DE"
                          },
                          "accountIdentifications": [
                              {
                                  "type": "IBAN",
                                  "identification": "DE09876543210987654321"
                              }
                          ]
                      }
                  }
              }
          },
          "obie-example-acc-auth-request": {
              "description": "OBIE Example Request",
              "value": {
                  "applicationUserId": "string",
                  "institutionId": "modelo-sandbox",
                  "callback": "https://display-parameters.com/"
              }
          },
          "eur-single-domestic-payment-auth-example-request": {
              "description": "EUR Single Domestic Example Request",
              "value": {
                  "applicationUserId": "string",
                  "institutionId": "bpm-sandbox",
                  "callback": "https://display-parameters.com/",
                  "paymentRequest": {
                      "paymentIdempotencyId": "234g87t58tgeuo848wudjew489",
                      "payer": {
                          "name": "John Doe",
                          "accountIdentifications": [
                              {
                                  "type": "IBAN",
                                  "identification": "DE12345678901234567890"
                              }
                          ]
                      },
                      "amount": {
              "amount": 1.00,
                          "currency": "EUR"
                      },
                      "reference": "Bill Payment",
                      "type": "DOMESTIC_PAYMENT",
                      "payee": {
                          "name": "Jane Doe",
                          "address": {
                              "country": "BE"
                          },
                          "accountIdentifications": [
                              {
                                  "type": "IBAN",
                                  "identification": "BE12345678901234"
                              }
                          ]
                      }
                  }
              }
          },
          "gbp-single-domestic-payment-auth-example-request": {
              "description": "GBP Single Domestic Example Request",
              "value": {
                  "applicationUserId": "string",
                  "institutionId": "modelo-sandbox",
                  "callback": "https://display-parameters.com/",
                  "paymentRequest": {
                      "paymentIdempotencyId": "4289457hd38djoa783jw9qag3",
                      "amount": {
              "amount": 1.00,
                          "currency": "GBP"
                      },
                      "reference": "Bill Payment",
                      "contextType": "BILL_IN_ARREARS",
            "purposeCode" : "COMT",
                      "type": "DOMESTIC_PAYMENT",
                      "payee": {
                          "name": "Jane Doe",
                          "address": {
                              "country": "GB"
                          },
                          "accountIdentifications": [
                              {
                                  "type": "SORT_CODE",
                                  "identification": "123456"
                              },
                              {
                                  "type": "ACCOUNT_NUMBER",
                                  "identification": "12345678"
                              }
                          ],
                          "accountType": "BUSINESS_SAVING"
                      }
                  }
              }
          },
          "eur-domestic-single-payment-example-request": {
              "description": "EUR Domestic Single Payment Example Request",
              "value": {
                  "paymentIdempotencyId": "234g87t58tgeuo848wudjew489",
                  "payer": {
                      "name": "John Doe",
                      "accountIdentifications": [
                          {
                              "type": "IBAN",
                              "identification": "DE12345678901234567890"
                          }
                      ]
                  },
                  "amount": {
            "amount": 1.00,
                      "currency": "EUR"
                  },
                  "reference": "Bill Payment",
                  "type": "DOMESTIC_PAYMENT",
                  "payee": {
                      "name": "Jane Doe",
                      "address": {
                          "country": "BE"
                      },
                      "accountIdentifications": [
                          {
                              "type": "IBAN",
                              "identification": "BE12345678901234"
                          }
                      ]
                  }
              }
          },
          "gbp-domestic-single-payment-example-request": {
              "description": "GBP Domestic Single Payment Example Request",
              "value": {
                  "paymentIdempotencyId": "4289457hd38djoa783jw9qag3",
                  "amount": {
            "amount": 1.00,
                      "currency": "GBP"
                  },
                  "reference": "Bill Payment",
                  "contextType": "BILL_IN_ARREARS",
          "purposeCode" : "COMT",
                  "type": "DOMESTIC_PAYMENT",
                  "payee": {
                      "name": "Jane Doe",
                      "address": {
                          "country": "GB"
                      },
                      "accountIdentifications": [
                          {
                              "type": "SORT_CODE",
                              "identification": "123456"
                          },
                          {
                              "type": "ACCOUNT_NUMBER",
                              "identification": "12345678"
                          }
                      ],
                      "accountType": "BUSINESS_SAVING"
                  }
              }
          },
          "uk-bulk-payment-example-request": {
            "description": "UK Bulk Payment Example Request",
            "value": {
              "idempotencyId": "1cc3e60d-5500-42be-aaeb-3c5e2f5ed048",
              "payments": [
                {
                  "type": "DOMESTIC_PAYMENT",
                  "paymentIdempotencyId": "d78fy48uh8f9odhde68dfi38di9",
                  "reference": "payment1",
                  "contextType": "BILL_IN_ARREARS",
                  "purposeCode": "COMT",
                  "amount": {
                    "amount": 2.00,
                    "currency": "GBP"
                  },
                  "payee": {
                    "name": "Jane Doe",
                    "accountIdentifications": [
                      {
                        "type": "ACCOUNT_NUMBER",
                        "identification": "12345678"
                      },
                      {
                        "type": "SORT_CODE",
                        "identification": "123456"
                      }
                    ],
                    "accountType": "BUSINESS_SAVING"
                  }
                },
                {
                  "type": "DOMESTIC_PAYMENT",
                  "paymentIdempotencyId": "4279gdy8t63dg73gd8gx87738dg",
                  "reference": "payment2",
                  "amount": {
                    "amount": 5.00,
                    "currency": "GBP"
                  },
                  "payee": {
                    "name": "John Doe",
                    "accountIdentifications": [
                      {
                        "type": "ACCOUNT_NUMBER",
                        "identification": "87654321"
                      },
                      {
                        "type": "SORT_CODE",
                        "identification": "654321"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "uk-bulk-payment-auth-example-request": {
              "description": "UK Bulk Payment Example Request",
              "value": {
                  "applicationUserId": "string",
                  "institutionId": "modelo-sandbox",
                  "callback": "https://display-parameters.com/",
                  "paymentRequest": {
                      "payments": [
                          {
                              "type": "DOMESTIC_PAYMENT",
                              "paymentIdempotencyId": "d78fy48uh8f9odhde68dfi38di9",
                              "reference": "payment1",
                              "contextType": "BILL_IN_ARREARS",
                "purposeCode" : "COMT",
                              "amount": {
                  "amount": 2.00,
                                  "currency": "GBP"
                              },
                              "payee": {
                                  "name": "Jane Doe",
                                  "accountIdentifications": [
                                      {
                                          "type": "ACCOUNT_NUMBER",
                                          "identification": "12345678"
                                      },
                                      {
                                          "type": "SORT_CODE",
                                          "identification": "123456"
                                      }
                                  ],
                                  "accountType": "BUSINESS_SAVING"
                              }
                          },
                          {
                              "type": "DOMESTIC_PAYMENT",
                              "paymentIdempotencyId": "4279gdy8t63dg73gd8gx87738dg",
                              "reference": "payment2",
                              "contextType": "BILL_IN_ARREARS",
                "purposeCode" : "COMT",
                              "amount": {
                  "amount": 5.00,
                                  "currency": "GBP"
                              },
                              "payee": {
                                  "name": "John Doe",
                                  "accountIdentifications": [
                                      {
                                          "type": "ACCOUNT_NUMBER",
                                          "identification": "87654321"
                                      },
                                      {
                                          "type": "SORT_CODE",
                                          "identification": "654321"
                                      }
                                  ],
                                  "accountType": "BUSINESS_SAVING"
                              }
                          }
                      ]
                  }
              }
          },
          "cbi-globe-pis-pre-auth-example-request": {
              "description": "CBI Globe (PIS) example request",
              "value": {
                  "applicationUserId": "string",
                  "institutionId": "n26",
                  "callback": "https://display-parameters.com/",
                  "scope": "PIS",
                  "reference": "Bill Payment",
                  "amount": {
            "amount": 1.00,
                      "currency": "EUR"
                  },
                  "payee": {
                      "name": "Jane Doe",
                      "country": "BE",
                      "accountIdentifications": [
                          {
                              "type": "IBAN",
                              "identification": "BE12345678901234"
                          }
                      ]
                  },
                  "payer": {
                      "accountIdentifications": [
                          {
                              "type": "IBAN",
                              "identification": "DE12345678901234567890"
                          }
                      ]
                  }
              }
          },
          "berlin-group-ais-pre-auth-example-request": {
              "description": "Berlin Group (AIS) Example Request",
              "value": {
                  "applicationUserId": "string",
                  "institutionId": "n26",
                  "callback": "https://display-parameters.com/",
                  "scope": "AIS"
              }
          },
          "berlin-group-pis-pre-auth-example-request": {
              "description": "Berlin Group (PIS) Example Request",
              "value": {
                  "applicationUserId": "string",
                  "institutionId": "n26",
                  "callback": "https://display-parameters.com/",
                  "scope": "PIS"
              }
          },
          "berlin-group-eur-single-domestic-embedded-payment-example-response": {
              "description": "Berlin Group EUR Single Domestic Payment Example Response",
              "value": {
                  "meta": {
                      "tracingId": "bcebc29b55434cc8b2aae80cb782edff"
                  },
                  "data": {
                      "id": "7c3f0355-f59b-4cc6-b13f-e1b5349b5caf",
                      "userUuid": "95f71ebc-c8ae-4e25-aded-86e9bbd62966",
                      "applicationUserId": "string",
                      "institutionId": "postbank-sandbox",
                      "state": "551440fc13794010855ad81c8463c926",
                      "status": "AWAITING_SCA_METHOD",
                      "createdAt": "2021-01-26T23:31:45.443Z",
                      "featureScope": [
                          "CREATE_DOMESTIC_SINGLE_PAYMENT",
                          "EXISTING_PAYMENTS_DETAILS",
                          "EXISTING_PAYMENT_INITIATION_DETAILS"
                      ],
                      "scaMethods": [
                          {
                              "id": "258211#OPTICAL",
                              "type": "CHIP_OTP",
                              "description": "Testkarte Hr. Haubach_1, optisch"
                          },
                          {
                              "id": "258211#MANUEL",
                              "type": "CHIP_OTP",
                              "description": "Testkarte Hr. Haubach_1, manuell"
                          },
                          {
                              "id": "591655",
                              "type": "SMS_OTP",
                              "description": "RolandmTAN"
                          },
                          {
                              "id": "591656",
                              "type": "PUSH_OTP",
                              "description": "RSRolandIP2"
                          }
                      ]
                  }
              }
          },
          "berlin-group-sca-code-example-response": {
              "description": "Berlin Group (SCA Code) Example Response",
              "value": {
                  "meta": {
                      "tracingId": "0ad7c46c4e4445bab3a0d4ccae25556b"
                  },
                  "data": {
                      "id": "66c8c0f2-1678-4404-a68f-2236a1afcdad",
                      "userUuid": "6b082877-b137-4743-bba3-07b6a8148b42",
                      "applicationUserId": "string",
                      "institutionId": "fiducia-sandbox",
                      "status": "AUTHORIZED",
                      "createdAt": "2021-06-09T11:49:18.815Z",
                      "featureScope": [
                          "ACCOUNT_TRANSACTIONS",
                          "ACCOUNTS",
                          "ACCOUNT",
                          "ACCOUNT_BALANCES"
                      ],
                      "state": "3fb4024282d0432cb710094c4c723ae5",
                      "authorizedAt": "2021-06-09T11:51:14.140Z",
                      "institutionConsentId": "1448194319060120228PSDLT-BL-LB002045CO9545RW"
                  }
              }
          },
          "berlin-group-selected-sca-method-example-response": {
              "description": "Berlin Group (Selected SCA Method) Example Response",
              "value": {
                  "meta": {
                      "tracingId": "eaa703f3869b46b18732fa0de60f6073"
                  },
                  "data": {
                      "id": "149da283-2958-4128-9d72-e3a02e8bb83d",
                      "userUuid": "6b082877-b137-4743-bba3-07b6a8148b42",
                      "applicationUserId": "string",
                      "institutionId": "fiducia-sandbox",
                      "status": "AWAITING_SCA_CODE",
                      "createdAt": "2021-06-09T11:47:24.513Z",
                      "expiresAt": "2021-09-07T00:00:00Z",
                      "timeToExpire": "P89DT12H6M39.998S",
                      "featureScope": [
                          "ACCOUNT_TRANSACTIONS",
                          "ACCOUNTS",
                          "ACCOUNT",
                          "ACCOUNT_BALANCES"
                      ],
                      "state": "c99f35c118194737b83487a0e6a48ed9",
                      "institutionConsentId": "4514274319060120226PSDLT-BL-LB002045CO9545RW",
                      "selectedScaMethod": {
                          "id": "942",
                          "type": "SMS_OTP",
                          "description": "mobile TAN"
                      }
                  }
              }
          },
          "berlin-group-multiple-sca-methods-example-response": {
              "description": "Berlin Group (Multiple SCA Methods) Example Response",
              "value": {
                  "meta": {
                      "tracingId": "a9d8d8c5e6a84b00b8510d90c28cbbc6"
                  },
                  "data": {
                      "id": "149da283-2958-4128-9d72-e3a02e8bb83d",
                      "userUuid": "6b082877-b137-4743-bba3-07b6a8148b42",
                      "applicationUserId": "string",
                      "institutionId": "fiducia-sandbox",
                      "status": "AWAITING_SCA_METHOD",
                      "createdAt": "2021-06-09T11:47:24.513Z",
                      "expiresAt": "2021-09-07T00:00:00Z",
                      "timeToExpire": "P89DT12H12M35.472S",
                      "featureScope": [
                          "ACCOUNT_TRANSACTIONS",
                          "ACCOUNTS",
                          "ACCOUNT",
                          "ACCOUNT_BALANCES"
                      ],
                      "state": "c99f35c118194737b83487a0e6a48ed9",
                      "institutionConsentId": "4514274319060120226PSDLT-BL-LB002045CO9545RW",
                      "scaMethods": [
                          {
                              "id": "962",
                              "type": "CHIP_OTP",
                              "description": "SmartTAN plus HHD 1.4"
                          },
                          {
                              "id": "952",
                              "type": "CHIP_OTP",
                              "description": "SmartTAN optic"
                          },
                          {
                              "id": "972",
                              "type": "CHIP_OTP",
                              "description": "SmartTAN optic/USB HHD 1.4"
                          },
                          {
                              "id": "982",
                              "type": "PHOTO_OTP",
                              "description": "Smart-TAN photo"
                          },
                          {
                              "id": "932",
                              "type": "CHIP_OTP",
                              "description": "SmartTAN plus"
                          },
                          {
                              "id": "944",
                              "type": "PUSH_OTP",
                              "description": "SecureSIGN"
                          },
                          {
                              "id": "942",
                              "type": "SMS_OTP",
                              "description": "mobile TAN"
                          }
                      ]
                  }
              }
          },
          "berlin-group-single-sca-method-example-response": {
              "description": "Berlin Group (Single SCA Method) Example Response",
              "value": {
                  "meta": {
                      "tracingId": "1565f7e13a0b4bf6b312cf8cc5747c7c"
                  },
                  "data": {
                      "id": "66c8c0f2-1678-4404-a68f-2236a1afcdad",
                      "userUuid": "6b082877-b137-4743-bba3-07b6a8148b42",
                      "applicationUserId": "string",
                      "institutionId": "fiducia-sandbox",
                      "status": "AWAITING_SCA_CODE",
                      "createdAt": "2021-06-09T11:49:18.815Z",
                      "expiresAt": "2021-09-07T00:00:00Z",
                      "timeToExpire": "P89DT12H10M41.167S",
                      "featureScope": [
                          "ACCOUNT_TRANSACTIONS",
                          "ACCOUNTS",
                          "ACCOUNT",
                          "ACCOUNT_BALANCES"
                      ],
                      "state": "3fb4024282d0432cb710094c4c723ae5",
                      "institutionConsentId": "1448194319060120228PSDLT-BL-LB002045CO9545RW",
                      "scaMethods": [
                          {
                              "id": "944",
                              "type": "PUSH_OTP",
                              "description": "SecureSIGN"
                          }
                      ],
                      "selectedScaMethod": {
                          "id": "944",
                          "type": "PUSH_OTP",
                          "description": "SecureSIGN"
                      }
                  }
              }
          },
          "berlin-group-eur-single-domestic-payment-example-response": {
              "description": "Berlin Group EUR Single Domestic Payment Example Response",
              "value": {
                  "meta": {
                      "tracingId": "54ec0645a5b444c4a70c61357e9ad887"
                  },
                  "data": {
                      "id": "53ff00d0-91dd-417d-880b-cdd7c50090ed",
                      "userUuid": "e2578545-27a4-4edf-983f-5d33c2d7b559",
                      "applicationUserId": "string",
                      "institutionId": "n26",
                      "state": "4399535ee4de46238fce108a95669848",
                      "status": "AWAITING_DECOUPLED_AUTHORIZATION",
                      "createdAt": "2021-06-10T09:54:46.669Z",
                      "featureScope": [
                          "INITIATE_PRE_AUTHORISATION",
                          "CREATE_DOMESTIC_SINGLE_PAYMENT",
                          "EXISTING_PAYMENTS_DETAILS"
                      ],
                      "authorizedAt": "2021-06-10T09:55:22.359Z",
                      "institutionConsentId": "a9582f8e-08be-4cca-9f01-1ad3be96532d"
                  }
              }
          },
          "berlin-group-eur-single-domestic-payment-sca-code-example-response": {
              "description": "Berlin Group EUR Single Domestic Payment (SCA Code) Example Response",
              "value": {
                  "meta": {
                      "tracingId": "94563449b4634d13b89b8f1c78c21882"
                  },
                  "data": {
                      "id": "1767d386-c20a-4136-a311-0a455dd41a78",
                      "userUuid": "95f71ebc-c8ae-4e25-aded-86e9bbd62966",
                      "applicationUserId": "string",
                      "institutionId": "postbank-sandbox",
                      "state": "048a1187a9324652bedb6a653211a8a3",
                      "status": "AUTHORIZED",
                      "createdAt": "2021-01-25T18:32:23.933Z",
                      "featureScope": [
                          "CREATE_DOMESTIC_SINGLE_PAYMENT",
                          "EXISTING_PAYMENT_INITIATION_DETAILS",
                          "EXISTING_PAYMENTS_DETAILS"
                      ],
                      "authorizedAt": "2021-01-25T18:33:18.248Z"
                  }
              }
          },
          "berlin-group-eur-single-domestic-payment-selected-sca-method-example-response": {
              "description": "Berlin Group EUR Single Domestic Payment (Selected SCA Method) Example Response",
              "value": {
                  "meta": {
                      "tracingId": "f69f66322b4b482c93099a206d9f003e"
                  },
                  "data": {
                      "id": "1767d386-c20a-4136-a311-0a455dd41a78",
                      "userUuid": "95f71ebc-c8ae-4e25-aded-86e9bbd62966",
                      "applicationUserId": "string",
                      "institutionId": "postbank-sandbox",
                      "state": "048a1187a9324652bedb6a653211a8a3",
                      "status": "AWAITING_SCA_CODE",
                      "createdAt": "2021-01-25T18:32:23.933Z",
                      "featureScope": [
                          "CREATE_DOMESTIC_SINGLE_PAYMENT",
                          "EXISTING_PAYMENT_INITIATION_DETAILS",
                          "EXISTING_PAYMENTS_DETAILS"
                      ],
                      "selectedScaMethod": {
                          "id": "591655",
                          "information": "1. Stecken Sie Ihre Chipkarte in den TAN-Generator und drÃ¼cken \"F\".<br>2. Halten Sie den TAN-Generator an die animierte Grafik. Dabei mÃ¼ssen die Markierungen<br>   (Dreiecke) der Grafik mit denen auf Ihrem TAN-Generator Ã¼bereinstimmen.<br>3. PrÃ¼fen Sie die Anzeige auf dem Leserdisplay und drÃ¼cken \"OK\".<br>4. PrÃ¼fen Sie die Hinweise<br>   \"EmpfÃ¤nger-IBAN\" und \"Betrag\"<br>   auf dem Leserdisplay und bestÃ¤tigen Sie diese dann jeweils mit \"OK\" auf Ihrem TAN-Generator.<br><br>5. Bitte beachten: ÃberprÃ¼fen Sie die Anzeige des TAN-Generators immer anhand der Original-Transaktions-Daten - z.B. einer Rechnung.<br>Bitte geben Sie die auf Ihrem TAN-Generator angezeigte TAN hier ein und bestÃ¤tigen Sie diese.",
                          "data": [
                              "0488701109982928CY4390400001000010000520,00"
                          ]
                      }
                  }
              }
          },
          "berlin-group-eur-embedded-bulk-payment-example-response": {
              "description": "Berlin Group EUR Embedded Bulk Payment Example Response",
              "value": {
                  "meta": {
                      "tracingId": "4ab90c8cc13a4b74ba855a48100d6084"
                  },
                  "data": {
                      "id": "6117b6dd-5a43-4f26-8e36-b91b9bf3c434",
                      "userUuid": "3ddf5dd0-aa48-4d0f-baa7-fa057e9e911d",
                      "applicationUserId": "string",
                      "institutionId": "fiducia-sandbox",
                      "status": "AWAITING_SCA_CODE",
                      "createdAt": "2021-08-02T14:58:45.446Z",
                      "featureScope": [
                          "EXISTING_PAYMENT_INITIATION_DETAILS",
                          "CREATE_BULK_PAYMENT",
                          "EXISTING_PAYMENTS_DETAILS"
                      ],
                      "state": "85853421299c44e0829debefffd8622e",
                      "institutionConsentId": "0515485612080120206PSDLT-BL-LB002045PA9545RW",
                      "scaMethods": [
                          {
                              "id": "932",
                              "type": "CHIP_OTP",
                              "description": "SmartTAN plus"
                          }
                      ],
                      "selectedScaMethod": {
                          "id": "932",
                          "type": "CHIP_OTP",
                          "description": "SmartTAN plus"
                      }
                  }
              }
          },
          "berlin-group-eur-embedded-bulk-payment-sca-code-example-response": {
              "description": "Berlin Group EUR Embedded Bulk Payment (SCA Code) Example Response",
              "value": {
                  "meta": {
                      "tracingId": "cfa351c5de6f4398bb9deea04041acc5"
                  },
                  "data": {
                      "id": "6117b6dd-5a43-4f26-8e36-b91b9bf3c434",
                      "userUuid": "3ddf5dd0-aa48-4d0f-baa7-fa057e9e911d",
                      "applicationUserId": "string",
                      "institutionId": "fiducia-sandbox",
                      "status": "AUTHORIZED",
                      "createdAt": "2021-08-02T14:58:45.446Z",
                      "featureScope": [
                          "EXISTING_PAYMENT_INITIATION_DETAILS",
                          "CREATE_BULK_PAYMENT",
                          "EXISTING_PAYMENTS_DETAILS"
                      ],
                      "state": "85853421299c44e0829debefffd8622e",
                      "authorizedAt": "2021-08-02T14:59:29.174Z",
                      "institutionConsentId": "0515485612080120206PSDLT-BL-LB002045PA9545RW"
                  }
              }
          },
          "berlin-group-pis-pre-auth-example-response": {
              "description": "Berlin Group Example (PIS) Response",
              "value": {
                  "meta": {
                      "tracingId": "ba79c56773de42129dbf8164b202276c"
                  },
                  "data": {
                      "id": "53ff00d0-91dd-417d-880b-cdd7c50090ed",
                      "userUuid": "e2578545-27a4-4edf-983f-5d33c2d7b559",
                      "applicationUserId": "string",
                      "institutionId": "n26",
                      "state": "4399535ee4de46238fce108a95669848",
                      "status": "AWAITING_PRE_AUTHORIZATION",
                      "createdAt": "2021-06-10T09:54:46.669Z",
                      "featureScope": [
                          "INITIATE_ONETIME_PRE_AUTHORISATION_PAYMENTS"
                      ],
                      "authorisationUrl": "https://app.n26.com/open-banking?requestId=2e2b2efd-82bb-4a2b-8f67-ced1a93511b8&state=4399535ee4de46238fce108a95669848&authType=XS2A&scope=DEDICATED_PISP",
                      "qrCodeUrl": "https://images.yapily.com/image/7384ad3b-5eb1-4304-9cfa-7aa6fcc5e0c7/1623318888?size=0"
                  }
              }
          },
          "berlin-group-example-ais-pre-auth-response": {
              "description": "Berlin Group Example (AIS) Response",
              "value": {
                  "meta": {
                      "tracingId": "8acb66e6a9e142e79acc3ccf6cc03e04"
                  },
                  "data": {
                      "id": "73064bb9-c84d-4242-897c-4150aacfa658",
                      "userUuid": "e2578545-27a4-4edf-983f-5d33c2d7b559",
                      "applicationUserId": "string",
                      "institutionId": "n26",
                      "state": "1575102ed5664761bce34927f0caa50f",
                      "status": "AWAITING_PRE_AUTHORIZATION",
                      "createdAt": "2021-05-11T13:03:43.619Z",
                      "featureScope": [
                          "INITIATE_PRE_AUTHORISATION"
                      ],
                      "authorisationUrl": "https://app.n26.com/open-banking?requestId=9ae856ce-6b10-4956-8da8-c66ee0c9d86f&state=1575102ed5664761bce34927f0caa50f&authType=XS2A&scope=DEDICATED_AISP",
                      "qrCodeUrl": "https://images.yapily.com/image/f86d382b-c00a-4650-8d0d-9ee6ba1093cd/1620738225?size=0"
                  }
              }
          },
          "example-acc-balance-response": {
              "description": "Example response",
              "value": {
                  "meta": {
                      "tracingId": "82e86ae9547a4f04b3773c1207e4b84d"
                  },
                  "data": {
                      "mainBalanceAmount": {
              "amount": -3.07920860411E9,
                          "currency": "EUR"
                      },
                      "balances": [
                          {
                              "type": "INTERIM_AVAILABLE",
                              "balanceAmount": {
                  "amount": -3.07920860411E9,
                                  "currency": "EUR"
                              }
                          },
                          {
                              "type": "AUTHORISED",
                              "balanceAmount": {
                  "amount": -3.07920860411E9,
                                  "currency": "EUR"
                              }
                          }
                      ]
                  }
              }
          },
          "obie-example-acc-auth-response-post": {
              "description": "OBIE Example Response",
              "value": {
                  "meta": {
                      "tracingId": "3b262569303f47f188d16b43acd552c0"
                  },
                  "data": {
                      "id": "2d5c3632-1729-4a5e-bc69-c7fa1cbba815",
                      "userUuid": "3ddf5dd0-aa48-4d0f-baa7-fa057e9e911d",
                      "applicationUserId": "string",
                      "institutionId": "modelo-sandbox",
                      "status": "AWAITING_AUTHORIZATION",
                      "createdAt": "2021-06-09T08:03:20.510Z",
                      "featureScope": [
                          "ACCOUNT_STATEMENT_FILE",
                          "ACCOUNTS",
                          "ACCOUNT_STATEMENTS",
                          "ACCOUNT_TRANSACTIONS",
                          "ACCOUNT",
                          "ACCOUNT_BALANCES",
                          "ACCOUNT_STATEMENT",
                          "ACCOUNT_SCHEDULED_PAYMENTS",
                          "ACCOUNT_TRANSACTIONS_WITH_MERCHANT",
                          "ACCOUNT_PERIODIC_PAYMENTS",
                          "ACCOUNT_BENEFICIARIES",
                          "IDENTITY",
                          "ACCOUNT_DIRECT_DEBITS"
                      ],
                      "state": "7948ba4d6a064001b06ef28f8c06ca4a",
                      "institutionConsentId": "aac-0a743a0f-0b7d-4e7b-87eb-0bc65e1d2f97",
                      "authorisationUrl": "https://ob19-auth1-ui.o3bank.co.uk/auth?client_id=e7f6b95b-5f35-419b-b301-8b08bcd946de&response_type=code+id_token&state=7948ba4d6a064001b06ef28f8c06ca4a&nonce=7948ba4d6a064001b06ef28f8c06ca4a&scope=openid+accounts&redirect_uri=https%3A%2F%2Fauth.yapily.com%2F&request=eyJraWQiOiJnRTRvU3VaZDl4TVpUNXZDdTNWYy1mdktNak0iLCJhbGciOiJQUzI1NiJ9.eyJhdWQiOiJodHRwczovL29iMTktYXV0aDEtdWkubzNiYW5rLmNvLnVrIiwic2NvcGUiOiJvcGVuaWQgYWNjb3VudHMiLCJpc3MiOiJlN2Y2Yjk1Yi01ZjM1LTQxOWItYjMwMS04YjA4YmNkOTQ2ZGUiLCJjbGllbnRfaWQiOiJlN2Y2Yjk1Yi01ZjM1LTQxOWItYjMwMS04YjA4YmNkOTQ2ZGUiLCJyZXNwb25zZV90eXBlIjoiY29kZSBpZF90b2tlbiIsInJlZGlyZWN0X3VyaSI6Imh0dHBzOi8vYXV0aC55YXBpbHkuY29tLyIsInN0YXRlIjoiNzk0OGJhNGQ2YTA2NDAwMWIwNmVmMjhmOGMwNmNhNGEiLCJjbGFpbXMiOnsiaWRfdG9rZW4iOnsiYWNyIjp7InZhbHVlIjoidXJuOm9wZW5iYW5raW5nOnBzZDI6c2NhIiwiZXNzZW50aWFsIjp0cnVlfSwib3BlbmJhbmtpbmdfaW50ZW50X2lkIjp7InZhbHVlIjoiYWFjLTBhNzQzYTBmLTBiN2QtNGU3Yi04N2ViLTBiYzY1ZTFkMmY5NyIsImVzc2VudGlhbCI6dHJ1ZX19LCJ1c2VyaW5mbyI6eyJvcGVuYmFua2luZ19pbnRlbnRfaWQiOnsidmFsdWUiOiJhYWMtMGE3NDNhMGYtMGI3ZC00ZTdiLTg3ZWItMGJjNjVlMWQyZjk3IiwiZXNzZW50aWFsIjp0cnVlfX19LCJub25jZSI6Ijc5NDhiYTRkNmEwNjQwMDFiMDZlZjI4ZjhjMDZjYTRhIiwianRpIjoiNTIxNGFjNTQtNTEzYi00N2Y1LTgyYjUtZWExY2NhYzg0YzNiIiwiaWF0IjoxNjIzMjI1ODAxLCJleHAiOjE2MjMyMjc2MDF9.wmNfzJD1ekN_f028qWOyVvICkFm2uJ5Umok4hmxk4HZnDY2AOWDg4VX_MJjPHDydhfW8ZciBfCbEgmnButmASBbil-tHzwDIholS4RmnOZ4DXD-AttYx_VA2_X36J53kmlCHstPZpoawSIzdcnyW0JIhmVEvs5ZsaJvsDKhWk0hgYNS2GI0PORcn85W98EaE8APVrsz-tR-EfC9NmSZu7tH1zLyyD43AuD2BqdlMiYVTlzZsJ3FGPZ-ddT0rRloJvxPV6GLibjNAEowpSLjmDLv2v7gWszmYgcrzp5UM2jllfVL2KPA6Be5Eg6LVkL60Q3FKQyOMc8SCAWhALq_7Ew",
                      "qrCodeUrl": "https://images.yapily.com/image/3b634d3c-a2ce-49b8-9014-330661800604/1623225801?size=0"
                  }
              }
          },
          "obie-example-acc-auth-response-put": {
              "description": "OBIE Example Response",
              "value": {
                  "meta": {
                      "tracingId": "ee8e5bcfedf348b18ae45a34135790cc"
                  },
                  "data": {
                      "id": "68e14e00-38b0-467d-a999-f70340e467b3",
                      "userUuid": "e2578545-27a4-4edf-983f-5d33c2d7b559",
                      "applicationUserId": "string",
                      "institutionId": "n26",
                      "institutionConsentId": "87ec9ded-d5ea-4fb6-80c5-ad4c88246c9f",
                      "state": "4f4f9766f7264afc96a5269d6e65e066",
                      "status": "AWAITING_DECOUPLED_AUTHORIZATION",
                      "authorizedAt": "2021-05-13T09:00:06.867Z",
                      "createdAt": "2021-05-13T08:59:23.864Z",
                      "featureScope": [
                          "ACCOUNT_TRANSACTIONS",
                          "INITIATE_PRE_AUTHORISATION",
                          "ACCOUNTS",
                          "ACCOUNT_TRANSACTIONS_WITH_MERCHANT"
                      ]
                  }
              }
          },
          "obie-example-acc-auth-response-patch": {
              "description": "OBIE Example Response",
              "value": {
                  "meta": {
                      "tracingId": "8719f9c97272463d9c2d1ee6108c8e24"
                  },
                  "data": {
                      "id": "2812b61c-9d0b-4730-8c94-22c18918e66a",
                      "userUuid": "3ddf5dd0-aa48-4d0f-baa7-fa057e9e911d",
                      "applicationUserId": "string",
                      "institutionId": "modelo-sandbox",
                      "status": "AWAITING_RE_AUTHORIZATION",
                      "createdAt": "2021-06-09T08:22:50.135Z",
                      "featureScope": [
                          "ACCOUNT_STATEMENT_FILE",
                          "ACCOUNT_TRANSACTIONS",
                          "ACCOUNT_STATEMENTS",
                          "ACCOUNTS",
                          "ACCOUNT"
                      ],
                      "state": "0623e536c5044b4aa3f6c66e7537bee0",
                      "authorizedAt": "2021-06-09T08:23:03.944Z",
                      "institutionConsentId": "aac-f7847e99-7c66-4bb8-8641-61a24057f2e8",
                      "authorisationUrl": "https://ob19-auth1-ui.o3bank.co.uk/auth?client_id=e7f6b95b-5f35-419b-b301-8b08bcd946de&response_type=code+id_token&state=0623e536c5044b4aa3f6c66e7537bee0&nonce=0623e536c5044b4aa3f6c66e7537bee0&scope=openid+accounts&redirect_uri=https%3A%2F%2Fauth.yapily.com%2F&request=eyJraWQiOiJnRTRvU3VaZDl4TVpUNXZDdTNWYy1mdktNak0iLCJhbGciOiJQUzI1NiJ9.eyJhdWQiOiJodHRwczovL29iMTktYXV0aDEtdWkubzNiYW5rLmNvLnVrIiwic2NvcGUiOiJvcGVuaWQgYWNjb3VudHMiLCJpc3MiOiJlN2Y2Yjk1Yi01ZjM1LTQxOWItYjMwMS04YjA4YmNkOTQ2ZGUiLCJjbGllbnRfaWQiOiJlN2Y2Yjk1Yi01ZjM1LTQxOWItYjMwMS04YjA4YmNkOTQ2ZGUiLCJyZXNwb25zZV90eXBlIjoiY29kZSBpZF90b2tlbiIsInJlZGlyZWN0X3VyaSI6Imh0dHBzOi8vYXV0aC55YXBpbHkuY29tLyIsInN0YXRlIjoiMDYyM2U1MzZjNTA0NGI0YWEzZjZjNjZlNzUzN2JlZTAiLCJjbGFpbXMiOnsiaWRfdG9rZW4iOnsiYWNyIjp7InZhbHVlIjoidXJuOm9wZW5iYW5raW5nOnBzZDI6c2NhIiwiZXNzZW50aWFsIjp0cnVlfSwib3BlbmJhbmtpbmdfaW50ZW50X2lkIjp7InZhbHVlIjoiYWFjLWY3ODQ3ZTk5LTdjNjYtNGJiOC04NjQxLTYxYTI0MDU3ZjJlOCIsImVzc2VudGlhbCI6dHJ1ZX19LCJ1c2VyaW5mbyI6eyJvcGVuYmFua2luZ19pbnRlbnRfaWQiOnsidmFsdWUiOiJhYWMtZjc4NDdlOTktN2M2Ni00YmI4LTg2NDEtNjFhMjQwNTdmMmU4IiwiZXNzZW50aWFsIjp0cnVlfX19LCJub25jZSI6IjA2MjNlNTM2YzUwNDRiNGFhM2Y2YzY2ZTc1MzdiZWUwIiwianRpIjoiMjEyM2E1OGMtMTExYi00OGY2LTg2ODAtZTViYTNiMzI3MjM5IiwiaWF0IjoxNjIzMjI3MDAxLCJleHAiOjE2MjMyMjg4MDF9.JG5lc5TWjCucWZPfcyd34trk0QcGNzhYXfhHTlVrcfu1zjrAtSUI8i0o4yKqS19cOGKHq1HtuQac2hhO8gCr_vd5n7eIuIrWfjEM1MuIwsJ85jOpMBkEiSOurLRIgW77VmqHpVUVj5-0-1Tk-N-vaC_4nIdtSi576sOb4rjLQvs2EX_sFODGjyMxHXiZlnr2p71gA3nRy8M2Vv_At4-NPW8OLULS8zXclWoK797HFAGtsNLCy8tz0YCsnEaFhcLhZSliy3a7DRfxvBmIzhY23M4uQ6bpM1zCyqTPsOhqR-qdgnZorBrax_2CQ37yIeV4becUJWvZSdnjYX7gDtNltA",
                      "qrCodeUrl": "https://images.yapily.com/image/4ef6e16c-dbe2-4d90-9e1b-868d946082ef/1623227001?size=0"
                  }
              }
          },
          "obie-example-accounts-response": {
              "description": "OBIE Example Response",
              "value": {
                  "meta": {
                      "tracingId": "1139346006be4345a94fd8b3728844e3",
                      "count": 1
                  },
                  "data": [
                      {
                          "id": "700004000000000000000002",
                          "type": "Personal - Current",
                          "balance": -12.57,
                          "currency": "GBP",
                          "usageType": "PERSONAL",
                          "accountType": "CURRENT",
                          "nickname": "xxxx0006",
                          "accountNames": [
                              {
                                  "name": "Mr. Roberto Rastapopoulos & Ivan Sakharine"
                              }
                          ],
                          "accountIdentifications": [
                              {
                                  "type": "SORT_CODE",
                                  "identification": "700001"
                              },
                              {
                                  "type": "ACCOUNT_NUMBER",
                                  "identification": "70000002"
                              }
                          ],
                          "accountBalances": [
                              {
                                  "type": "EXPECTED",
                                  "dateTime": "2021-06-09T08:51:02.463Z",
                                  "balanceAmount": {
                                      "amount": -12.57,
                                      "currency": "GBP"
                                  },
                                  "creditLineIncluded": false,
                                  "creditLines": []
                              }
                          ]
                      }
                  ]
              }
          },
          "obie-example-account-response": {
              "description": "OBIE Example Response",
              "value": {
                  "meta": {
                      "tracingId": "01191f59dcd54be2854a7e686702dbd6"
                  },
                  "data": {
                      "id": "700004000000000000000002",
                      "type": "Personal - Current",
                      "balance": -12.57,
                      "currency": "GBP",
                      "usageType": "PERSONAL",
                      "accountType": "CURRENT",
                      "nickname": "xxxx0006",
                      "accountNames": [
                          {
                              "name": "Mr. Roberto Rastapopoulos & Ivan Sakharine"
                          }
                      ],
                      "accountIdentifications": [
                          {
                              "type": "SORT_CODE",
                              "identification": "700001"
                          },
                          {
                              "type": "ACCOUNT_NUMBER",
                              "identification": "70000002"
                          }
                      ],
                      "accountBalances": [
                          {
                              "type": "EXPECTED",
                              "dateTime": "2021-06-09T08:51:02.463Z",
                              "balanceAmount": {
                                  "amount": -12.57,
                                  "currency": "GBP"
                              },
                              "creditLineIncluded": false,
                              "creditLines": []
                          }
                      ]
                  }
              }
          },
          "obie-example-acc-beneficiaries-response": {
              "description": "OBIE Example Response",
              "value": {
                  "data": [
                      {
                          "id": "112",
                          "trusted": true,
                          "reference": "Rent",
                          "payee": {
                              "name": "John Doe",
                              "accountIdentifications": [
                                  {
                                      "type": "SORT_CODE",
                                      "identification": "123456"
                                  },
                                  {
                                      "type": "ACCOUNT_NUMBER",
                                      "identification": "12345678"
                                  }
                              ]
                          }
                      }
                  ]
              }
          },
          "obie-example-acc-direct-debits-response": {
              "description": "OBIE Example Response",
              "value": {
                  "meta": {
                      "tracingId": "c2dec674a3fb402e8543129565491244",
                      "count": 2,
                      "pagination": {
                          "totalCount": 2,
                          "self": {
                              "limit": 1000
                          }
                      }
                  },
                  "data": [
                      {
                          "id": "700009000000000000000076",
                          "statusDetails": {
                              "status": "INACTIVE"
                          },
                          "payeeDetails": {
                              "name": "EDF ENERGY"
                          },
                          "reference": "671018097704",
                          "previousPaymentAmount": {
                "amount": 145.0,
                              "currency": "GBP"
                          },
                          "previousPaymentDateTime": "2016-10-05T00:00:00Z"
                      },
                      {
                          "id": "700009000000000000000038",
                          "statusDetails": {
                              "status": "ACTIVE"
                          },
                          "payeeDetails": {
                              "name": "SANTANDER MORTGAGE"
                          },
                          "reference": "40118272",
                          "previousPaymentAmount": {
                "amount": 1000.00,
                              "currency": "GBP"
                          },
                          "previousPaymentDateTime": "2017-12-01T00:00:00Z"
                      }
                  ],
                  "links": {
                      "self": "https://api.yapily.com/accounts/700004000000000000000002/direct-debits?limit=1000"
                  }
              }
          },
          "obie-example-acc-periodic-payments-response": {
              "description": "OBIE Example Response",
              "value": {
                  "meta": {
                      "tracingId": "51d039be096f492ca5184d4ea72b4caf",
                      "count": 1,
                      "pagination": {
                          "totalCount": 1,
                          "self": {
                              "limit": 1000
                          }
                      }
                  },
                  "data": [
                      {
                          "id": "95d29cb3-5ef4-4c92-885f-8ba971adc5d1",
                          "statusDetails": {
                              "status": "UNKNOWN"
                          },
                          "payeeDetails": {
                              "name": "xxxxx129",
                              "accountIdentifications": [
                                  {
                                      "type": "IBAN",
                                      "identification": "DE16700222000072880129"
                                  }
                              ]
                          },
                          "reference": "544878_60c0809a",
                          "firstPaymentAmount": {
                "amount": 1259.00,
                              "currency": "GBP"
                          },
                          "firstPaymentDateTime": "2021-07-10T23:00:00Z",
                          "nextPaymentAmount": {
                "amount": 1259.00,
                              "currency": "GBP"
                          },
                          "nextPaymentDateTime": "2021-07-10T23:00:00Z",
                          "finalPaymentAmount": {
                "amount": 1259.00,
                              "currency": "GBP"
                          },
                          "finalPaymentDateTime": "2022-04-11T23:00:00Z",
                          "frequency": {
                              "frequencyType": "MONTHLY",
                              "intervalMonth": 1,
                              "executionDay": 11
                          }
                      }
                  ],
                  "links": {
                      "self": "https://api.yapily.com/accounts/700004000000000000000002/periodic-payments?limit=1000"
                  }
              }
          },
          "obie-example-acc-scheduled-payments-response": {
              "description": "OBIE Example Response",
              "value": {
                  "meta": {
                      "tracingId": "0de4ed83caf542f6bcaa30c62275191c",
                      "count": 1,
                      "pagination": {
                          "totalCount": 1,
                          "self": {
                              "limit": 1000
                          }
                      }
                  },
                  "data": [
                      {
                          "id": "6f62b428-c3a0-42eb-a838-ae41e52916e9",
                          "payeeDetails": {
                              "name": "Mr. Roberto Rastapopoulos & Ivan Sakharine & mits",
                              "accountIdentifications": [
                                  {
                                      "type": "ACCOUNT_NUMBER",
                                      "identification": "70000002"
                                  },
                                  {
                                      "type": "SORT_CODE",
                                      "identification": "700001"
                                  }
                              ]
                          },
                          "reference": "f62ee3bad94d432d9786ba038131b5d7",
                          "amountDetails": {
                "amount": 1.00,
                              "currency": "GBP"
                          },
                          "scheduledPaymentType": "EXECUTION",
                          "scheduledPaymentDateTime": "2021-12-01T00:00:00+01:00"
                      }
                  ],
                  "links": {
                      "self": "https://api.yapily.com/accounts/700004000000000000000002/scheduled-payments?limit=1000"
                  }
              }
          },
          "account-statements-example-response": {
              "description": "Example Response",
              "value": {
                  "meta": {
                      "tracingId": "fd5c215acd034401a8eaa8aeec1eafc7",
                      "count": 1,
                      "pagination": {
                          "totalCount": 1,
                          "self": {
                              "limit": 1000,
                              "sort": "-date",
                              "offset": 0
                          }
                      }
                  },
                  "data": [
                      {
                          "id": "700014000000000000000002",
                          "startDateTime": "2017-08-01T00:00:00Z",
                          "endDateTime": "2017-08-31T23:59:59Z",
                          "creationDateTime": "2017-09-01T00:00:00Z"
                      }
                  ],
                  "links": {
                      "self": "https://api.yapily.com/accounts/700004000000000000000002/statements?from&before&limit=1000&sort=-date&offset=0"
                  }
              }
          },
          "account-transactions-example-response": {
              "description": "Example Response",
              "value": {
                  "meta": {
                      "tracingId": "488ce8243ee74a378be722ffffec8f7f",
                      "count": 1,
                      "pagination": {
                          "totalCount": 1,
                          "self": {
                              "limit": 1000,
                              "sort": "-date",
                              "offset": 0
                          }
                      }
                  },
                  "data": [
                      {
                          "id": "49d6e5c6-0130-46e3-884b-1b185432d9e0",
                          "date": "2021-05-06T17:44:34.589Z",
                          "bookingDateTime": "2021-05-06T17:44:34.589Z",
                          "valueDateTime": "2021-05-06T17:44:34.589Z",
                          "status": "BOOKED",
                          "amount": -100.23,
                          "currency": "GBP",
                          "transactionAmount": {
                              "amount": -100.23,
                              "currency": "GBP"
                          },
                          "reference": "0",
                          "description": "Debit for Payment Id: sdp-1-57379a43-c4b8-49f5-bd7c-699189ee7a60",
                          "transactionInformation": [
                              "Debit for Payment Id: sdp-1-57379a43-c4b8-49f5-bd7c-699189ee7a60"
                          ],
                          "isoBankTransactionCode": {
                              "domainCode": {
                                  "code": "PMNT",
                                  "name": "Payments"
                              },
                              "familyCode": {
                                  "code": "ICDT",
                                  "name": "Issued Credit Transfers"
                              },
                              "subFamilyCode": {
                                  "code": "DMCT",
                                  "name": "Domestic Credit Transfer"
                              }
                          },
                          "proprietaryBankTransactionCode": {
                              "code": "PMT",
                              "issuer": "modelo-sandbox"
                          },
                          "balance": {
                              "type": "CLOSING_AVAILABLE",
                              "balanceAmount": {
                                  "amount": 426.53,
                                  "currency": "GBP"
                              }
                          },
                          "enrichment": {
                              "transactionHash": {
                                  "hash": "adad72d7b3069ab9e4a6cb2844e2e3e9.1"
                              }
                          }
                      }
                  ],
                  "links": {
                      "self": "https://api.yapily.com/accounts/700004000000000000000002/transactions?from&before&limit=1000&sort=-date&offset=0&cursor"
                  }
              }
          },
          "uk-bulk-payment-auth-example-response": {
              "description": "UK Bulk Payment Example Response",
              "value": {
                  "meta": {
                      "tracingId": "96169af01d394ad39658f17d53b49a5d"
                  },
                  "data": {
                      "id": "a2a9ec77-a479-4996-9896-4568e1968e7a",
                      "userUuid": "5350782b-60f3-489e-aae5-a24d8d679a07",
                      "applicationUserId": "string",
                      "institutionId": "modelo-sandbox",
                      "status": "AWAITING_AUTHORIZATION",
                      "createdAt": "2021-06-09T13:48:25.138Z",
                      "featureScope": [
                          "EXISTING_PAYMENTS_DETAILS",
                          "EXISTING_PAYMENT_INITIATION_DETAILS",
                          "CREATE_BULK_PAYMENT"
                      ],
                      "state": "80052c03007f41d589f64377eef4d620",
                      "institutionConsentId": "sdp-6-25ff5bd8-d01c-422d-aa9e-8e68808bc899",
                      "authorisationUrl": "https://ob19-auth1-ui.o3bank.co.uk/auth?client_id=e7f6b95b-5f35-419b-b301-8b08bcd946de&response_type=code+id_token&state=80052c03007f41d589f64377eef4d620&nonce=80052c03007f41d589f64377eef4d620&scope=openid+payments&redirect_uri=https%3A%2F%2Fauth.yapily.com%2F&request=eyJraWQiOiJnRTRvU3VaZDl4TVpUNXZDdTNWYy1mdktNak0iLCJhbGciOiJQUzI1NiJ9.eyJhdWQiOiJodHRwczovL29iMTktYXV0aDEtdWkubzNiYW5rLmNvLnVrIiwic2NvcGUiOiJvcGVuaWQgcGF5bWVudHMiLCJpc3MiOiJlN2Y2Yjk1Yi01ZjM1LTQxOWItYjMwMS04YjA4YmNkOTQ2ZGUiLCJjbGllbnRfaWQiOiJlN2Y2Yjk1Yi01ZjM1LTQxOWItYjMwMS04YjA4YmNkOTQ2ZGUiLCJyZXNwb25zZV90eXBlIjoiY29kZSBpZF90b2tlbiIsInJlZGlyZWN0X3VyaSI6Imh0dHBzOi8vYXV0aC55YXBpbHkuY29tLyIsInN0YXRlIjoiODAwNTJjMDMwMDdmNDFkNTg5ZjY0Mzc3ZWVmNGQ2MjAiLCJjbGFpbXMiOnsiaWRfdG9rZW4iOnsiYWNyIjp7InZhbHVlIjoidXJuOm9wZW5iYW5raW5nOnBzZDI6c2NhIiwiZXNzZW50aWFsIjp0cnVlfSwib3BlbmJhbmtpbmdfaW50ZW50X2lkIjp7InZhbHVlIjoic2RwLTYtMjVmZjViZDgtZDAxYy00MjJkLWFhOWUtOGU2ODgwOGJjODk5IiwiZXNzZW50aWFsIjp0cnVlfX0sInVzZXJpbmZvIjp7Im9wZW5iYW5raW5nX2ludGVudF9pZCI6eyJ2YWx1ZSI6InNkcC02LTI1ZmY1YmQ4LWQwMWMtNDIyZC1hYTllLThlNjg4MDhiYzg5OSIsImVzc2VudGlhbCI6dHJ1ZX19fSwibm9uY2UiOiI4MDA1MmMwMzAwN2Y0MWQ1ODlmNjQzNzdlZWY0ZDYyMCIsImp0aSI6ImUxYjZmMWM4LTQ1ZTktNGM0NS05NGE0LWExMTY1Nzk2NjZiNiIsImlhdCI6MTYyMzI0NjUwNSwiZXhwIjoxNjIzMjQ4MzA1fQ.C5YkClHiDOWl1CKnmEY0gM_JizUuELp2-k7sDjsWV5T-mgTWviO-jM7iVfCf4MsU6batLSBmeUFLco1b3S8PTQkAzwM3laHIgbfDAb_6bYkSBTbPriyzKcC8xAwhX3VdvWtb9qqdrn9zXSmIIITBhJdMzk1cgIjyETD7WNPln839eGP1-w8iB8yDOJOkYGRHJ850mQY-lk61GegmKs5kaxtYPIhrG2gygIi3JsN-uQJ6YOl2-5pylTEcJbuwhFiyeePdqHZdabqW2BSA6lDKQbMV_Zow_zhSWoFFv6RZdXCQpt4TBRj1W7tzZQKin-MC-TpzaF1q07RpSy0NtlN85w",
                      "qrCodeUrl": "https://images.yapily.com/image/2bbb79b8-2c4a-4c8e-9132-0636879437da/1623246505?size=0"
                  }
              }
          },
          "uk-bulk-payment-example-response": {
              "description": "UK Bulk Payment Example Response",
              "value": {
                  "meta": {
                      "tracingId": "0cda48c70f3941148bbee775a65fa3d0"
                  },
                  "data": {
                      "id": "pv3-a1e2ecb0-270c-42e2-8ba5-005261b629d2",
                      "institutionConsentId": "sdp-6-b06f9a82-c641-4aba-b76d-43e6bc052f75",
                      "status": "COMPLETED",
                      "statusDetails": {
                          "status": "COMPLETED",
                          "statusUpdateDate": "2021-06-09T13:53:28.67Z"
                      },
                      "createdAt": "2021-06-09T13:53:28.67Z",
                      "bulkAmountSum": 7
                  }
              }
          },
          "eur-single-domestic-payment-auth-example-response": {
              "description": "EUR Single Domestic Example Response",
              "value": {
                  "meta": {
                      "tracingId": "a3d09f97bea244e2bb8be0bffbe53f81"
                  },
                  "data": {
                      "id": "cae22f3d-1033-4ba6-95ae-0d8ca193b090",
                      "userUuid": "5350782b-60f3-489e-aae5-a24d8d679a07",
                      "applicationUserId": "string",
                      "institutionId": "bpm-sandbox",
                      "status": "AWAITING_AUTHORIZATION",
                      "createdAt": "2021-06-10T11:47:12.887Z",
                      "featureScope": [
                          "EXISTING_PAYMENTS_DETAILS",
                          "CREATE_DOMESTIC_SINGLE_PAYMENT",
                          "EXISTING_PAYMENT_INITIATION_DETAILS"
                      ],
                      "state": "6a5f69be6a084b5c8c1becac88d45c95",
                      "institutionConsentId": "79cee256-077f-4e11-a307-43892646a4a6",
                      "authorisationUrl": "https://scasandbox.bancobpm.it/sca/login.html?paymentId=79cee256-077f-4e11-a307-43892646a4a6&tppAuthenticationRedirectUri=https%3A%2F%2Fauth.yapily.com%2F%3Ftwofold_redirect%3Dtrue%26state%3D6a5f69be6a084b5c8c1becac88d45c95&tppName=YAPILY+LTD&aspspCode=05034&aspspProductCode=IBP01&tppRegistrationNumber=PSDGB-FCA-927459&hash=GY5CmKG3MVeoxrboUQkjCoIb1X0nGR9ZTfoIG3T%2FLx1At1UJ92w0sjDeRXbNP9NhO203Y03UeI6Xn9ThebOjtQ%3D%3D",
                      "qrCodeUrl": "https://images.yapily.com/image/5955c0db-a5b7-4b12-a682-0f83317ba46d/1623325632?size=0"
                  }
              }
          },
          "gbp-single-domestic-payment-auth-example-response": {
              "description": "GBP Single Domestic Example Response",
              "value": {
                  "meta": {
                      "tracingId": "2dbfd85b4f2940c6a206e96dd90e52d0"
                  },
                  "data": {
                      "id": "eb39f8ae-aeff-4ffa-a23d-d4a5b3eff406",
                      "userUuid": "3ddf5dd0-aa48-4d0f-baa7-fa057e9e911d",
                      "applicationUserId": "string",
                      "institutionId": "modelo-sandbox",
                      "status": "AWAITING_AUTHORIZATION",
                      "createdAt": "2021-06-08T09:45:42.145Z",
                      "featureScope": [
                          "EXISTING_PAYMENTS_DETAILS",
                          "EXISTING_PAYMENT_INITIATION_DETAILS",
                          "CREATE_DOMESTIC_SINGLE_PAYMENT"
                      ],
                      "state": "430b2756e9724c8eaad3862524817260",
                      "institutionConsentId": "sdp-1-6d8d035e-868e-4355-be41-bddc25b7aac8",
                      "authorisationUrl": "https://ob19-auth1-ui.o3bank.co.uk/auth?client_id=e7f6b95b-5f35-419b-b301-8b08bcd946de&response_type=code+id_token&state=430b2756e9724c8eaad3862524817260&nonce=430b2756e9724c8eaad3862524817260&scope=openid+payments&redirect_uri=https%3A%2F%2Fauth.yapily.com%2F&request=eyJraWQiOiJnRTRvU3VaZDl4TVpUNXZDdTNWYy1mdktNak0iLCJhbGciOiJQUzI1NiJ9.eyJhdWQiOiJodHRwczovL29iMTktYXV0aDEtdWkubzNiYW5rLmNvLnVrIiwic2NvcGUiOiJvcGVuaWQgcGF5bWVudHMiLCJpc3MiOiJlN2Y2Yjk1Yi01ZjM1LTQxOWItYjMwMS04YjA4YmNkOTQ2ZGUiLCJjbGllbnRfaWQiOiJlN2Y2Yjk1Yi01ZjM1LTQxOWItYjMwMS04YjA4YmNkOTQ2ZGUiLCJyZXNwb25zZV90eXBlIjoiY29kZSBpZF90b2tlbiIsInJlZGlyZWN0X3VyaSI6Imh0dHBzOi8vYXV0aC55YXBpbHkuY29tLyIsInN0YXRlIjoiNDMwYjI3NTZlOTcyNGM4ZWFhZDM4NjI1MjQ4MTcyNjAiLCJjbGFpbXMiOnsiaWRfdG9rZW4iOnsiYWNyIjp7InZhbHVlIjoidXJuOm9wZW5iYW5raW5nOnBzZDI6c2NhIiwiZXNzZW50aWFsIjp0cnVlfSwib3BlbmJhbmtpbmdfaW50ZW50X2lkIjp7InZhbHVlIjoic2RwLTEtNmQ4ZDAzNWUtODY4ZS00MzU1LWJlNDEtYmRkYzI1YjdhYWM4IiwiZXNzZW50aWFsIjp0cnVlfX0sInVzZXJpbmZvIjp7Im9wZW5iYW5raW5nX2ludGVudF9pZCI6eyJ2YWx1ZSI6InNkcC0xLTZkOGQwMzVlLTg2OGUtNDM1NS1iZTQxLWJkZGMyNWI3YWFjOCIsImVzc2VudGlhbCI6dHJ1ZX19fSwibm9uY2UiOiI0MzBiMjc1NmU5NzI0YzhlYWFkMzg2MjUyNDgxNzI2MCIsImp0aSI6IjJjYzczMzRhLTJmMDYtNDNjNi04MDkzLTNiYWZjNjQzMWE0YyIsImlhdCI6MTYyMzE0NTU0MiwiZXhwIjoxNjIzMTQ3MzQyfQ.bh0sCVmwkwbx_rxxIwE6p7SjswaH007bdMJfWYo_njIHwoPOkcGjygi2yU7bpNd7bqeqxY1adtkMg_acg6A7awq1jX7nxv6mZC44Q2zGKNMc_nOQPSNO6LkktRcozBxyJ2sEfLheVmmVsyyCQw4FV0w_7Cgc4tFO11FjZ0LNxbp5kpMCK7SABa4RgvZ4IpG-Zl6jFKHfNK1zUP79yBaQcBvNseIirAmG3iJjdpwVc3tD8bl-0SPcPwStk1A3T8OvOgW8DKM4OSEPgKL73I9CExQiJzYykKYLr8tp9bQmI0OgajVM9BT2nbKszRnRe92gPq31goRHHWhfzgQHKFBCNg",
                      "qrCodeUrl": "https://images.yapily.com/image/5121fd6a-5010-4f36-9c25-df691cf465c1/1623145542?size=0"
                  }
              }
          },
          "eur-domestic-single-payment-example-response": {
              "description": "EUR Domestic Single Payment Example Response",
              "value": {
                  "meta": {
                      "tracingId": "0f14e900011b445fa6b6c2c4272d7321"
                  },
                  "data": {
                      "id": "a9582f8e-08be-4cca-9f01-1ad3be96532d",
                      "status": "COMPLETED",
                      "statusDetails": {
                          "status": "COMPLETED",
                          "isoStatus": {
                              "code": "ACCP",
                              "name": "AcceptedCustomerProfile"
                          }
                      },
                      "payer": {
                          "name": "John Doe",
                          "accountIdentifications": [
                              {
                                  "type": "IBAN",
                                  "identification": "DE12345678901234567890"
                              }
                          ]
                      },
                      "payeeDetails": {
                          "name": "Jane Doe",
                          "accountIdentifications": [
                              {
                                  "type": "IBAN",
                                  "identification": "BE12345678901234"
                              }
                          ]
                      },
                      "reference": "Bill Payment",
            "amount": 1.00,
                      "currency": "EUR",
                      "amountDetails": {
              "amount": 1.00,
                          "currency": "EUR"
                      }
                  }
              }
          },
          "gbp-domestic-single-payment-example-response": {
              "description": "GBP Domestic Single Payment Example Response",
              "value": {
                  "meta": {
                      "tracingId": "2b93dc6029634a5095b3415cc5cc0e84"
                  },
                  "data": {
                      "id": "pv3-a6ac6528-e8c8-44eb-b6f9-8521963518dc",
                      "institutionConsentId": "sdp-1-27a192bb-482f-4731-989b-e7271661248c",
                      "paymentIdempotencyId": "4289457hd38djoa783jw9qag3",
                      "paymentLifecycleId": "3gaq9wj387aojd83dh7549824",
                      "status": "COMPLETED",
                      "statusDetails": {
                          "status": "COMPLETED",
                          "statusUpdateDate": "2021-06-10T11:26:54.887Z",
                          "isoStatus": {
                              "code": "ACSC",
                              "name": "AcceptedSettlementCompleted"
                          }
                      },
                      "payeeDetails": {
                          "name": "Jane Doe",
                          "accountIdentifications": [
                              {
                                  "type": "ACCOUNT_NUMBER",
                                  "identification": "12345678"
                              },
                              {
                                  "type": "SORT_CODE",
                                  "identification": "123456"
                              }
                          ]
                      },
                      "reference": "Bill Payment",
            "amount": 1.00,
                      "currency": "GBP",
                      "amountDetails": {
              "amount": 1.00,
                          "currency": "GBP"
                      },
                      "createdAt": "2021-06-10T11:26:54.887Z"
                  }
              }
          },
          "eur-single-domestic-payment-details-example-response": {
              "description": "EUR Single Domestic Payment Example Response",
              "value": {
                  "meta": {
                      "tracingId": "590c99aecd2844c7a5c3ea00c55ce0ef"
                  },
                  "data": {
                      "payments": [
                          {
                              "id": "pv3-a6ac6528-e8c8-44eb-b6f9-8521963518dd",
                              "institutionConsentId": "sdp-1-27a192bb-482f-4731-989b-e7271661248d",
                              "paymentIdempotencyId": "234g87t58tgeuo848wudjew489",
                              "paymentLifecycleId": "3gaq9wj387aojd83dh7549824",
                              "status": "COMPLETED",
                              "statusDetails": {
                                  "status": "COMPLETED",
                                  "statusUpdateDate": "2021-06-10T11:26:54.887Z",
                                  "isoStatus": {
                                      "code": "ACSC",
                                      "name": "AcceptedSettlementCompleted"
                                  }
                              },
                              "payeeDetails": {
                                  "name": "Jane Doe",
                                  "address": {
                                      "country": "BE"
                                  },
                                  "accountIdentifications": [
                                      {
                                          "type": "IBAN",
                                          "identification": "BE12345678901234"
                                      }
                                  ]
                              },
                              "reference": "Bill Payment",
                "amount": 1.00,
                              "currency": "EUR",
                              "amountDetails": {
                  "amount": 1.00,
                                  "currency": "EUR"
                              },
                              "scheduledPaymentType": "DOMESTIC_PAYMENT",
                              "createdAt": "2021-06-10T11:26:54.887Z"
                          }
                      ]
                  }
              }
          },
          "gbp-single-domestic-payment-details-example-response": {
              "description": "GBP Single Domestic Payment Example Response",
              "value": {
                  "meta": {
                      "tracingId": "547ffd74b2ea46968cef64e0ddac59e1"
                  },
                  "data": {
                      "payments": [
                          {
                              "id": "pv3-a6ac6528-e8c8-44eb-b6f9-8521963518dc",
                              "institutionConsentId": "sdp-1-27a192bb-482f-4731-989b-e7271661248c",
                              "paymentIdempotencyId": "4289457hd38djoa783jw9qag3",
                              "paymentLifecycleId": "3gaq9wj387aojd83dh7549824",
                              "status": "COMPLETED",
                              "statusDetails": {
                                  "status": "COMPLETED",
                                  "statusUpdateDate": "2021-06-10T11:26:54.887Z",
                                  "isoStatus": {
                                      "code": "ACSC",
                                      "name": "AcceptedSettlementCompleted"
                                  }
                              },
                              "payeeDetails": {
                                  "name": "Jane Doe",
                                  "accountIdentifications": [
                                      {
                                          "type": "ACCOUNT_NUMBER",
                                          "identification": "12345678"
                                      },
                                      {
                                          "type": "SORT_CODE",
                                          "identification": "123456"
                                      }
                                  ]
                              },
                              "reference": "Bill Payment",
                "amount": 1.00,
                              "currency": "GBP",
                              "amountDetails": {
                  "amount": 1.00,
                                  "currency": "GBP"
                              },
                              "createdAt": "2021-06-10T11:26:54.887Z"
                          }
                      ]
                  }
              }
          },
          "uk-bulk-payment-details-example-response": {
              "description": "UK Bulk Payment Example Response",
              "value": {
                  "meta": {
                      "tracingId": "a63d57d771d64875a8230a1fcabd87f2"
                  },
                  "data": {
                      "payments": [
                          {
                              "id": "pv3-a1e2ecb0-270c-42e2-8ba5-005261b629d2",
                              "institutionConsentId": "sdp-6-b06f9a82-c641-4aba-b76d-43e6bc052f75",
                              "status": "COMPLETED",
                              "statusDetails": {
                                  "status": "COMPLETED",
                                  "statusUpdateDate": "2021-06-09T13:53:28.67Z"
                              },
                              "createdAt": "2021-06-09T13:53:28.67Z",
                              "bulkAmountSum": 7
                          }
                      ]
                  }
              }
          },
          "categories-example-response": {
              "description": "Example Response",
              "value": {
                  "meta": {
                      "tracingId": "a5b0fc4b8b8a4b7085f4412b2b64e969",
                      "count": 21
                  },
                  "data": [
                      {
                          "id": "06d10bcd-dbcc-4a61-b5a1-c119adc16adf",
                          "label": "INCOME",
                          "country": "GB",
                          "subcategories": []
                      },
                      {
                          "id": "1051a1ff-5552-4b53-ba43-eeeac96d710f",
                          "label": "INCOME_OTHER",
                          "country": "GB",
                          "subcategories": []
                      },
                      {
                          "id": "2f527678-a698-4c00-9880-3063b39f71df",
                          "label": "INCOME_REFUNDS",
                          "country": "GB",
                          "subcategories": []
                      },
                      {
                          "id": "3954ed5c-1663-4356-869e-241f305c8b4b",
                          "label": "BILLS",
                          "country": "GB",
                          "subcategories": [
                              {
                                  "id": "03e037d4-c950-4540-a298-36cce7eb9ce9",
                                  "label": "INTERNET / TV"
                              },
                              {
                                  "id": "05ed46b2-dfa4-4cde-8900-692a899e1290",
                                  "label": "MOBILE PHONE"
                              },
                              {
                                  "id": "06df5c74-3783-48d4-9825-f508a237d60f",
                                  "label": "SUBSCRIPTION"
                              },
                              {
                                  "id": "11e189ab-3794-478b-8a30-1c1c7aae7af1",
                                  "label": "TV LICENCE"
                              },
                              {
                                  "id": "1238e562-2a7b-4ef1-8e41-037491cefd53",
                                  "label": "UTILITY BILL"
                              },
                              {
                                  "id": "129c7a08-2125-4b0f-87bb-253fca906eb7",
                                  "label": "OTHER"
                              }
                          ]
                      },
                      {
                          "id": "5de14494-fec8-44c2-af9c-91656d2e8d1b",
                          "label": "CHARITY AND GIFTS",
                          "country": "GB",
                          "subcategories": [
                              {
                                  "id": "1655bc45-de79-4fd2-9b45-8bd9271a2520",
                                  "label": "DONATIONS"
                              },
                              {
                                  "id": "1b9e1a46-5229-4488-a68c-19d7cb450c79",
                                  "label": "GIFTS"
                              },
                              {
                                  "id": "1d09a62b-1f9c-418d-9f37-9ee5003d5abc",
                                  "label": "OTHER"
                              }
                          ]
                      },
                      {
                          "id": "6edef913-2c1e-4935-9f23-4a71fe92124c",
                          "label": "EATING OUT",
                          "country": "GB",
                          "subcategories": [
                              {
                                  "id": "1e13a0f5-6892-4436-ba71-f11cd1a0b8fe",
                                  "label": "COFFEE"
                              },
                              {
                                  "id": "1eb03b3e-e9ab-4d54-ae9a-e63778390794",
                                  "label": "DRINKS"
                              },
                              {
                                  "id": "253e0e15-f260-44ee-a1cf-ac42afbc8a48",
                                  "label": "FAST FOOD"
                              },
                              {
                                  "id": "25a39d3e-d2c5-47e5-9874-57d9d4edfaaa",
                                  "label": "RESTAURANT"
                              },
                              {
                                  "id": "26594166-4e32-4a9b-8cbf-ea7ab86c19e6",
                                  "label": "TAKEAWAY / DELIVERY"
                              },
                              {
                                  "id": "36949186-bb90-427a-840b-8d9c9ff5ca35",
                                  "label": "OTHER"
                              }
                          ]
                      },
                      {
                          "id": "705dddcc-03f8-4a27-ac8b-a2256f950239",
                          "label": "ENTERTAINMENT",
                          "country": "GB",
                          "subcategories": [
                              {
                                  "id": "380694b8-efc4-4443-9c49-df81229f3d69",
                                  "label": "ART / MUSEUM"
                              },
                              {
                                  "id": "380c0b10-1afd-4f4f-8fd5-7cac3392fb9a",
                                  "label": "CINEMA"
                              },
                              {
                                  "id": "397b698d-4f46-4356-a283-2af934bf51a3",
                                  "label": "LIVE MUSIC"
                              },
                              {
                                  "id": "39aed540-1702-4e50-9109-5808e5636146",
                                  "label": "LIVE SPORT"
                              },
                              {
                                  "id": "44a99d0c-2718-4c95-8c2c-13c9802e2d20",
                                  "label": "THEATRE"
                              },
                              {
                                  "id": "4a419ef8-f953-4866-881e-0ad61adf110c",
                                  "label": "NIGHTCLUB"
                              },
                              {
                                  "id": "4c483465-980d-4274-81d5-32e2d61e8aed",
                                  "label": "ONLINE GAMBLING"
                              },
                              {
                                  "id": "50bbec77-b23d-4ce2-bedb-a0e1ca2e34f4",
                                  "label": "LOTTERY"
                              },
                              {
                                  "id": "5a3d65f9-a8ae-4eb8-bae0-973c7c4de372",
                                  "label": "BETTING SHOP"
                              },
                              {
                                  "id": "5b8493cb-09f6-457a-a642-9a309ee1d424",
                                  "label": "OTHER"
                              }
                          ]
                      },
                      {
                          "id": "75cdc4b8-dc29-409f-8f9b-a99341ea2e39",
                          "label": "INVESTMENT AND SAVINGS",
                          "country": "GB",
                          "subcategories": [
                              {
                                  "id": "5c8c11a1-ad38-4101-898e-9ceb1ee90d48",
                                  "label": "CREDIT CARD PAYMENT"
                              },
                              {
                                  "id": "5f93b21e-7e63-4652-91a9-610026252b29",
                                  "label": "INVESTMENTS"
                              },
                              {
                                  "id": "5fb0ba5d-71eb-42db-bd51-63637ef356df",
                                  "label": "SAVINGS"
                              },
                              {
                                  "id": "5fe79b4e-8ab3-4cb4-b51e-bc5eb3263a0c",
                                  "label": "PENSION"
                              },
                              {
                                  "id": "61eaee8c-eea4-4d9f-93f1-74f22f38b6ea",
                                  "label": "OTHER"
                              }
                          ]
                      },
                      {
                          "id": "7bc5d291-8af1-4ad0-bf29-302f4e1c6995",
                          "label": "GENERAL",
                          "country": "GB",
                          "subcategories": [
                              {
                                  "id": "656abd3b-8a71-455f-ab28-6f4e3262da2c",
                                  "label": "OTHER"
                              }
                          ]
                      },
                      {
                          "id": "84c9be40-4114-43ce-9e06-5f93c2719693",
                          "label": "GROCERIES",
                          "country": "GB",
                          "subcategories": [
                              {
                                  "id": "69f5d7b7-f1e6-498a-9318-23ba5916c7ef",
                                  "label": "SUPERMARKET"
                              },
                              {
                                  "id": "6d4395bb-466c-419a-80b5-7428cec4f88f",
                                  "label": "ONLINE GROCERIES"
                              },
                              {
                                  "id": "74a0185b-632d-4edd-832f-d32582b15e8d",
                                  "label": "OTHER"
                              }
                          ]
                      },
                      {
                          "id": "8abdddb5-92c4-42e1-b380-12537f84b40e",
                          "label": "PERSONAL CARE",
                          "country": "GB",
                          "subcategories": [
                              {
                                  "id": "7702e7ec-32b9-4ce6-879e-20ac84e52293",
                                  "label": "BEAUTY PRODUCTS"
                              },
                              {
                                  "id": "7affed3f-f9d0-4946-b2c0-70c79b0334ac",
                                  "label": "DOCTOR"
                              },
                              {
                                  "id": "7f84092a-c67d-4cb3-99af-c7a4be5109db",
                                  "label": "GYM / EXERCISE"
                              },
                              {
                                  "id": "7fcaceb6-9c4e-4395-b216-5ae41b3991d2",
                                  "label": "HAIRDRESSER"
                              },
                              {
                                  "id": "83f7fb77-8b56-4f47-b531-6d06e245597d",
                                  "label": "PHARMACY"
                              },
                              {
                                  "id": "8546fdde-8b73-4a58-9aa0-4781e4ca6340",
                                  "label": "SPA / BEAUTY TREATMENT"
                              },
                              {
                                  "id": "85936cb0-aa0c-4c93-b0bc-cbf1672bd675",
                                  "label": "OTHER"
                              }
                          ]
                      },
                      {
                          "id": "8b37bbd3-76e9-4937-a7fc-e9cf7d8232a3",
                          "label": "HOME",
                          "country": "GB",
                          "subcategories": [
                              {
                                  "id": "899cbae5-c556-4e2d-8cdd-9fef7fd4d820",
                                  "label": "RENT"
                              },
                              {
                                  "id": "8af1b65f-62f2-4b56-a348-97e7390d2f62",
                                  "label": "MORTGAGE"
                              },
                              {
                                  "id": "8cf40b23-e7a4-4ae3-88f0-4ab3b35a679b",
                                  "label": "SERVICE CHARGE"
                              },
                              {
                                  "id": "8dfb3077-3e29-4a3b-b41c-964bf368071b",
                                  "label": "GARDEN"
                              },
                              {
                                  "id": "922cd0ca-bd5f-44ab-aa40-6536f9d2abe5",
                                  "label": "COUNCIL TAX"
                              },
                              {
                                  "id": "9d3ca620-4ae3-4296-8864-c0962b2f4539",
                                  "label": "HOME IMPROVEMENT"
                              },
                              {
                                  "id": "a1bfe200-c1d7-4c0c-9d60-d0b83cd71f74",
                                  "label": "OTHER"
                              }
                          ]
                      },
                      {
                          "id": "92aef8f2-18f8-464f-8915-e44dc5b97731",
                          "label": "INSURANCE",
                          "country": "GB",
                          "subcategories": [
                              {
                                  "id": "a72f6cbf-d894-4bfa-ac87-39f85012a7f8",
                                  "label": "HOME INSURANCE"
                              },
                              {
                                  "id": "a7bc0f36-ee80-496c-a1c1-ac49c51c6d07",
                                  "label": "MOTOR INSURANCE"
                              },
                              {
                                  "id": "a8a505af-7e73-4d6f-a146-51d2eb5d4db8",
                                  "label": "TRAVEL INSURANCE"
                              },
                              {
                                  "id": "a9e1b431-6d75-41ac-9a23-44fb25e64b1a",
                                  "label": "HEALTH INSURANCE"
                              },
                              {
                                  "id": "aa420049-2d7a-4f11-94d5-c76e45329a47",
                                  "label": "LIFE INSURANCE"
                              },
                              {
                                  "id": "ab441944-859a-44db-93fc-0800266dd4f6",
                                  "label": "PET INSURANCE"
                              },
                              {
                                  "id": "ab95ea13-8d0c-497d-8d8b-e06cde0eaf97",
                                  "label": "PHONE / GADGET INSURANCE"
                              },
                              {
                                  "id": "aba53905-b630-4cf3-b1f8-698d124197a6",
                                  "label": "OTHER"
                              }
                          ]
                      },
                      {
                          "id": "b0b56616-8cf6-4653-8512-d5eefe8400fe",
                          "label": "OTHER",
                          "country": "GB",
                          "subcategories": [
                              {
                                  "id": "ad5e46b2-f9ad-4ef2-96d7-a2817073beec",
                                  "label": "EDUCATION"
                              },
                              {
                                  "id": "b18ec1a3-171c-405a-bd4f-c9fddcd6c594",
                                  "label": "ATM WITHDRAWAL"
                              },
                              {
                                  "id": "b1d4abd8-1c2f-412a-9916-4167cc7d58d8",
                                  "label": "CREDIT CARD PAYMENT"
                              },
                              {
                                  "id": "b4cd0587-1d2f-4378-a31c-8ddc0ce0dc03",
                                  "label": "TRANSFER"
                              },
                              {
                                  "id": "b667ea18-8679-4608-91b6-cbd4488d3802",
                                  "label": "CARD TOPUP"
                              },
                              {
                                  "id": "b6c611d7-d8cc-4d16-8e42-16cfa6dfd56e",
                                  "label": "OTHER"
                              }
                          ]
                      },
                      {
                          "id": "b1f468dd-8f0c-4bbb-a720-f6c117187b15",
                          "label": "SHOPPING",
                          "country": "GB",
                          "subcategories": [
                              {
                                  "id": "b7181636-097c-4362-9f71-9da1559685f2",
                                  "label": "BOOKS"
                              },
                              {
                                  "id": "becc8b91-f594-490b-aecf-50e12fb6ca84",
                                  "label": "CLOTHING"
                              },
                              {
                                  "id": "bf41624e-5790-43d9-966d-25878cd79881",
                                  "label": "ELECTRONICS"
                              },
                              {
                                  "id": "c8bab464-ade8-4ec2-9d83-d42a2aa7d088",
                                  "label": "GAMES"
                              },
                              {
                                  "id": "c99e826c-302c-4abf-85b5-557d65184f63",
                                  "label": "HOBBIES"
                              },
                              {
                                  "id": "cb09c4e8-00d2-41d7-a581-f73d0e3b0cb2",
                                  "label": "MUSIC"
                              },
                              {
                                  "id": "cbe0734a-c10b-4901-bf7c-be4df9b1ed42",
                                  "label": "PETS"
                              },
                              {
                                  "id": "d13b7872-0418-426c-9054-315a41ddcd21",
                                  "label": "SOFTWARE"
                              },
                              {
                                  "id": "d17705fc-1a34-42a2-bc77-0511635f0d21",
                                  "label": "SPORTING ITEMS"
                              },
                              {
                                  "id": "d2668855-296d-450f-b309-3f28c4f3fa5f",
                                  "label": "HOUSE ITEMS"
                              },
                              {
                                  "id": "d4cf6c32-d94f-4488-9e74-46734cb34cc2",
                                  "label": "FILM / DVD"
                              },
                              {
                                  "id": "d837fb3f-f614-410b-b9d9-3e89e92e683a",
                                  "label": "STATIONARY"
                              },
                              {
                                  "id": "d8d74d91-7810-4995-8337-72c39dff05a2",
                                  "label": "OTHER"
                              }
                          ]
                      },
                      {
                          "id": "b831661f-c8af-4eec-91d8-b09b53616394",
                          "label": "TRANSPORT",
                          "country": "GB",
                          "subcategories": [
                              {
                                  "id": "d9da6e16-7a9f-41ee-b727-a7d39f0e4c2c",
                                  "label": "PUBLIC TRANSPORT"
                              },
                              {
                                  "id": "d9e7f133-d0d7-471a-be28-da3f61d453c2",
                                  "label": "PETROL / FUEL"
                              },
                              {
                                  "id": "dbb9104d-e0e4-4e25-838a-083dc751c665",
                                  "label": "PARKING"
                              },
                              {
                                  "id": "dcab2001-efc7-42be-a381-c7169ff806e6",
                                  "label": "TAXI"
                              },
                              {
                                  "id": "dee109d5-0347-404e-81f2-cc736949e62d",
                                  "label": "OTHER"
                              }
                          ]
                      },
                      {
                          "id": "baf7ee41-0a29-49f7-b5fd-af602935c2fe",
                          "label": "TRAVEL AND HOLIDAY",
                          "country": "GB",
                          "subcategories": [
                              {
                                  "id": "e1cc65b3-30ba-47fc-90aa-c7a1fb93ebdf",
                                  "label": "AIR TRAVEL"
                              },
                              {
                                  "id": "e44e3d55-a843-4660-940b-b2756198992e",
                                  "label": "CAR RENTAL"
                              },
                              {
                                  "id": "e76ee6e8-1cef-4986-b229-ef96af9f473d",
                                  "label": "HOTELS"
                              },
                              {
                                  "id": "ed57cd0b-2abc-4af9-b478-75bbee149a5a",
                                  "label": "OTHER"
                              }
                          ]
                      },
                      {
                          "id": "bc4de368-67f2-4bd6-ae09-ebfa1164e259",
                          "label": "FEES AND CHARGES",
                          "country": "GB",
                          "subcategories": [
                              {
                                  "id": "ed8d73e4-79ea-42a0-aab3-0c2d40594ba8",
                                  "label": "LATE FEE"
                              },
                              {
                                  "id": "ee16362b-f67c-4f1a-8e6a-f2ed6f325df3",
                                  "label": "ATM FEE"
                              },
                              {
                                  "id": "ef9652f1-67cf-40eb-8ef5-ecb96419c60c",
                                  "label": "SERVICE FEE"
                              },
                              {
                                  "id": "f0d996d4-be7e-48f3-bb3b-48d10c287b75",
                                  "label": "OVERDRAFT CHARGE"
                              },
                              {
                                  "id": "f16c80bb-4e77-43de-bb8e-3391d8c8d2f0",
                                  "label": "FOREIGN CURRENCY CHARGE"
                              },
                              {
                                  "id": "f2a19ee6-d181-4454-98e4-1f8c5d83be82",
                                  "label": "OTHER"
                              }
                          ]
                      },
                      {
                          "id": "c17a6985-a47c-463c-bbd0-934a156224e3",
                          "label": "FINANCES",
                          "country": "GB",
                          "subcategories": []
                      },
                      {
                          "id": "cdc636d5-2dc7-444a-a53c-edd81f449cdc",
                          "label": "TRANSFERS",
                          "country": "GB",
                          "subcategories": []
                      },
                      {
                          "id": "2a497caa-eea6-4e99-b460-57a26fffd0d7",
                          "label": "UNKNOWN",
                          "country": "GB",
                          "subcategories": []
                      }
                  ]
              }
          },
          "consent-auth-code-example-response": {
              "description": "Example Response",
              "value": {
                  "id": "56a42244-414a-4b52-8c4f-4ad2a50e82fe",
                  "userUuid": "ca412fdf-5a30-43a2-88b7-5964a24a8e55",
                  "applicationUserId": "string",
                  "institutionId": "modelo-sandbox",
                  "status": "AUTHORIZED",
                  "createdAt": "2021-06-08T10:59:35.138Z",
                  "featureScope": [
                      "ACCOUNT_BENEFICIARIES",
                      "ACCOUNT_STATEMENT_FILE",
                      "ACCOUNTS",
                      "ACCOUNT_PERIODIC_PAYMENTS",
                      "ACCOUNT_TRANSACTIONS",
                      "ACCOUNT",
                      "ACCOUNT_STATEMENTS",
                      "ACCOUNT_SCHEDULED_PAYMENTS",
                      "IDENTITY",
                      "ACCOUNT_DIRECT_DEBITS",
                      "ACCOUNT_STATEMENT",
                      "ACCOUNT_BALANCES",
                      "ACCOUNT_TRANSACTIONS_WITH_MERCHANT"
                  ],
                  "consentToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJJTlNUSVRVVElPTiI6Im1vZGVsby1zYW5kYm94IiwiQ09OU0VOVCI6IjU2YTQyMjQ0LTQxNGEtNGI1Mi04YzRmLTRhZDJhNTBlODJmZSIsIkFQUExJQ0FUSU9OX1VTRVJfSUQiOiJtb2ZlLTIiLCJVU0VSIjoiY2E0MTJmZGYtNWEzMC00M2EyLTg4YjctNTk2NGEyNGE4ZTU1In0.gorwpnUjSr5dzQJLR32M2geWOj7yK9xMsZmq27ssY9xP_xGmWfUL_aqVHYyQ4r5KWw6Xb6RjvO839st8chJLtg",
                  "state": "a09f8ff9c1284444aa635267e05f76e1",
                  "authorizedAt": "2021-06-08T10:59:53.288Z",
                  "institutionConsentId": "aac-605d48f2-2a0e-4594-81a9-996524fa3b2a"
              }
          },
          "consent-one-time-token-example-response": {
              "description": "Example Response",
              "value": {
                  "id": "56a42244-414a-4b52-8c4f-4ad2a50e82fe",
                  "userUuid": "ca412fdf-5a30-43a2-88b7-5964a24a8e55",
                  "applicationUserId": "string",
                  "institutionId": "modelo-sandbox",
                  "status": "AUTHORIZED",
                  "createdAt": "2021-06-08T10:59:35.138Z",
                  "featureScope": [
                      "ACCOUNT_BENEFICIARIES",
                      "ACCOUNT_STATEMENT_FILE",
                      "ACCOUNTS",
                      "ACCOUNT_PERIODIC_PAYMENTS",
                      "ACCOUNT_TRANSACTIONS",
                      "ACCOUNT",
                      "ACCOUNT_STATEMENTS",
                      "ACCOUNT_SCHEDULED_PAYMENTS",
                      "IDENTITY",
                      "ACCOUNT_DIRECT_DEBITS",
                      "ACCOUNT_STATEMENT",
                      "ACCOUNT_BALANCES",
                      "ACCOUNT_TRANSACTIONS_WITH_MERCHANT"
                  ],
                  "consentToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJJTlNUSVRVVElPTiI6Im1vZGVsby1zYW5kYm94IiwiQ09OU0VOVCI6IjU2YTQyMjQ0LTQxNGEtNGI1Mi04YzRmLTRhZDJhNTBlODJmZSIsIkFQUExJQ0FUSU9OX1VTRVJfSUQiOiJtb2ZlLTIiLCJVU0VSIjoiY2E0MTJmZGYtNWEzMC00M2EyLTg4YjctNTk2NGEyNGE4ZTU1In0.gorwpnUjSr5dzQJLR32M2geWOj7yK9xMsZmq27ssY9xP_xGmWfUL_aqVHYyQ4r5KWw6Xb6RjvO839st8chJLtg",
                  "state": "a09f8ff9c1284444aa635267e05f76e1",
                  "authorizedAt": "2021-06-08T10:59:53.288Z",
                  "institutionConsentId": "aac-605d48f2-2a0e-4594-81a9-996524fa3b2a"
              }
          },
          "consents-example-response": {
              "description": "Example Response",
              "value": {
                  "meta": {
                      "tracingId": "d7b537b108934105a522dc7b4522380b",
                      "count": 1,
                      "pagination": {
                          "totalCount": 1,
                          "self": {
                              "sort": "-date",
                              "offset": 0
                          }
                      }
                  },
                  "data": [
                      {
                          "id": "56a42244-414a-4b52-8c4f-4ad2a50e82fe",
                          "userUuid": "ca412fdf-5a30-43a2-88b7-5964a24a8e55",
                          "applicationUserId": "string",
                          "institutionId": "modelo-sandbox",
                          "status": "AUTHORIZED",
                          "createdAt": "2021-06-08T10:59:35.138Z",
                          "featureScope": [
                              "ACCOUNT_BENEFICIARIES",
                              "ACCOUNT_STATEMENT_FILE",
                              "ACCOUNTS",
                              "ACCOUNT_PERIODIC_PAYMENTS",
                              "ACCOUNT_TRANSACTIONS",
                              "ACCOUNT",
                              "ACCOUNT_STATEMENTS",
                              "ACCOUNT_SCHEDULED_PAYMENTS",
                              "IDENTITY",
                              "ACCOUNT_DIRECT_DEBITS",
                              "ACCOUNT_STATEMENT",
                              "ACCOUNT_BALANCES",
                              "ACCOUNT_TRANSACTIONS_WITH_MERCHANT"
                          ],
                          "consentToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJJTlNUSVRVVElPTiI6Im1vZGVsby1zYW5kYm94IiwiQ09OU0VOVCI6IjU2YTQyMjQ0LTQxNGEtNGI1Mi04YzRmLTRhZDJhNTBlODJmZSIsIkFQUExJQ0FUSU9OX1VTRVJfSUQiOiJtb2ZlLTIiLCJVU0VSIjoiY2E0MTJmZGYtNWEzMC00M2EyLTg4YjctNTk2NGEyNGE4ZTU1In0.gorwpnUjSr5dzQJLR32M2geWOj7yK9xMsZmq27ssY9xP_xGmWfUL_aqVHYyQ4r5KWw6Xb6RjvO839st8chJLtg",
                          "state": "a09f8ff9c1284444aa635267e05f76e1",
                          "authorizedAt": "2021-06-08T10:59:53.288Z",
                          "institutionConsentId": "aac-605d48f2-2a0e-4594-81a9-996524fa3b2a"
                      }
                  ]
              }
          },
          "consent-delete-example-response": {
              "description": "Example Response",
              "value": {
                  "meta": {
                      "tracingId": "9aacaccc6dbf4a86960c9541969087a0"
                  },
                  "data": {
                      "id": "56a42244-414a-4b52-8c4f-4ad2a50e82fe",
                      "deleteStatus": "SUCCESS",
                      "institutionId": "modelo-sandbox",
                      "institutionConsentId": "aac-605d48f2-2a0e-4594-81a9-996524fa3b2a",
                      "creationDate": "2021-06-08T10:59:35.138Z"
                  }
              }
          },
          "consent-get-example-response": {
              "description": "Example Response",
              "value": {
                  "meta": {
                      "tracingId": "679e7bb6cd45416a9a9a8d004c5315da"
                  },
                  "data": {
                      "id": "56a42244-414a-4b52-8c4f-4ad2a50e82fe",
                      "userUuid": "ca412fdf-5a30-43a2-88b7-5964a24a8e55",
                      "applicationUserId": "string",
                      "institutionId": "modelo-sandbox",
                      "status": "AUTHORIZED",
                      "createdAt": "2021-06-08T10:59:35.138Z",
                      "featureScope": [
                          "ACCOUNT_BENEFICIARIES",
                          "ACCOUNT_STATEMENT_FILE",
                          "ACCOUNTS",
                          "ACCOUNT_PERIODIC_PAYMENTS",
                          "ACCOUNT_TRANSACTIONS",
                          "ACCOUNT",
                          "ACCOUNT_STATEMENTS",
                          "ACCOUNT_SCHEDULED_PAYMENTS",
                          "IDENTITY",
                          "ACCOUNT_DIRECT_DEBITS",
                          "ACCOUNT_STATEMENT",
                          "ACCOUNT_BALANCES",
                          "ACCOUNT_TRANSACTIONS_WITH_MERCHANT"
                      ],
                      "consentToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJJTlNUSVRVVElPTiI6Im1vZGVsby1zYW5kYm94IiwiQ09OU0VOVCI6IjU2YTQyMjQ0LTQxNGEtNGI1Mi04YzRmLTRhZDJhNTBlODJmZSIsIkFQUExJQ0FUSU9OX1VTRVJfSUQiOiJtb2ZlLTIiLCJVU0VSIjoiY2E0MTJmZGYtNWEzMC00M2EyLTg4YjctNTk2NGEyNGE4ZTU1In0.gorwpnUjSr5dzQJLR32M2geWOj7yK9xMsZmq27ssY9xP_xGmWfUL_aqVHYyQ4r5KWw6Xb6RjvO839st8chJLtg",
                      "state": "a09f8ff9c1284444aa635267e05f76e1",
                      "authorizedAt": "2021-06-08T10:59:53.288Z",
                      "lastConfirmedAt": "2021-07-08T10:59:53.288Z",
                      "reconfirmBy": "2021-10-06T10:59:53.288Z",
                      "institutionConsentId": "aac-605d48f2-2a0e-4594-81a9-996524fa3b2a"
                  }
              }
          },
          "consent-extend-example-request": {
              "description": "Extend Consent Example Request",
              "value": {
                  "lastConfirmedAt": "2021-07-08T10:59:53.288Z"
              }
          },
          "features-example-response": {
              "description": "Example Response",
              "value": {
                  "meta": {
                      "tracingId": "b39dc53cf01847098b13f22c559228dd",
                      "count": 52
                  },
                  "data": [
                      {
                          "feature": "ACCOUNT",
                          "endpoint": "https://api.yapily.com/account/{account-id}",
                          "documentationUrl": "https://docs.yapily.com/#757fde49-a294-bbff-d5f9-2c21c5f57be0"
                      },
                      {
                          "feature": "ACCOUNTS",
                          "endpoint": "https://api.yapily.com/accounts",
                          "documentationUrl": "https://docs.yapily.com/#23faf44e-1093-c676-63ea-369e41ea902d"
                      },
                      {
                          "feature": "ACCOUNTS_WITHOUT_BALANCE",
                          "endpoint": "https://api.yapily.com/account-auth-requests",
                          "documentationUrl": "https://docs.yapily.com"
                      },
                      {
                          "feature": "ACCOUNT_BALANCES",
                          "endpoint": "https://api.yapily.com/account/{account-id}/balances",
                          "documentationUrl": "https://docs.yapily.com"
                      },
                      {
                          "feature": "ACCOUNT_BENEFICIARIES",
                          "endpoint": "https://api.yapily.com/accounts/{accountId}/beneficiaries",
                          "documentationUrl": "https://docs.yapily.com"
                      },
                      {
                          "feature": "ACCOUNT_DIRECT_DEBITS",
                          "endpoint": "https://api.yapily.com/account/{accountId}/direct-debits",
                          "documentationUrl": "https://docs.yapily.com/#a5affc0a-c9cf-4203-b126-4a1bdcb7700a"
                      },
                      {
                          "feature": "ACCOUNT_PERIODIC_PAYMENTS",
                          "endpoint": "https://api.yapily.com/account/{accountId}/periodic-payments",
                          "documentationUrl": "https://docs.yapily.com/#98e43700-e9c7-4598-b337-42e86b099216"
                      },
                      {
                          "feature": "ACCOUNT_REQUEST_DETAILS",
                          "endpoint": "https://api.yapily.com/account-request/{authRequestId}",
                          "documentationUrl": "https://docs.yapily.com/#c8da0a20-6cb9-4282-aba5-4c66113eb70b"
                      },
                      {
                          "feature": "ACCOUNT_SCHEDULED_PAYMENTS",
                          "endpoint": "https://api.yapily.com/account/{accountId}/scheduled-payments",
                          "documentationUrl": "https://docs.yapily.com/#7eadb71e-d715-4c3f-927d-626c9e3a1303"
                      },
                      {
                          "feature": "ACCOUNT_STATEMENT",
                          "endpoint": "https://api.yapily.com/account/{accountId}/statements/{statementId}",
                          "documentationUrl": "https://docs.yapily.com/?version=latest#29101d1e-2c52-4d36-900a-18435dca75e0"
                      },
                      {
                          "feature": "ACCOUNT_STATEMENTS",
                          "endpoint": "https://api.yapily.com/account/{accountId}/statements",
                          "documentationUrl": "https://docs.yapily.com/#7358d865-3cf3-17da-cf0f-84a1af3b545f"
                      },
                      {
                          "feature": "ACCOUNT_STATEMENT_FILE",
                          "endpoint": "https://api.yapily.com/account/{accountId}/statements/{statementId}/file",
                          "documentationUrl": "https://docs.yapily.com/#3987b1e1-6b9c-4770-96de-fa85e2025d48"
                      },
                      {
                          "feature": "ACCOUNT_TRANSACTIONS",
                          "endpoint": "https://api.yapily.com/account/{account-id}/transactions",
                          "documentationUrl": "https://docs.yapily.com/#7358d865-3cf3-17da-cf0f-84a1af3b545f"
                      },
                      {
                          "feature": "ACCOUNT_TRANSACTIONS_WITH_MERCHANT",
                          "endpoint": "https://api.yapily.com/accounts/{accountId}/transactions",
                          "documentationUrl": "https://docs.yapily.com/#7358d865-3cf3-17da-cf0f-84a1af3b545f"
                      },
                      {
                          "feature": "ACCOUNT_WITHOUT_BALANCE",
                          "endpoint": "https://api.yapily.com/account/{account-id}",
                          "documentationUrl": "https://docs.yapily.com"
                      },
                      {
                          "feature": "CREATE_BULK_PAYMENT",
                          "endpoint": "https://api.yapily.com/bulk-payments",
                          "documentationUrl": "https://docs.yapily.com"
                      },
                      {
                          "feature": "CREATE_DOMESTIC_PERIODIC_PAYMENT",
                          "endpoint": "https://api.yapily.com/payments",
                          "documentationUrl": "https://docs.yapily.com"
                      },
                      {
                          "feature": "CREATE_DOMESTIC_SCHEDULED_PAYMENT",
                          "endpoint": "https://api.yapily.com/payments",
                          "documentationUrl": "https://docs.yapily.com/#1fd6bf92-7333-4b46-be2c-1a92a3c72b1c"
                      },
                      {
                          "feature": "CREATE_DOMESTIC_SINGLE_INSTANT_PAYMENT",
                          "endpoint": "https://api.yapily.com/payments",
                          "documentationUrl": "https://docs.yapily.com"
                      },
                      {
                          "feature": "CREATE_DOMESTIC_SINGLE_PAYMENT",
                          "endpoint": "https://api.yapily.com/payments",
                          "documentationUrl": "https://docs.yapily.com/#4521aa4d-75c2-4c22-9629-acb96c14e4e6"
                      },
                      {
                          "feature": "CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT",
                          "endpoint": "https://api.yapily.com/payments",
                          "documentationUrl": "https://docs.yapily.com/#1fd6bf92-7333-4b46-be2c-1a92a3c72b1c"
                      },
                      {
                          "feature": "CREATE_INTERNATIONAL_PERIODIC_PAYMENT",
                          "endpoint": "https://api.yapily.com/payments",
                          "documentationUrl": "https://docs.yapily.com"
                      },
                      {
                          "feature": "CREATE_INTERNATIONAL_SCHEDULED_PAYMENT",
                          "endpoint": "https://api.yapily.com/payments",
                          "documentationUrl": "https://docs.yapily.com"
                      },
                      {
                          "feature": "CREATE_INTERNATIONAL_SINGLE_PAYMENT",
                          "endpoint": "https://api.yapily.com/payments",
                          "documentationUrl": "https://docs.yapily.com"
                      },
                      {
                          "feature": "CREATE_SINGLE_PAYMENT_SORTCODE",
                          "endpoint": "https://api.yapily.com/payment-sortcode",
                          "documentationUrl": "https://docs.yapily.com/#4521aa4d-75c2-4c22-9629-acb96c14e4e6"
                      },
                      {
                          "feature": "EXISTING_PAYMENTS_DETAILS",
                          "endpoint": "https://api.yapily.com/payments/{payment-id}",
                          "documentationUrl": "https://docs.yapily.com/#2e1a151e-59a7-4fa1-bd5b-5f6a0c4bf4cd"
                      },
                      {
                          "feature": "EXISTING_PAYMENT_INITIATION_DETAILS",
                          "endpoint": "https://api.yapily.com/payment-initiations/{paymentId}",
                          "documentationUrl": "https://docs.yapily.com/#c8da0a20-6cb9-4282-aba5-4c66113eb70b"
                      },
                      {
                          "feature": "IDENTITY",
                          "endpoint": "https://api.yapily.com/identity",
                          "documentationUrl": "https://docs.yapily.com/#8c62ef0f-0cfa-98e6-6b0b-cb2441eb2d51"
                      },
                      {
                          "feature": "INITIATE_ACCOUNT_REQUEST",
                          "endpoint": "https://api.yapily.com/account-auth-requests",
                          "documentationUrl": "https://docs.yapily.com/#c8da0a20-6cb9-4282-aba5-4c66113eb70b"
                      },
                      {
                          "feature": "INITIATE_BULK_PAYMENT",
                          "endpoint": "https://api.yapily.com/bulk-payment-auth-requests",
                          "documentationUrl": "https://docs.yapily.com"
                      },
                      {
                          "feature": "INITIATE_DOMESTIC_PERIODIC_PAYMENT",
                          "endpoint": "https://api.yapily.com/payment-auth-requests",
                          "documentationUrl": "https://docs.yapily.com"
                      },
                      {
                          "feature": "INITIATE_DOMESTIC_SCHEDULED_PAYMENT",
                          "endpoint": "https://api.yapily.com/payment-auth-requests",
                          "documentationUrl": "https://docs.yapily.com#8e67c40c-4b0e-4f72-947c-065f1c84f46b"
                      },
                      {
                          "feature": "INITIATE_DOMESTIC_SINGLE_INSTANT_PAYMENT",
                          "endpoint": "https://api.yapily.com/payment-auth-requests",
                          "documentationUrl": "https://docs.yapily.com"
                      },
                      {
                          "feature": "INITIATE_DOMESTIC_SINGLE_PAYMENT",
                          "endpoint": "https://api.yapily.com/payment-auth-requests",
                          "documentationUrl": "https://docs.yapily.com/#c8da0a20-6cb9-4282-aba5-4c66113eb70b"
                      },
                      {
                          "feature": "INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT",
                          "endpoint": "https://api.yapily.com/payment-auth-requests",
                          "documentationUrl": "https://docs.yapily.com/#8e67c40c-4b0e-4f72-947c-065f1c84f46b"
                      },
                      {
                          "feature": "INITIATE_EMBEDDED_ACCOUNT_REQUEST",
                          "endpoint": "https://api.yapily.com/embedded-account-auth-requests",
                          "documentationUrl": "https://docs.yapily.com"
                      },
                      {
                          "feature": "INITIATE_EMBEDDED_DOMESTIC_SINGLE_PAYMENT",
                          "endpoint": "https://api.yapily.com/embedded-payment-auth-requests",
                          "documentationUrl": "https://docs.yapily.com"
                      },
                      {
                          "feature": "INITIATE_EMBEDDED_BULK_PAYMENT",
                          "endpoint": "https://api.yapily.com/embedded-payment-auth-requests",
                          "documentationUrl": "https://docs.yapily.com/"
                      },
                      {
                          "feature": "INITIATE_INTERNATIONAL_PERIODIC_PAYMENT",
                          "endpoint": "https://api.yapily.com/payment-auth-requests",
                          "documentationUrl": "https://docs.yapily.com"
                      },
                      {
                          "feature": "INITIATE_INTERNATIONAL_SCHEDULED_PAYMENT",
                          "endpoint": "https://api.yapily.com/payment-auth-requests",
                          "documentationUrl": "https://docs.yapily.com"
                      },
                      {
                          "feature": "INITIATE_INTERNATIONAL_SINGLE_PAYMENT",
                          "endpoint": "https://api.yapily.com/payment-auth-requests",
                          "documentationUrl": "https://docs.yapily.com"
                      },
                      {
                          "feature": "INITIATE_PRE_AUTHORISATION",
                          "endpoint": "https://api.yapily.com/pre-auth-requests",
                          "documentationUrl": "https://docs.yapily.com"
                      },
                      {
                          "feature": "INITIATE_SINGLE_PAYMENT_SORTCODE",
                          "endpoint": "https://api.yapily.com/payment-sortcode-auth-requests",
                          "documentationUrl": "https://docs.yapily.com/#c8da0a20-6cb9-4282-aba5-4c66113eb70b"
                      },
                      {
                          "feature": "OPEN_DATA_ATMS",
                          "endpoint": "https://api.yapily.com/institutions/{institution-id}/atms",
                          "documentationUrl": "https://docs.yapily.com/#f5d271e1-8375-4a4a-a446-6ab9fd823f79"
                      },
                      {
                          "feature": "OPEN_DATA_PERSONAL_CURRENT_ACCOUNTS",
                          "endpoint": "https://api.yapily.com/institutions/{institution-id}/personal-current-accounts",
                          "documentationUrl": "https://docs.yapily.com/#6af35149-9db9-4eb4-862f-93187c64cbcd"
                      },
                      {
                          "feature": "PERIODIC_PAYMENT_FREQUENCY_EXTENDED",
                          "endpoint": "https://api.yapily.com/payments",
                          "documentationUrl": "https://docs.yapily.com"
                      },
                      {
                          "feature": "READ_DOMESTIC_PERIODIC_PAYMENT_REFUND",
                          "endpoint": "https://api.yapily.com/payment-auth-requests",
                          "documentationUrl": "https://docs.yapily.com"
                      },
                      {
                          "feature": "READ_DOMESTIC_SCHEDULED_REFUND",
                          "endpoint": "https://api.yapily.com/payment-auth-requests",
                          "documentationUrl": "https://docs.yapily.com"
                      },
                      {
                          "feature": "READ_DOMESTIC_SINGLE_REFUND",
                          "endpoint": "https://api.yapily.com/payment-auth-requests",
                          "documentationUrl": "https://docs.yapily.com"
                      },
                      {
                          "feature": "READ_INTERNATIONAL_SCHEDULED_REFUND",
                          "endpoint": "https://api.yapily.com/payment-auth-requests",
                          "documentationUrl": "https://docs.yapily.com"
                      },
                      {
                          "feature": "READ_INTERNATIONAL_SINGLE_REFUND",
                          "endpoint": "https://api.yapily.com/payment-auth-requests",
                          "documentationUrl": "https://docs.yapily.com"
                      },
                      {
                          "feature": "TRANSFER",
                          "endpoint": "https://api.yapily.com/accounts/{accountId}/transfer",
                          "documentationUrl": "https://docs.yapily.com/#c8da0a20-6cb9-4282-aba5-4c66113eb70b"
                      }
                  ]
              }
          },
          "identity-example-response": {
              "description": "Example Response",
              "value": {
                  "meta": {
                      "tracingId": "e4de605bd760459aa7f82aa81856ec1e"
                  },
                  "data": {
                      "id": "700001000000000000000002",
                      "fullName": "Mitsuhirato",
                      "email": "mits@suntori.com",
                      "phone": "+22-8937484901",
                      "addresses": [
                          {
                              "addressLines": [],
                              "city": "Hichikanzo",
                              "postalCode": "JP102",
                              "country": "TA"
                          },
                          {
                              "addressLines": [],
                              "city": "St Albans",
                              "postalCode": "AL1 3SF",
                              "country": "GB"
                          }
                      ]
                  }
              }
          },
          "institutions-example-response": {
              "description": "Example Response",
              "value": {
                  "meta": {
                      "tracingId": "1304b771e4e34f67b39977bde6b1a8e2",
                      "count": 1
                  },
                  "data": [
                      {
                          "id": "modelo-sandbox",
                          "name": "Modelo Sandbox",
                          "fullName": "Modelo Sandbox",
                          "countries": [
                              {
                                  "displayName": "United Kingdom",
                                  "countryCode2": "GB"
                              }
                          ],
                          "environmentType": "SANDBOX",
                          "credentialsType": "OPEN_BANKING_UK_AUTO",
                          "media": [
                              {
                                  "source": "https://images.yapily.com/image/ce2bfdbf-1ae2-4919-ab7b-e8b3d5e93b36?size=0",
                                  "type": "icon"
                              },
                              {
                                  "source": "https://images.yapily.com/image/ca502f24-d6df-4785-b4b8-1034b100af77?size=0",
                                  "type": "logo"
                              }
                          ],
                          "features": [
                              "ACCOUNT_BALANCES",
                              "INITIATE_BULK_PAYMENT",
                              "ACCOUNT_BENEFICIARIES",
                              "ACCOUNT_SCHEDULED_PAYMENTS",
                              "EXISTING_PAYMENTS_DETAILS",
                              "ACCOUNT_TRANSACTIONS",
                              "ACCOUNT_STATEMENTS",
                              "INITIATE_DOMESTIC_PERIODIC_PAYMENT",
                              "INITIATE_ACCOUNT_REQUEST",
                              "IDENTITY",
                              "ACCOUNT_PERIODIC_PAYMENTS",
                              "ACCOUNT_REQUEST_DETAILS",
                              "ACCOUNT_TRANSACTIONS_WITH_MERCHANT",
                              "INITIATE_SINGLE_PAYMENT_SORTCODE",
                              "INITIATE_DOMESTIC_SINGLE_PAYMENT",
                              "INITIATE_DOMESTIC_SCHEDULED_PAYMENT",
                              "ACCOUNT_STATEMENT",
                              "CREATE_DOMESTIC_SINGLE_PAYMENT",
                              "ACCOUNT_STATEMENT_FILE",
                              "CREATE_DOMESTIC_PERIODIC_PAYMENT",
                              "CREATE_DOMESTIC_SCHEDULED_PAYMENT",
                              "EXISTING_PAYMENT_INITIATION_DETAILS",
                              "INITIATE_INTERNATIONAL_SINGLE_PAYMENT",
                              "CREATE_SINGLE_PAYMENT_SORTCODE",
                              "CREATE_BULK_PAYMENT",
                              "CREATE_INTERNATIONAL_SINGLE_PAYMENT",
                              "ACCOUNT",
                              "PERIODIC_PAYMENT_FREQUENCY_EXTENDED",
                              "ACCOUNT_DIRECT_DEBITS",
                              "ACCOUNTS"
                          ]
                      }
                  ]
              }
          },
          "institution-example-response": {
              "description": "Example Response",
              "value": {
                  "id": "modelo-sandbox",
                  "name": "Modelo Sandbox",
                  "fullName": "Modelo Sandbox",
                  "countries": [
                      {
                          "displayName": "United Kingdom",
                          "countryCode2": "GB"
                      }
                  ],
                  "environmentType": "SANDBOX",
                  "credentialsType": "OPEN_BANKING_UK_AUTO",
                  "media": [
                      {
                          "source": "https://images.yapily.com/image/ce2bfdbf-1ae2-4919-ab7b-e8b3d5e93b36?size=0",
                          "type": "icon"
                      },
                      {
                          "source": "https://images.yapily.com/image/ca502f24-d6df-4785-b4b8-1034b100af77?size=0",
                          "type": "logo"
                      }
                  ],
                  "features": [
                      "ACCOUNT_BALANCES",
                      "INITIATE_BULK_PAYMENT",
                      "ACCOUNT_BENEFICIARIES",
                      "ACCOUNT_SCHEDULED_PAYMENTS",
                      "EXISTING_PAYMENTS_DETAILS",
                      "ACCOUNT_TRANSACTIONS",
                      "ACCOUNT_STATEMENTS",
                      "INITIATE_DOMESTIC_PERIODIC_PAYMENT",
                      "INITIATE_ACCOUNT_REQUEST",
                      "IDENTITY",
                      "ACCOUNT_PERIODIC_PAYMENTS",
                      "ACCOUNT_REQUEST_DETAILS",
                      "ACCOUNT_TRANSACTIONS_WITH_MERCHANT",
                      "INITIATE_SINGLE_PAYMENT_SORTCODE",
                      "INITIATE_DOMESTIC_SINGLE_PAYMENT",
                      "INITIATE_DOMESTIC_SCHEDULED_PAYMENT",
                      "ACCOUNT_STATEMENT",
                      "CREATE_DOMESTIC_SINGLE_PAYMENT",
                      "ACCOUNT_STATEMENT_FILE",
                      "CREATE_DOMESTIC_PERIODIC_PAYMENT",
                      "CREATE_DOMESTIC_SCHEDULED_PAYMENT",
                      "EXISTING_PAYMENT_INITIATION_DETAILS",
                      "INITIATE_INTERNATIONAL_SINGLE_PAYMENT",
                      "CREATE_SINGLE_PAYMENT_SORTCODE",
                      "CREATE_BULK_PAYMENT",
                      "CREATE_INTERNATIONAL_SINGLE_PAYMENT",
                      "ACCOUNT",
                      "PERIODIC_PAYMENT_FREQUENCY_EXTENDED",
                      "ACCOUNT_DIRECT_DEBITS",
                      "ACCOUNTS"
                  ]
              }
          },
          "me-example-response": {
              "description": "Example Response",
              "value": {
                  "uuid": "64949de6-6510-4d70-9500-d4aa094c506c",
                  "name": "APPLICATION NAME",
                  "active": true,
                  "authCallbacks": [
                      "https://display-parameters.com/"
                  ],
                  "institutions": [
                      {
                          "id": "modelo-sandbox",
                          "name": "Modelo Sandbox",
                          "fullName": "Modelo Sandbox",
                          "countries": [
                              {
                                  "displayName": "United Kingdom",
                                  "countryCode2": "GB"
                              }
                          ],
                          "environmentType": "SANDBOX",
                          "credentialsType": "OPEN_BANKING_UK_AUTO",
                          "media": [
                              {
                                  "source": "https://images.yapily.com/image/ce2bfdbf-1ae2-4919-ab7b-e8b3d5e93b36?size=0",
                                  "type": "icon"
                              },
                              {
                                  "source": "https://images.yapily.com/image/ca502f24-d6df-4785-b4b8-1034b100af77?size=0",
                                  "type": "logo"
                              }
                          ],
                          "features": [
                              "INITIATE_SINGLE_PAYMENT_SORTCODE",
                              "CREATE_DOMESTIC_PERIODIC_PAYMENT",
                              "ACCOUNT_REQUEST_DETAILS",
                              "ACCOUNT_STATEMENT_FILE",
                              "CREATE_SINGLE_PAYMENT_SORTCODE",
                              "ACCOUNTS",
                              "CREATE_DOMESTIC_SCHEDULED_PAYMENT",
                              "ACCOUNT_PERIODIC_PAYMENTS",
                              "CREATE_DOMESTIC_SINGLE_PAYMENT",
                              "INITIATE_DOMESTIC_PERIODIC_PAYMENT",
                              "EXISTING_PAYMENTS_DETAILS",
                              "INITIATE_BULK_PAYMENT",
                              "EXISTING_PAYMENT_INITIATION_DETAILS",
                              "ACCOUNT_DIRECT_DEBITS",
                              "ACCOUNT_TRANSACTIONS",
                              "INITIATE_DOMESTIC_SINGLE_PAYMENT",
                              "PERIODIC_PAYMENT_FREQUENCY_EXTENDED",
                              "CREATE_INTERNATIONAL_SINGLE_PAYMENT",
                              "ACCOUNT_SCHEDULED_PAYMENTS",
                              "ACCOUNT",
                              "ACCOUNT_STATEMENTS",
                              "ACCOUNT_TRANSACTIONS_WITH_MERCHANT",
                              "CREATE_BULK_PAYMENT",
                              "ACCOUNT_BALANCES",
                              "INITIATE_INTERNATIONAL_SINGLE_PAYMENT",
                              "INITIATE_DOMESTIC_SCHEDULED_PAYMENT",
                              "ACCOUNT_BENEFICIARIES",
                              "IDENTITY",
                              "ACCOUNT_STATEMENT",
                              "INITIATE_ACCOUNT_REQUEST"
                          ]
                      }
                  ],
                  "media": [],
                  "created": "2020-11-09T10:05:29.897+0000",
                  "updated": "2021-04-14T12:51:07.419+0000"
              }
          },
          "create-user-example-request": {
              "description": "Create User Example Request",
              "value": {
                  "applicationUserId": "string"
              }
          },
          "users_example-response": {
              "description": "Example Response",
              "value": [
                  {
                      "uuid": "3b908179-6faa-42e1-8129-8fd0ff1fc68f",
                      "applicationUuid": "3020bf54-e254-40ba-ba7b-fc959774486a",
                      "applicationUserId": "string",
                      "createdAt": "2022-10-17T08:51:02.463Z",
                      "institutionConsents": [
                          {
                              "institutionId": "modelo-sandbox"
                          }
                      ]
                  },
                  {
                      "uuid": "be7dd6fa-1236-41b6-a7a1-5d7863ab9553",
                      "applicationUuid": "3020bf54-e254-40ba-ba7b-fc959774486a",
                      "referenceId": "hollyhock@9tees.com",
                      "createdAt": "2022-10-17T08:51:02.464Z",
                      "institutionConsents": [
                          {
                              "institutionId": "mock-sandbox"
                          }
                      ]
                  },
                  {
                      "uuid": "deb9aac1-b0bc-4f40-9c0b-6a675cf6646f",
                      "applicationUuid": "3020bf54-e254-40ba-ba7b-fc959774486a",
                      "referenceId": "beatrice@9tees.com",
                      "createdAt": "2022-10-17T08:51:02.466Z",
                      "institutionConsents": [
                          {
                              "institutionId": "yapily-mock"
                          }
                      ]
                  }
              ]
          },
          "create-user_example-response": {
              "description": "Example Response",
              "value": {
                  "uuid": "1ec8e814-085e-46ad-a303-3fe11808f67e",
                  "applicationUuid": "50935110-c7df-4003-a06a-1cc5fd4643c9",
                  "applicationUserId": "string",
                  "createdAt": "2022-10-17T08:51:02.463Z",
                  "institutionConsents": []
              }
          },
          "delete-user_example-response": {
              "description": "Example Response",
              "value": {
                  "meta": {
                      "tracingId": "e6625041a9fb46e2a450b3f9f1528cb8"
                  },
                  "data": {
                      "id": "b8ebe390-f6fb-45b5-bf20-1b4436644390",
                      "deleteStatus": "SUCCESS",
                      "creationDate": "2021-06-07T16:44:52.221Z",
                      "userConsents": [
                          {
                              "institutionId": "modelo-sandbox"
                          }
                      ]
                  }
              }
          },
          "user_example-response": {
              "description": "Example Response",
              "value": {
                  "uuid": "3b908179-6faa-42e1-8129-8fd0ff1fc68f",
                  "applicationUuid": "3020bf54-e254-40ba-ba7b-fc959774486a",
                  "applicationUserId": "string",
                  "createdAt": "2022-10-17T08:51:02.463Z",
                  "institutionConsents": [
                      {
                          "institutionId": "modelo-sandbox"
                      }
                  ]
              }
          },
          "error-response-code-401": {
              "description": "Error Response",
              "value": {
                  "error": {
                      "code": 401,
                      "status": "UNAUTHORIZED",
                      "message": "Full authentication is required to access this resource"
                  }
              }
          },
          "extend-consent-error-response-code-400": {
              "description": "Error Response",
              "value": {
                  "error": {
                      "code": 400,
                      "status": "BAD_REQUEST",
                      "message": "lastConfirmedAt cannot be a future date and time"
                  }
              }
          },
          "create-hosted-consent-request": {
            "description": "Create Hosted Consent Request",
            "value": {
              "userId": "ca412fdf-5a30-43a2-88b7-5964a24a8e55",
              "applicationUserId": "string",
              "institutionIdentifiers": {
                "institutionId": "modelo-sandbox",
                "institutionCountryCode": "GB"
              },
              "userSettings": {
                "language": "en",
                "location": "GB"
              },
              "redirectUrl": "https://tpp-application.com/",
              "authorisationExpiresAt": "2021-06-10T11:36:54.887Z",
              "oneTimeToken": false,
              "accountRequest": {
                "transactionFrom": "2023-07-01T00:00:00.000Z",
                "transactionTo": "2023-08-01T00:00:00.000Z",
                "expiresAt": "2023-11-01T00:00:00.000Z",
                "featureScope": [
                  "ACCOUNTS",
                  "ACCOUNT",
                  "ACCOUNT_BALANCES",
                  "ACCOUNT_TRANSACTIONS",
                  "IDENTITY"
                ]
              }
            }
          },
          "create-hosted-consent-response": {
            "description": "Create Hosted Consent Response",
            "value": {
              "meta": {
                "tracingId": "2dbfd85b4f2940c6a206e96dd90e52d0"
              },
              "data": {
                "consentRequestId": "507e515f-c22d-4bab-9801-606c94e7f749",
                "userId": "3ddf5dd0-aa48-4d0f-baa7-fa057e9e911d",
                "applicationUserId": "string",
                "applicationId": "64949de6-6510-4d70-9500-d4aa094c506c",
                "institutionIdentifiers": {
                  "institutionId": "modelo-sandbox",
                  "institutionCountryCode": "GB"
                },
                "userSettings": {
                  "language": "en",
                  "location": "GB"
                },
                "redirectUrl": "https://tpp-application.com/",
                "accountRequestDetails": {
                  "featureScope": [
                    "ACCOUNTS",
                    "ACCOUNT",
                    "ACCOUNT_BALANCES",
                    "ACCOUNT_TRANSACTIONS",
                    "IDENTITY"
                  ]
                },
                "hostedUrl": "https://prototypes.yapily.com/auth-link1.html",
                "createdAt": "2024-09-13T11:14:04.766Z",
                "authorisationExpiresAt": "2024-09-13T11:24:04.000Z"
              }
            }
          },
          "create-hosted-payment-request": {
              "description": "Create Hosted payment request",
              "value": {
                  "userId": "3ddf5dd0-aa48-4d0f-baa7-fa057e9e911d",
                  "applicationUserId": "string",
                  "institutionIdentifiers": {
                      "institutionId": "modelo-sandbox",
                      "institutionCountryCode": "GB"
                  },
                  "userSettings": {
                      "language": "en",
                      "location": "GB"
                  },
                  "redirectUrl": "https://tpp-application.com/",
                  "paymentRequestDetails": {
                      "paymentIdempotencyId": "4289457hd38djoa783jw9qag3",
                      "amountDetails": {
              "amountToPay": 10.00,
                          "currency": "GBP"
                      },
                      "reference": "Test Payment",
                      "contextType": "OTHER",
                      "type": "DOMESTIC_PAYMENT",
                      "payee": {
                          "name": "Jane Doe",
                          "accountIdentifications": [
                              {
                                  "type": "SORT_CODE",
                                  "identification": "123456"
                              },
                              {
                                  "type": "ACCOUNT_NUMBER",
                                  "identification": "12345678"
                              }
                          ]
                      },
                      "payer": {
                          "name": "John Doe",
                          "accountIdentifications": [
                              {
                                  "type": "SORT_CODE",
                                  "identification": "121212"
                              },
                              {
                                  "type": "ACCOUNT_NUMBER",
                                  "identification": "87654321"
                              }
                          ]
                      }
                  }
              }
          },
          "create-hosted-payment-request-response": {
              "description": "Create Hosted Payment Response",
              "value": {
                  "meta": {
                      "tracingId": "2dbfd85b4f2940c6a206e96dd90e52d0"
                  },
                  "data": {
                      "paymentRequestId": "eb39f8ae-aeff-4ffa-a23d-d4a5b3eff406",
                      "userId": "3ddf5dd0-aa48-4d0f-baa7-fa057e9e911d",
                      "applicationUserId": "string",
                      "applicationId": "64949de6-6510-4d70-9500-d4aa094c506c",
                      "institutionIdentifiers": {
                          "institutionId": "modelo-sandbox",
                          "institutionCountryCode": "GB"
                      },
                      "userSettings": {
                          "language": "en",
                          "location": "GB"
                      },
                      "redirectUrl": "https://tpp-application.com/",
                      "paymentRequestDetails": {
                          "paymentIdempotencyId": "4289457hd38djoa783jw9qag3",
                          "amountDetails": {
                "amountToPay": 1.00,
                              "currency": "GBP"
                          },
                          "reference": "Test Payment",
                          "contextType": "OTHER",
                          "type": "DOMESTIC_PAYMENT",
                          "payee": {
                              "name": "Jane Doe",
                              "accountIdentifications": [
                                  {
                                      "type": "SORT_CODE",
                                      "identification": "123456"
                                  },
                                  {
                                      "type": "ACCOUNT_NUMBER",
                                      "identification": "12345678"
                                  }
                              ]
                          },
                          "payer": {
                              "name": "John Doe",
                              "accountIdentifications": [
                                  {
                                      "type": "SORT_CODE",
                                      "identification": "121212"
                                  },
                                  {
                                      "type": "ACCOUNT_NUMBER",
                                      "identification": "87654321"
                                  }
                              ]
                          }
                      },
                      "hostedUrl": "https://prototypes.yapily.com/auth-link1.html",
                      "authToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                      "createdAt": "2021-06-10T11:26:54.887Z",
                      "authorisationExpiresAt": "2021-06-10T11:36:54.887Z",
                      "status": "ACTIVE"
                  }
              }
          },
          "create-hosted-payment-request-link": {
              "description": "Create Hosted payment request",
              "value": {
                  "userId": "3ddf5dd0-aa48-4d0f-baa7-fa057e9e911d",
                  "applicationUserId": "string",
                  "institutionIdentifiers": {
                      "institutionId": "modelo-sandbox",
                      "institutionCountryCode": "GB"
                  },
                  "userSettings": {
                      "language": "en",
                      "location": "GB"
                  },
                  "redirectUrl": "https://tpp-application.com/",
                  "paymentRequestDetails": {
                      "amountDetails": {
              "amountToPay": 1.00,
                          "currency": "GBP"
                      },
                      "reference": "Test Payment",
                      "contextType": "OTHER",
                      "type": "DOMESTIC_PAYMENT",
                      "payee": {
                          "name": "Jane Doe",
                          "accountIdentifications": [
                              {
                                  "type": "SORT_CODE",
                                  "identification": "123456"
                              },
                              {
                                  "type": "ACCOUNT_NUMBER",
                                  "identification": "12345678"
                              }
                          ]
                      },
                      "payer": {
                          "name": "John Doe",
                          "accountIdentifications": [
                              {
                                  "type": "SORT_CODE",
                                  "identification": "121212"
                              },
                              {
                                  "type": "ACCOUNT_NUMBER",
                                  "identification": "87654321"
                              }
                          ]
                      }
                  }
              }
          },
          "create-hosted-payment-request-link-response": {
              "description": "Create Hosted Payment Response",
              "value": {
                  "meta": {
                      "tracingId": "2dbfd85b4f2940c6a206e96dd90e52d0"
                  },
                  "data": {
                      "paymentRequestId": "eb39f8ae-aeff-4ffa-a23d-d4a5b3eff406",
                      "userId": "3ddf5dd0-aa48-4d0f-baa7-fa057e9e911d",
                      "applicationUserId": "string",
                      "applicationId": "64949de6-6510-4d70-9500-d4aa094c506c",
                      "institutionIdentifiers": {
                          "institutionId": "modelo-sandbox",
                          "institutionCountryCode": "GB"
                      },
                      "userSettings": {
                          "language": "en",
                          "location": "GB"
                      },
                      "redirectUrl": "https://tpp-application.com/",
                      "paymentRequestDetails": {
                          "amountDetails": {
                "amountToPay": 10.00,
                              "currency": "GBP"
                          },
                          "reference": "Test Payment",
                          "contextType": "OTHER",
                          "type": "DOMESTIC_PAYMENT",
                          "payee": {
                              "name": "Jane Doe",
                              "accountIdentifications": [
                                  {
                                      "type": "SORT_CODE",
                                      "identification": "123456"
                                  },
                                  {
                                      "type": "ACCOUNT_NUMBER",
                                      "identification": "12345678"
                                  }
                              ]
                          },
                          "payer": {
                              "name": "John Doe",
                              "accountIdentifications": [
                                  {
                                      "type": "SORT_CODE",
                                      "identification": "121212"
                                  },
                                  {
                                      "type": "ACCOUNT_NUMBER",
                                      "identification": "87654321"
                                  }
                              ]
                          }
                      },
                      "hostedUrl": "https://prototypes.yapily.com/auth-link1.html",
                      "authToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                      "createdAt": "2021-06-10T11:26:54.887Z",
                      "authorisationExpiresAt": "2021-06-10T11:36:54.887Z",
                      "status": "ACTIVE"
                  }
              }
          },
          "get-hosted-consent-response": {
            "description": "Get Hosted Consent Request Response",
            "value": {
              "meta": {
                "tracingId": "2dbfd85b4f2940c6a206e96dd90e52d0"
              },
              "data": {
                "consentRequestId": "507e515f-c22d-4bab-9801-606c94e7f749",
                "consentId": "b22a1fe6-1e91-45b3-8ba0-6fdb1708e7bd",
                "userId": "3ddf5dd0-aa48-4d0f-baa7-fa057e9e911d",
                "applicationUserId": "string",
                "applicationId": "64949de6-6510-4d70-9500-d4aa094c506c",
                "institutionIdentifiers": {
                  "institutionId": "modelo-sandbox",
                  "institutionCountryCode": "GB"
                },
                "userSettings": {
                  "language": "en",
                  "location": "GB"
                },
                "redirectUrl": "https://tpp-application.com/",
                "createdAt": "2024-09-13T11:14:04.766Z",
                "authorisationExpiresAt": "2024-10-10T11:36:54.887Z",
                "status": "AUTHORIZED",
                "phases": [
                  {
                    "phaseName": "INITIATED",
                    "phaseCreatedAt": "2024-09-11T16:19:59.707Z"
                  },
                  {
                    "phaseName": "INSTITUTION_SUBMITTED",
                    "phaseCreatedAt": "2024-09-11T16:20:19.097Z"
                  },
                  {
                    "phaseName": "AUTHORISATION_INITIATED",
                    "phaseCreatedAt": "2024-09-11T16:20:47.077Z"
                  },
                  {
                    "phaseName": "AUTHORISATION_CREATED",
                    "phaseCreatedAt": "2024-09-11T16:20:48.212Z"
                  },
                  {
                    "phaseName": "CONSENT_POLLING_STARTED",
                    "phaseCreatedAt": "2024-09-11T16:20:57.654Z"
                  },
                  {
                    "phaseName": "CONSENT_POLLING_ENDED",
                    "phaseCreatedAt": "2024-09-11T16:20:58.288Z"
                  },
                  {
                    "phaseName": "AUTHORISED",
                    "phaseCreatedAt": "2024-09-11T16:20:58.288Z"
                  },
                  {
                    "phaseName": "FINISHED",
                    "phaseCreatedAt": "2024-09-11T16:20:58.288Z"
                  }
                ],
                "consentToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJJTlNUSVRVVElPTiI6Im1vZGVsby1zYW5kYm94IiwiQ09OU0VOVCI6IjU2YTQyMjQ0LTQxNGEtNGI1Mi04YzRmLTRhZDJhNTBlODJmZSIsIkFQUExJQ0FUSU9OX1VTRVJfSUQiOiJtb2ZlLTIiLCJVU0VSIjoiY2E0MTJmZGYtNWEzMC00M2EyLTg4YjctNTk2NGEyNGE4ZTU1In0.gorwpnUjSr5dzQJLR32M2geWOj7yK9xMsZmq27ssY9xP_xGmWfUL_aqVHYyQ4r5KWw6Xb6RjvO839st8chJLtg"
              }
            }
          },
          "get-hosted-payment-request-response": {
              "description": "Get Hosted payment request Response",
              "value": {
                  "meta": {
                      "tracingId": "2dbfd85b4f2940c6a206e96dd90e52d0"
                  },
                  "data": {
                      "paymentRequestId": "eb39f8ae-aeff-4ffa-a23d-d4a5b3eff406",
                      "userId": "3ddf5dd0-aa48-4d0f-baa7-fa057e9e911d",
                      "applicationUserId": "string",
                      "applicationId": "64949de6-6510-4d70-9500-d4aa094c506c",
                      "institutionIdentifiers": {
                          "institutionId": "modelo-sandbox",
                          "institutionCountryCode": "GB"
                      },
                      "userSettings": {
                          "language": "en",
                          "location": "GB"
                      },
                      "redirectUrl": "https://tpp-application.com/",
                      "paymentRequestDetails": {
                          "amountDetails": {
                "amountToPay": 1.00,
                              "currency": "GBP"
                          },
                          "reference": "Test Payment",
                          "contextType": "OTHER",
                          "type": "DOMESTIC_PAYMENT",
                          "payee": {
                              "name": "Jane Doe",
                              "accountIdentifications": [
                                  {
                                      "type": "SORT_CODE",
                                      "identification": "123456"
                                  },
                                  {
                                      "type": "ACCOUNT_NUMBER",
                                      "identification": "12345678"
                                  }
                              ]
                          },
                          "payer": {
                              "name": "John Doe",
                              "accountIdentifications": [
                                  {
                                      "type": "SORT_CODE",
                                      "identification": "121212"
                                  },
                                  {
                                      "type": "ACCOUNT_NUMBER",
                                      "identification": "87654321"
                                  }
                              ]
                          }
                      },
                      "createdAt": "2021-06-10T11:26:54.887Z",
                      "authorisationExpiresAt": "2021-06-10T11:36:54.887Z",
                      "status": "ACTIVE",
                      "payments": [
                          {
                              "paymentId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                              "institutionIdentifiers": {
                                  "institutionId": "string",
                                  "institutionCountryCode": "GB"
                              },
                              "userIdentifiers": {
                                  "psuId": "string",
                                  "psuCorporateId": "string",
                                  "psuIpAddress": "string"
                              },
                              "phases": [
                                  {
                                      "phaseName": "INITIATED",
                                      "phaseCreatedAt": "2021-06-10T11:26:54.887Z"
                                  },
                                  {
                                      "phaseName": "INSTITUTION_SUBMITTED",
                                      "phaseCreatedAt": "2021-06-10T11:26:55.123Z"
                                  },
                                  {
                                      "phaseName": "INPUT_CAPTURED",
                                      "phaseCreatedAt": "2021-06-10T11:27:05.123Z"
                                  },
                                  {
                                      "phaseName": "VALIDATION_COMPLETED",
                                      "phaseCreatedAt": "2021-06-10T11:27:05.223Z"
                                  },
                                  {
                                      "phaseName": "AUTHORISATION_CREATED",
                                      "phaseCreatedAt": "2021-06-10T11:27:06.637Z"
                                  },
                                  {
                                      "phaseName": "AUTHORISED",
                                      "phaseCreatedAt": "2021-06-10T11:27:10.637Z"
                                  },
                                  {
                                      "phaseName": "SUBMITTED",
                                      "phaseCreatedAt": "2021-06-10T11:27:10.654Z"
                                  },
                                  {
                                      "phaseName": "ACCEPTED",
                                      "phaseCreatedAt": "2021-06-10T11:27:11.867Z"
                                  },
                                  {
                                      "phaseName": "SETTLEMENT_COMPLETED",
                                      "phaseCreatedAt": "2021-06-10T11:27:13.887Z"
                                  }
                              ],
                            "paymentStatus": "COMPLETED",
                            "statusDetails": [
                              {
                                "status": "PENDING",
                                "statusUpdateDate": "2021-06-10T11:27:11.867Z",
                                "isoStatus": {
                                  "code": "PDNG",
                                  "name": "Pending"
                                }
                              },
                              {
                                "status": "COMPLETED",
                                "statusUpdateDate": "2021-06-10T11:27:13.887Z",
                                "isoStatus": {
                                  "code": "ACSC",
                                  "name": "AcceptedSettlementCompleted"
                                }
                              }
                            ],
                              "institutionPaymentId": "string",
                              "paymentLifecycleId": "string",
                              "paymentIdempotencyId": "04ab4536gaerfc0e1f93c4f4",
                              "reference": "Bill payment",
                              "contextType": "OTHER",
                              "type": "DOMESTIC_PAYMENT",
                              "payee": {
                                  "name": "Jane Doe",
                                  "accountIdentifications": [
                                      {
                                          "identification": "401016",
                                          "type": "SORT_CODE"
                                      },
                                      {
                                          "identification": "71518920",
                                          "type": "ACCOUNT_NUMBER"
                                      }
                                  ],
                                  "address": {
                                      "country": "GB"
                                  },
                                  "merchantId": "24589303",
                                  "merchantCategoryCode": "5551"
                              },
                              "payer": {
                                  "name": "John Doe",
                                  "accountIdentifications": [
                                      {
                                          "type": "SORT_CODE",
                                          "identification": "401016"
                                      }
                                  ],
                                  "address": {
                                      "country": "GB"
                                  }
                              },
                              "amount": {
                                  "amount": 10,
                                  "currency": "GBP"
                              }
                          }
                      ]
                  }
              }
          },
          "create-hosted-vrp-consent-request": {
              "description": "Create Hosted VRP Consent Request",
              "value": {
                  "applicationUserId": "45cf7ffe-6350-11ee-8c99-0242ac120002",
                  "institutionIdentifiers": {
                      "institutionId": "modelo-sandbox",
                      "institutionCountryCode": "GB"
                  },
                  "userSettings": {
                      "language": "en",
                      "location": "GB"
                  },
                  "redirectUrl": "https://tpp-application.com",
                  "vrpSetup": {
                      "payee": {
                          "name": "Merchant Doe",
                          "accountIdentifications": [
                              {
                                  "identification": "401016",
                                  "type": "SORT_CODE"
                              },
                              {
                                  "identification": "71518920",
                                  "type": "ACCOUNT_NUMBER"
                              }
                          ]
                      },
                      "reference": "Test Payment",
                      "limits": {
                          "periodicLimits": [
                              {
                                  "maxAmount": {
                                      "amount": 100,
                                      "currency": "GBP"
                                  },
                                  "frequency": "MONTHLY",
                                  "alignment": "CALENDAR"
                              }
                          ],
                          "maxAmountPerPayment": {
                              "amount": 10,
                              "currency": "GBP"
                          }
                      },
                      "validFrom": "2023-10-04T16:41:17.870Z",
                      "validTo": "2024-10-04T16:41:17.870Z",
                      "recurringPaymentCategory": "ONGOING",
                      "risk": {
                          "contextType": "ECOMMERCE_MERCHANT"
                      }
                  }
              }
          },
          "create-hosted-vrp-consent-response": {
              "description": "Create Hosted VRP Consent Response",
              "value": {
                  "meta": {
                      "tracingId": "2dbfd85b4f2940c6a206e96dd90e52d0"
                  },
                  "data": {
                      "id": "ad4bfe58-6352-11ee-8c99-0242ac120002",
                      "applicationUserId": "45cf7ffe-6350-11ee-8c99-0242ac120002",
                      "applicationId": "ea4cdf01ee-278f-4e3e-8b30-695515aa4cdf01d64",
                      "institutionIdentifiers": {
                          "institutionId": "modelo-sandbox",
                          "institutionCountryCode": "GB"
                      },
                      "userSettings": {
                          "language": "en",
                          "location": "GB"
                      },
                      "redirectUrl": "https://tpp-application.com",
                      "vrpSetup": {
                          "payee": {
                              "name": "Merchant Doe",
                              "accountIdentifications": [
                                  {
                                      "identification": "401016",
                                      "type": "SORT_CODE"
                                  },
                                  {
                                      "identification": "71518920",
                                      "type": "ACCOUNT_NUMBER"
                                  }
                              ]
                          },
                          "reference": "Test Payment",
                          "limits": {
                              "periodicLimits": [
                                  {
                                      "maxAmount": {
                                          "amount": 100,
                                          "currency": "GBP"
                                      },
                                      "frequency": "MONTHLY",
                                      "alignment": "CALENDAR"
                                  }
                              ],
                              "maxAmountPerPayment": {
                                  "amount": 10,
                                  "currency": "GBP"
                              }
                          },
                          "validFrom": "2023-10-04T16:41:17.870Z",
                          "validTo": "2024-10-04T16:41:17.870Z",
                          "risk": {
                              "contextType": "ECOMMERCE_MERCHANT"
                          }
                      },
                      "hostedUrl": "https://payments.yapily.com/vrp?authToken=eyJra&applicationId=e5515aee-278f-4e3e-8b30-69a4cdf01d64",
                      "authToken": "eyJraWQiOiIwNmViZTQ1Yy1OiJFUzI1NiJ9.eyJhdWQiOiJwcm9kdWN0aW9uIiwic3ViIjoiZTU1MTVhZWUtMjc4Zi00ZTNlLThiMzAtNjlhNGNkZjAxZDY0Iiwib3JnIjoiYTUwZmEwNWUtNWIwYy00MGIxLTk0NWUtOTcxM2JkOGQzODk4IiwiY29uc2VudFJlcXVlc3RJZCI6IjdkMmMzZjU5LTU3NDgtNDhlNS1hODdjLWVkZmRkODJiMzQxZCIsImlzcyI6Imhvc3RlZC12cjgwMDE2NCwiaWF0IjoxNzA2Nzk5NTY0LCJqdGkiOiJjMTFkNTBkNy0wMjkxLTRhNTktYmFhNy1jZDhhYWIzMmYzOWIifQ.xa38HzD6phhFiR069E9nMrzvQ9GCmNZMQ",
                      "createdAt": "2024-02-01T14:59:25.007193Z"
                  }
              }
          },
          "get-hosted-vrp-consent-response": {
              "description": "Get Hosted VRP Consent Response",
              "value": {
                  "meta": {
                      "tracingId": "2dbfd85b4f2940c6a206e96dd90e52d0"
                  },
                  "data": {
                      "id": "ad4bfe58-6352-11ee-8c99-0242ac120002",
                      "applicationUserId": "45cf7ffe-6350-11ee-8c99-0242ac120002",
                      "applicationId": "ea4cdf01ee-278f-4e3e-8b30-695515aa4cdf01d64",
                      "institutionIdentifiers": {
                          "institutionId": "modelo-sandbox",
                          "institutionCountryCode": "GB"
                      },
                      "userSettings": {
                          "language": "en",
                          "location": "GB"
                      },
                      "redirectUrl": "https://tpp-application.com",
                      "vrpSetup": {
                          "payer": {
                              "accountIdentifications": [
                                  {
                                      "type": "MASKED_ACCOUNT_NUMBER",
                                      "identification": "*****493"
                                  }
                              ]
                          },
                          "payee": {
                              "name": "Merchant Doe",
                              "accountIdentifications": [
                                  {
                                      "identification": "401016",
                                      "type": "SORT_CODE"
                                  },
                                  {
                                      "identification": "71518920",
                                      "type": "ACCOUNT_NUMBER"
                                  }
                              ]
                          },
                          "reference": "Test Payment",
                          "limits": {
                              "periodicLimits": [
                                  {
                                      "maxAmount": {
                                          "amount": 100,
                                          "currency": "GBP"
                                      },
                                      "frequency": "MONTHLY",
                                      "alignment": "CALENDAR"
                                  }
                              ],
                              "maxAmountPerPayment": {
                                  "amount": 10,
                                  "currency": "GBP"
                              }
                          },
                          "validFrom": "2023-10-04T16:41:17.870Z",
                          "validTo": "2024-10-04T16:41:17.870Z",
                          "recurringPaymentCategory": "ONGOING",
                          "risk": {
                              "contextType": "ECOMMERCE_MERCHANT"
                          }
                      },
                      "createdAt": "2023-10-05T07:56:44.552Z",
                      "authorisationExpiresAt": "2023-10-05T07:56:44.552Z",
                      "consentStatus": "AUTHORIZED",
                      "consentToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJJTlNUSVRVVElPTiI6Im1vZGVsby1zYW5kYm94IiwiQ09OU0VOVCI6IjU2YTQyMjQ0LTQxNGEtNGI1Mi04YzRmLTRhZDJhNTBlODJmZSIsIkFQUExJQ0FUSU9OX1VTRVJfSUQiOiJtb2ZlLTIiLCJVU0VSIjoiY2E0MTJmZGYtNWEzMC00M2EyLTg4YjctNTk2NGEyNGE4ZTU1In0.gorwpnUjSr5dzQJLR32M2geWOj7yK9xMsZmq27ssY9xP_xGmWfUL_aqVHYyQ4r5KWw6Xb6RjvO839st8chJLtg",
                      "phases": [
                          {
                              "phaseName": "INITIATED",
                              "phaseCreatedAt": "2023-05-10T07:56:54.887Z"
                          },
                          {
                              "phaseName": "INPUT_CAPTURED",
                              "phaseCreatedAt": "2023-05-10T07:57:05.123Z"
                          },
                          {
                              "phaseName": "VALIDATION_COMPLETED",
                              "phaseCreatedAt": "2023-05-10T07:57:05.223Z"
                          },
                          {
                              "phaseName": "AUTHORISATION_CREATED",
                              "phaseCreatedAt": "2023-05-10T07:57:06.637Z"
                          },
                          {
                              "phaseName": "AUTHORISED",
                              "phaseCreatedAt": "2023-05-10T07:57:10.637Z"
                          },
                          {
                              "phaseName": "SUBMITTED",
                              "phaseCreatedAt": "2023-05-10T07:57:10.654Z"
                          },
                          {
                              "phaseName": "ACCEPTED",
                              "phaseCreatedAt": "2023-05-10T07:57:11.867Z"
                          }
                      ]
                  }
              }
          },
          "get-hosted-vrp-consents-response": {
              "description": "Get Hosted VRP Consents Response",
              "value": {
                  "meta": {
                      "tracingId": "2dbfd85b4f2940c6a206e96dd90e52d0"
                  },
                  "data": [
                      {
                          "id": "ad4bfe58-6352-11ee-8c99-0242ac120002",
                          "applicationId": "45cf7ffe-6350-11ee-8c99-0242ac120002",
                          "institutionIdentifiers": {
                              "institutionId": "modelo-sandbox",
                              "institutionCountryCode": "GB"
                          },
                          "vrpSetup": {
                              "limits": {
                                  "periodicLimits": [
                                      {
                                          "maxAmount": {
                                              "amount": 100,
                                              "currency": "GBP"
                                          },
                                          "frequency": "MONTHLY",
                                          "alignment": "CALENDAR"
                                      }
                                  ],
                                  "maxAmountPerPayment": {
                                      "amount": 10,
                                      "currency": "GBP"
                                  }
                              },
                              "recurringPaymentCategory": "ONGOING",
                              "risk": {
                                  "contextType": "ECOMMERCE_MERCHANT"
                              }
                          },
                          "updatedAt": "2023-10-05T07:56:44.552Z",
                          "consentStatus": "AUTHORIZED"
                      }
                  ]
              }
          },
          "revoke-hosted-vrp-consent-response": {
              "description": "Revoke Hosted VRP Consent Response",
              "value": {
                  "meta": {
                      "tracingId": "2dbfd85b4f2940c6a206e96dd90e52d0"
                  },
                  "data": {
                      "id": "ad4bfe58-6352-11ee-8c99-0242ac120002",
                      "applicationUserId": "45cf7ffe-6350-11ee-8c99-0242ac120002",
                      "applicationId": "ea4cdf01ee-278f-4e3e-8b30-695515aa4cdf01d64",
                      "institutionIdentifiers": {
                          "institutionId": "modelo-sandbox",
                          "institutionCountryCode": "GB"
                      },
                      "userSettings": {
                          "language": "en",
                          "location": "GB"
                      },
                      "redirectUrl": "https://tpp-application.com",
                      "vrpSetup": {
                          "payee": {
                              "name": "Merchant Doe",
                              "accountIdentifications": [
                                  {
                                      "identification": "401016",
                                      "type": "SORT_CODE"
                                  },
                                  {
                                      "identification": "71518920",
                                      "type": "ACCOUNT_NUMBER"
                                  }
                              ]
                          },
                          "reference": "Test Payment",
                          "limits": {
                              "periodicLimits": [
                                  {
                                      "maxAmount": {
                                          "amount": 100,
                                          "currency": "GBP"
                                      },
                                      "frequency": "MONTHLY",
                                      "alignment": "CALENDAR"
                                  }
                              ],
                              "maxAmountPerPayment": {
                                  "amount": 10,
                                  "currency": "GBP"
                              }
                          },
                          "validFrom": "2023-10-04T16:41:17.870Z",
                          "validTo": "2024-10-04T16:41:17.870Z",
                          "risk": {
                              "contextType": "ECOMMERCE_MERCHANT"
                          }
                      },
                      "createdAt": "2023-10-05T07:56:44.552Z",
                      "authorisationExpiresAt": "2023-10-05T07:56:44.552Z",
                      "consentStatus": "REVOKED",
                      "phases": [
                          {
                              "phaseName": "INITIATED",
                              "phaseCreatedAt": "2023-05-10T07:56:54.887Z"
                          },
                          {
                              "phaseName": "INPUT_CAPTURED",
                              "phaseCreatedAt": "2023-05-10T07:57:05.123Z"
                          },
                          {
                              "phaseName": "VALIDATION_COMPLETED",
                              "phaseCreatedAt": "2023-05-10T07:57:05.223Z"
                          },
                          {
                              "phaseName": "AUTHORISATION_CREATED",
                              "phaseCreatedAt": "2023-05-10T07:57:06.637Z"
                          },
                          {
                              "phaseName": "AUTHORISED",
                              "phaseCreatedAt": "2023-05-10T07:57:10.637Z"
                          },
                          {
                              "phaseName": "SUBMITTED",
                              "phaseCreatedAt": "2023-05-10T07:57:10.654Z"
                          },
                          {
                              "phaseName": "ACCEPTED",
                              "phaseCreatedAt": "2023-05-10T07:57:11.867Z"
                          },
                          {
                              "phaseName": "REVOKED",
                              "phaseCreatedAt": "2023-05-11T09:57:11.867Z"
                          }
                      ]
                  }
              }
          },
          "create-hosted-vrp-payment-request": {
              "description": "Create Hosted VRP Payment Request",
              "value": {
                  "paymentIdempotencyId": "234g87t58tgeuo848wudjew489",
                  "amount": {
                      "amount": 10,
                      "currency": "GBP"
                  }
              }
          },
          "create-hosted-vrp-fund-confirmation": {
              "description": "Create Hosted VRP Fund Confirmation Request",
              "value": {
                  "reference": "Own Account Sweeping",
                  "paymentAmount": {
                      "amount": 10,
                      "currency": "GBP"
                  }
              }
          },
          "create-hosted-vrp-fund-confirmation-response": {
              "description": "Created Hosted VRP Fund Confirmation Response",
              "value": {
                  "meta": {
                      "tracingId": "0f14e900011b445fa6b6c2c4272d7321"
                  },
                  "data": {
                      "id": "a9582f8e-08be-4cca-9f01-1ad3be96532d",
                      "fundsAvailable": {
                          "fundsAvailable": true,
                          "fundsAvailableAt": "2021-06-08T10:59:35.138Z"
                      },
                      "reference": "Own Account Sweeping",
                      "paymentAmount": {
                          "amount": 10,
                          "currency": "GBP"
                      }
                  }
              }
          },
          "create-hosted-vrp-payment-response": {
              "description": "Created Hosted VRP Payment Response",
              "value": {
                  "meta": {
                      "tracingId": "d80a638a-635e-11ee-8c99-0242ac120002"
                  },
                  "data": {
                      "id": "string",
                      "paymentIdempotencyId": "234g87t58tgeuo848wudjew489",
                      "amount": {
                          "amount": 10,
                          "currency": "GBP"
                      },
                      "reference": "Test Payment",
                      "payee": {
                          "name": "Merchant Doe",
                          "accountIdentifications": [
                              {
                                  "identification": "401016",
                                  "type": "SORT_CODE"
                              },
                              {
                                  "identification": "71518920",
                                  "type": "ACCOUNT_NUMBER"
                              }
                          ]
                      },
                      "refundAccount": {
                          "name": "string",
                          "accountIdentifications": [
                              {
                                  "type": "MASKED_ACCOUNT_NUMBER",
                                  "identification": "*****493"
                              }
                          ]
                      },
                      "paymentLifecycleId": "234g87t58tgeuo848wudjew489",
                      "institutionPaymentId": "35a4bd02-635e-11ee-8c99-0242ac120002",
                      "statusDetails": {
                          "status": "PENDING",
                          "statusUpdateDate": "2023-10-05T09:00:36.360Z",
                          "isoStatus": {
                              "code": "PDNG",
                              "name": "Pending"
                          }
                      }
                  }
              }
          },
          "get-hosted-vrp-payment-response": {
              "description": "Get Hosted VRP Payment Response",
              "value": {
                  "meta": {
                      "tracingId": "d80a638a-635e-11ee-8c99-0242ac120002"
                  },
                  "data": {
                      "id": "string",
                      "paymentIdempotencyId": "234g87t58tgeuo848wudjew489",
                      "amount": {
                          "amount": 10,
                          "currency": "GBP"
                      },
                      "reference": "Test Payment",
                      "payee": {
                          "name": "Merchant Doe",
                          "accountIdentifications": [
                              {
                                  "identification": "401016",
                                  "type": "SORT_CODE"
                              },
                              {
                                  "identification": "71518920",
                                  "type": "ACCOUNT_NUMBER"
                              }
                          ]
                      },
                      "refundAccount": {
                          "name": "string",
                          "accountIdentifications": [
                              {
                                  "type": "MASKED_ACCOUNT_NUMBER",
                                  "identification": "*****493"
                              }
                          ]
                      },
                      "paymentLifecycleId": "234g87t58tgeuo848wudjew489",
                      "institutionPaymentId": "35a4bd02-635e-11ee-8c99-0242ac120002",
                      "statusDetails": {
                          "status": "COMPLETED",
                          "statusUpdateDate": "2023-10-05T09:00:36.360Z",
                          "isoStatus": {
                              "code": "ACSC",
                              "name": "AcceptedSettlementCompleted"
                          }
                      }
                  }
              }
          },
          "application-request": {
              "value": {
                  "name": "Merchant Uno",
                  "merchantCategoryCode": 7995,
                  "ppcUserGroup": "WHOLESALE_FI_FI",
                  "callbackUrls": [
                      "https://www.callback-service.com"
                  ],
                  "isContractPresent": true
              }
          },
          "application-response": {
              "value": {
                  "meta": {
                      "tracingId": "0c2d0973bdd24224a65e5d0f7d1b6154"
                  },
                  "data": {
                      "id": "2698db90-6635-4f76-b673-5ce8e2aeda0e",
                      "name": "Merchant Uno",
                      "merchantCategoryCode": 7995,
                      "ppcUserGroup": "WHOLESALE_FI_FI",
                      "callbackUrls": [
                          "https://www.callback-service.com"
                      ],
                      "isContractPresent": true,
                      "rootApplicationId": "eb25e1ee-f6af-4131-92fe-748e177bf950"
                  }
              }
          },
          "application-responses": {
              "value": {
                  "meta": {
                      "tracingId": "0c2d0973bdd24224a65e5d0f7d1b6154",
                      "count": 1,
            "pagination":  {
                          "offset": 0,
                          "limit": 1,
                          "totalCount": 1
                      }
                  },
                  "data": [
                      {
                          "id": "2698db90-6635-4f76-b673-5ce8e2aeda0e",
                          "name": "Merchant Uno",
                          "merchantCategoryCode": 7995,
                          "ppcUserGroup": "WHOLESALE_FI_FI",
                          "callbackUrls": [
                              "https://www.callback-service.com"
                          ],
                          "isContractPresent": true,
                          "rootApplicationId": "eb25e1ee-f6af-4131-92fe-748e177bf950"
                      }
                  ]
              }
          },
          "application-error-response-code-400": {
              "value": {
                  "name-is-mandatory": {
                      "value": {
                          "errors": [
                              {
                                  "fieldName": "name",
                                  "error": "MANDATORY"
                              }
                          ]
                      }
                  }
              }
          },
          "400-error-response": {
              "description": "400 Error",
              "value": {
                  "error": {
                      "tracingId": "0c2d0973bdd24224a65e5d0f7d1b6154",
                      "code": 400,
                      "status": "BAD_REQUEST",
                      "supportUrl": "https://support.yapily.com/",
                      "source": "YAPILY",
                      "issues": [
                          {
                              "type": "BAD_REQUEST",
                              "code": 10600,
                              "message": "The server could not understand the request due to invalid syntax"
                          }
                      ]
                  }
              }
          },
          "401-error-response": {
              "description": "401 Error",
              "value": {
                  "error": {
                      "tracingId": "0c2d0973bdd24224a65e5d0f7d1b6154",
                      "code": 401,
                      "status": "UNAUTHORIZED",
                      "supportUrl": "https://support.yapily.com/",
                      "source": "YAPILY",
                      "issues": [
                          {
                              "type": "CREDENTIALS",
                              "code": 10700,
                              "message": "Authorization header invalid or credentials not authenticated"
                          }
                      ]
                  }
              }
          },
          "403-error-response": {
              "description": "403 Error",
              "value": {
                  "error": {
                      "tracingId": "0c2d0973bdd24224a65e5d0f7d1b6154",
                      "code": 403,
                      "status": "FORBIDDEN",
                      "supportUrl": "https://support.yapily.com/",
                      "source": "YAPILY",
                      "issues": [
                          {
                            "type": "INVALID_REQUEST",
                            "code": "Yapily.gateway.api.scope.required",
                            "message": "You don't have the right scope to access this resource"
                          }
                      ]
                  }
              }
          },
          "404-error-response": {
              "description": "404 Error",
              "value": {
                  "error": {
                      "tracingId": "0c2d0973bdd24224a65e5d0f7d1b6154",
                      "code": 404,
                      "status": "NOT FOUND",
                      "supportUrl": "https://support.yapily.com/",
                      "source": "YAPILY",
                      "issues": [
                          {
                              "type": "INVALID_REQUEST",
                              "code": 10800,
                              "message": "Resource not found"
                          }
                      ]
                  }
              }
          },
        "406-error-response": {
          "description": "404 Error",
          "value": {
            "error": {
              "tracingId": "0c2d0973bdd24224a65e5d0f7d1b6154",
              "code": 406,
              "status": "NOT_ACCEPTABLE",
              "supportUrl": "https://support.yapily.com/",
              "source": "YAPILY",
              "issues": [
                {
                  "type": "RESOURCE",
                  "code": 14007,
                  "message": "Maximum number of resources that can be created has been reached"
                }
              ]
            }
          }
        },
          "500-error-response": {
              "description": "500 Error",
              "value": {
                  "error": {
                      "tracingId": "0c2d0973bdd24224a65e5d0f7d1b6154",
                      "code": 500,
                      "status": "INTERNAL SERVER ERROR",
                      "supportUrl": "https://support.yapily.com/",
                      "source": "YAPILY",
                      "issues": [
                          {
                              "type": "INTERNAL_SERVER_ERROR",
                              "code": 11000,
                              "message": "Unexpected server error"
                          }
                      ]
                  }
              }
          }
      },
      "responses": {
          "WebhookDetailsWithSecret": {
            "description": "webhook details including the secret",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "metadata": {
                      "$ref": "#/components/schemas/Metadata"
                    },
                    "data": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/RegisteredWebhookWithStatus"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "webhookSecret": {
                              "type": "string",
                              "description": "HMAC secret needed to validate that the request payload is genuine"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "200": {
              "description": "ok"
          },
          "400": {
              "description": "Bad Request.",
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/ApiErrorResponse"
                      }
                  }
              }
          },
          "401": {
              "description": "Unauthorised. Credentials are missing or invalid",
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/ApiErrorResponse"
                      }
                  }
              }
          },
          "403": {
              "description": "Forbidden. Permission to access this endpoint is not granted.",
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/ApiErrorResponse"
                      }
                  }
              }
          },
          "404": {
              "description": "Not Found. Resource requested is not found.",
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/ApiErrorResponse"
                      }
                  }
              }
          },
          "424": {
              "description": "A failure occurred during an interaction with a third party provider.",
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/ApiErrorResponse"
                      }
                  }
              }
          },
          "500": {
              "description": "Unexpected Error.",
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/ApiErrorResponse"
                      }
                  }
              }
          }
      }
  }
}